<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>微机原理作业</title>
    <link href="/2024/10/04/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86%E4%BD%9C%E4%B8%9A/"/>
    <url>/2024/10/04/%E5%BE%AE%E6%9C%BA%E5%8E%9F%E7%90%86%E4%BD%9C%E4%B8%9A/</url>
    
    <content type="html"><![CDATA[<h2 id="作业一">作业一</h2><hr /><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20241004131100773.png"alt="image-20241004131100773" /><figcaption aria-hidden="true">image-20241004131100773</figcaption></figure><p><strong><em>答案（仅供参考）</em></strong></p><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20241004131221951.png"alt="image-20241004131221951" /><figcaption aria-hidden="true">image-20241004131221951</figcaption></figure><h2 id="作业二">作业二</h2><hr /><ol type="1"><li><strong>简述微控制器的工作过程。</strong></li></ol><p>​微控制器的工作过程本质上是<strong>执行程序的过程</strong>。用户编写的程序要预先存放在ROM中，微控制器的工作过程就是<strong>从ROM中逐条取出指令并执行</strong>的过程。</p><p>程序：是完成特定功能的指令序列；对应的指令码存放在ROM中。</p><p>指令：是微控制器指挥各功能部件工作的指示和命令。<em>操作码+操作数</em></p><p>指令执行过程：读取指令-&gt;分析指令-&gt;执行指令</p><blockquote><p>读取指令（取指）：根据程序计数器PC中的值，从ROM中读出当前指令的操作码。</p><p>分析指令（译码）：将指令寄存器IR中的操作码送入指令译码器进行译码，分析该指令要求进行什么操作、操作数在哪里等。</p><p>执行指令（执行）：根据译码结果取出操作数，由逻辑电路发出完成这条指令需要的一系列时序和控制信号，完成指令规定的操作。</p></blockquote><p>​</p><ol start="2" type="1"><li><p><strong>简述8051 MCU的位寻址空间。</strong></p><p><code>8051MCU</code>内部RAM的<code>20H~2FH</code>单元是位寻址区，16个单元共128位，位地址：<code>00H~7FH</code></p><p>对于位寻址空间，<code>MCU</code>可以用位操作指令对其进行访问。位寻址能力是<code>MCU</code>用于控制的重要特征。</p></li><li><p><strong>程序状态寄存器PSW的作用是什么？简述常用标志位的作用。</strong></p></li></ol><p>​ <code>PSW</code>用于存放程序执行过程中反映出的状态信息。</p><blockquote><ul><li>C(Cy)：进位标志，对于无符号数有意义。反映结果是否超出8位无符号数的上限(255)</li><li>OV：溢出标志，对于带符号数有意义。反映结果是否超出8位带符号数的范围(-128~227)</li><li>AC：半进位位标志，反映低半字节有没有向高半字节进位。</li><li>P：反映累加器A中1的个数是偶数个还是奇数个。奇数个，P=1，否则为P=0</li></ul></blockquote><ol start="4" type="1"><li><strong>简述8051 MCU 4个I/O端口的结构特点和使用特性。</strong></li></ol><p>​ <code>P0~P3</code>的第一功能均是<strong>准双向端口</strong>：</p><blockquote><p>在输出时，与真正的双向口一样，CPU向锁存器输出0或1，通过输出驱动电路在引脚上表现为低电平或高电平；</p><p>在输入时，必须先向锁存器输出1，使得输出驱动电路的<code>T2</code>处于截止状态（即先将端口设置为输入方式，然后再输入端口状态，即读引脚）</p></blockquote><ol start="5" type="1"><li><strong>8051MCU内部有哪些工作周期？请简述之。当晶振频率为12MHz时，各种周期分别是多少微秒？</strong></li></ol><ul><li><p>时钟周期(振荡周期）T<sub>0</sub>：是外接晶振频率的倒数。是<code>MCU</code>最基本最小的时间单位。</p></li><li><p>状态周期S：在<code>8051MCU</code>中，1个时钟周期定义为1个节拍P，连续两个节拍P<sub>1</sub>和P<sub>2</sub>定义为一个状态周期S</p></li><li><p>机器周期T<sub>M</sub>：机器周期是<code>MCU</code>执行一个基本硬件操作所需要的时间。<code>8051MCU</code>一个机器周期由6个状态周期组成。<span class="math display">\[T_M=6S=12T_0\]</span></p><p><span class="math display">\[f_{osc}=12MHz\]</span></p><p><span class="math display">\[T_0= \frac{1}{f_{osc}}=\frac{1}{12}{\mu s}\]</span></p><p><span class="math display">\[S=2T_0=\frac{1}{6}{\mu s}\]</span></p><p><span class="math display">\[T_M=6S=1{\mu s}\]</span></p></li></ul><hr />]]></content>
    
    
    <categories>
      
      <category>大三课程上</category>
      
    </categories>
    
    
    <tags>
      
      <tag>微机原理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>STM32CubeMx</title>
    <link href="/2024/10/02/STM32CubeMx/"/>
    <url>/2024/10/02/STM32CubeMx/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
    <tags>
      
      <tag>STM32CubeMX</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>stm32学习</title>
    <link href="/2024/08/31/stm32%E5%AD%A6%E4%B9%A0/"/>
    <url>/2024/08/31/stm32%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<p><em>在b站大学学习stm32时候做的笔记</em> [<ahref="https://www.bilibili.com/video/BV1th411z7sn?p=1&amp;vd_source=b94f6aa4bb4f3465ef91f93357149559">1-1]课程简介_哔哩哔哩_bilibili</a></p><h1 id="stm32f103c8t6概要">1. STM32F103C8T6概要</h1><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240901164623773.png"alt="STM32F103C8T6" /><figcaption aria-hidden="true">STM32F103C8T6</figcaption></figure><h2 id="片上资源外设peripheral">片上资源/外设（Peripheral)</h2><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240901164715470.png"alt="片上外设" /><figcaption aria-hidden="true">片上外设</figcaption></figure><blockquote><p>绿色部分是内核内的外设，其他就是内核外的外设（<em>C8T6没有后面四个外设</em>）</p><ol type="1"><li>NVIC：内核中用来管理中断的设备，配置中断优先级</li><li>SysTick：内核中的一个定时器，主要用于给操作系统提供定时服务，但我们不用操作系统，主要就用它来实现delay函数的功能</li><li>RCC：对系统的时钟进行配置，使能各模块的时钟，在stm32中，其他外设在上电情况下是<strong>默认没有时钟的</strong>，不给时钟的情况下，操作外设无效，外设不会工作，目的是降低功耗。<strong>所以在操作外设之前必须要使能它的时钟</strong>，RCC完成时钟的使能</li><li>GPIO：通用的IO口，用来电点灯，读取按键</li><li>AFIO：复用IO口，完成复用功能端口的重定义，中断端口的配置</li><li>EXTI：外部中断，配置好外部中断，当引脚有电平变化时就可以触发中断，让cpu处理任务</li><li>TIM：stm32最常用，功能最多的外设，分为高级定时器，通用定时器（常用，可以完成定时中断，测频率，生成pwm波，配置成专用的编码器接口），基本定时器</li><li>ADC：该stm32内置了12位的ADC，可以直接读取io口的模拟电压值，无需外部连接AD芯片</li><li>DMA：帮助cpu完成搬运大量数据</li><li>USART：UART时异步串口</li><li>通信协议：I2C SPI CAN USB</li><li>CRC：一种数据校验方式，用于判断数据的正确性</li><li>看门狗：当单片机出现死循环时，看门狗可以复位程序</li></ol></blockquote><h2 id="命名规则">命名规则</h2><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240901170720284.png"alt="命名规则" /><figcaption aria-hidden="true">命名规则</figcaption></figure><h2 id="系统结构">系统结构</h2><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240901170813085.png"alt="系统结构" /><figcaption aria-hidden="true">系统结构</figcaption></figure><blockquote><p>参照这张图，我们可以知道哪些外设对应哪些总线</p></blockquote><h2 id="芯片引脚定义">芯片引脚定义</h2><p><img src="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240901171119888.png" alt="引脚定义" style="zoom:150%;" /></p><h1 id="新建stm32工程工程模板">2. 新建stm32工程（工程模板）</h1><p>[<ahref="https://www.bilibili.com/video/BV1th411z7sn?p=4&amp;vd_source=b94f6aa4bb4f3465ef91f93357149559">2-2]新建工程_哔哩哔哩_bilibili</a></p><p><strong>总结</strong></p><ul><li><p>建立工程文件夹，Keil中新建工程，选择型号</p></li><li><p>工程文件夹里建立Start、Library、User等文件夹，复制固件库里面的文件到工程文件夹</p></li><li><p>工程里对应建立Start、Library、User等同名称的分组，然后将文件夹内的文件添加到工程分组里</p></li><li><p>工程选项，C/C++，IncludePaths内声明所有包含头文件的文件夹</p></li><li><p>工程选项，C/C++，Define内定义USE_STDPERIPH_DRIVER</p></li><li><p>工程选项，Debug，下拉列表选择对应调试器，Settings，FlashDownload里勾选Reset and Run</p><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240901195100010.png"alt="总体工程架构" /><figcaption aria-hidden="true">总体工程架构</figcaption></figure></li></ul><h2 id="在keil5中新建工程">1. 在keil5中新建工程</h2><p><em>建立工程文件夹存放工程，工程文件夹名称以后还可以改，但是工程名称后面再改就比较麻烦，所以起工程模板的名称要比较通用</em></p><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240901174844110.png"alt="工程文件夹名称" /><figcaption aria-hidden="true">工程文件夹名称</figcaption></figure><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240901175102605.png"alt="工程名称" /><figcaption aria-hidden="true">工程名称</figcaption></figure><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240901175206300.png"alt="选择芯片系列" /><figcaption aria-hidden="true">选择芯片系列</figcaption></figure><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240901175251662.png"alt="新建工程小助手" /><figcaption aria-hidden="true">新建工程小助手</figcaption></figure><blockquote><p>这个是keil软件的额一个新建工程小助手，可以帮助我们快速新建工程，这里直接cancel或者叉掉就行</p></blockquote><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240901175436927.png"alt="第一步完成" /><figcaption aria-hidden="true">第一步完成</figcaption></figure><h2 id="建立start文件夹存放stm32的启动文件">2.建立Start文件夹存放stm32的启动文件</h2><h3 id="在文件资源管理器中建立start文件夹添加所有文件">1.在文件资源管理器中建立Start文件夹添加所有文件</h3><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240901175642102.png"alt="文件资源管理器中新建Start文件夹" /><figcaptionaria-hidden="true">文件资源管理器中新建Start文件夹</figcaption></figure><blockquote><p>stm32的启动文件，在<code>\STM32F10x_StdPeriph_Lib_V3.5.0\STM32F10x_StdPeriph_Lib_V3.5.0\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup</code>文件夹下，全都复制到<code>Start</code>文件夹下（但实际我们后面要添加到工程里的是根据我们的芯片来确定的，这个芯片要用的是后缀<code>md.s</code>）</p><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240901180119877.png"alt="启动文件" /><figcaption aria-hidden="true">启动文件</figcaption></figure><p>选择的启动文件和芯片型号的关系：</p><table><thead><tr><th><strong>缩写</strong></th><th><strong>释义</strong></th><th><strong>Flash容量</strong></th><th><strong>型号</strong></th></tr></thead><tbody><tr><td>LD_VL</td><td>小容量产品超值系列</td><td>16~32K</td><td>STM32F100</td></tr><tr><td>MD_VL</td><td>中容量产品超值系列</td><td>64~128K</td><td>STM32F100</td></tr><tr><td>HD_VL</td><td>大容量产品超值系列</td><td>256~512K</td><td>STM32F100</td></tr><tr><td>LD</td><td>小容量产品</td><td>16~32K</td><td>STM32F101/102/103</td></tr><tr><td>MD</td><td>中容量产品</td><td>64~128K</td><td>STM32F101/102/103</td></tr><tr><td>HD</td><td>大容量产品</td><td>256~512K</td><td>STM32F101/102/103</td></tr><tr><td>XL</td><td>加大容量产品</td><td>大于512K</td><td>STM32F101/102/103</td></tr><tr><td>CL</td><td>互联型产品</td><td>-</td><td>STM32F105/107</td></tr></tbody></table></blockquote><blockquote><p>外核寄存器描述文件和时钟配置文件：在<code>\STM32F10x_StdPeriph_Lib_V3.5.0\STM32F10x_StdPeriph_Lib_V3.5.0\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x</code>下</p><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240901180659555.png"alt="外核寄存器描述文件和时钟配置文件" /><figcaptionaria-hidden="true">外核寄存器描述文件和时钟配置文件</figcaption></figure><ol type="1"><li><code>stm32f10x.h</code>是stm32的外设寄存器描述文件，描述stm32有哪些寄存器和它对应的地址的</li><li>两个system文件是用来配置时钟的</li></ol><p>这三个文件也复制到<code>Start</code>文件夹下</p></blockquote><blockquote><p>内核寄存器描述文件：在<code>\STM32F10x_StdPeriph_Lib_V3.5.0\STM32F10x_StdPeriph_Lib_V3.5.0\Libraries\CMSIS\CM3\CoreSupport</code>下</p><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240901181224539.png"alt="内核寄存器描述文件" /><figcaption aria-hidden="true">内核寄存器描述文件</figcaption></figure><p>也是复制到<code>Start</code>文件夹下</p></blockquote><blockquote><p>现在Start文件夹下是这样的：</p><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240901181336951.png"alt="Start文件夹" /><figcaption aria-hidden="true">Start文件夹</figcaption></figure></blockquote><h3 id="在keil5里建一个组start来添加我们需要的文件">2.在keil5里建一个组Start来添加我们需要的文件</h3><blockquote><ol type="1"><li><p>先改名成Start，然后添加已存在文件到组”Start“中</p><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240901181745911.png"alt="keil新建Start组" /><figcaption aria-hidden="true">keil新建Start组</figcaption></figure></li><li><p>添加后如下（小钥匙的标识表示只读，在添加时候记得文件类型选择<code>all files</code>，不然有些文件你找不到，按住<code>ctrl</code>键依次选择我们需要的文件）</p><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240901182106279.png"alt="添加所有所需文件后" /><figcaption aria-hidden="true">添加所有所需文件后</figcaption></figure></li></ol></blockquote><h3id="在工程选项中添加上这个文件夹的头文件路径否则软件是找不到.h文件的">3.在工程选项中添加上这个文件夹的头文件路径，否则软件是找不到.h文件的</h3><blockquote><p>魔术棒 ==&gt; c/c++ ==&gt;include Paths 将Start文件夹路径添加进来</p><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240901182720640.png"alt="C/C++编译配置1" /><figcaption aria-hidden="true">C/C++编译配置1</figcaption></figure><p>要注意的是<code>Code Generation</code>这里要选版本5</p><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240901182819174.png"alt="C/C++编译配置2" /><figcaption aria-hidden="true">C/C++编译配置2</figcaption></figure></blockquote><h2 id="建立user文件夹存放我们的代码main.c">3.建立User文件夹存放我们的代码（main.c）</h2><ol type="1"><li><p>在文件资源管理器中新建User文件夹</p></li><li><p>在keil5中新建<code>User</code>组然后新建文件<code>main.c</code>，注意路径要选择User文件夹下</p></li></ol><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240901183306466.png"alt="新建User组" /><figcaption aria-hidden="true">新建User组</figcaption></figure><ol start="3" type="1"><li><p>右键插入头文件，选择<code>stm32f10x.h</code></p><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240901183444632.png"alt="插入头文件" /><figcaption aria-hidden="true">插入头文件</figcaption></figure></li><li><p>点击右上的小扳手可以对编辑器进行一些修改，tap的缩进，字体大小，编码格式等，有需要可以进行更改</p><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240901183736822.png"alt="编辑器配置修改" /><figcaption aria-hidden="true">编辑器配置修改</figcaption></figure></li><li><p>完善代码，注意最后一行必须是空行，不然会警告</p><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240901183927575.png"alt="最后一行空行" /><figcaption aria-hidden="true">最后一行空行</figcaption></figure></li></ol><blockquote><p>如果想要使用寄存器开发，那么工程建立到这就行了</p><p>操作寄存器开发的代码很简洁，但是不太方便，需要一直查数据手册看每一位是干啥的</p></blockquote><h2 id="下载调试">4. 下载调试</h2><blockquote><p>魔术棒 ==&gt; Debugger 选择我们的调试器，这里选ST-Lingk</p><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240901184330429.png"alt="选择调试器" /><figcaption aria-hidden="true">选择调试器</figcaption></figure><p>然后进到<code>setting</code>里，如果正常连接<code>ST-Link</code>，<code>SW Device</code>是下面这样的，否则就会有error</p><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240901184415523.png"alt="检查是否正常连接" /><figcaption aria-hidden="true">检查是否正常连接</figcaption></figure><p>最后是<code>Flash Download</code> 勾选<code>Reset and Run</code>下载程序以后立马复位并执行，注意<code>Pack</code>里要把Enable的打勾给去掉才能下载程序后立马执行</p><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240901184613584.png"alt="下载后立刻复位并执行" /><figcaption aria-hidden="true">下载后立刻复位并执行</figcaption></figure></blockquote><h2 id="为工程添加库函数">5. 为工程添加库函数</h2><ol type="1"><li><p>在文件资源管理器中新建<code>Library</code>文件夹用来存放库函数</p></li><li><p>在<code>\STM32F10x_StdPeriph_Lib_V3.5.0\STM32F10x_StdPeriph_Lib_V3.5.0\Libraries\STM32F10x_StdPeriph_Driver\src</code>下都是库函数的源文件，在<code>\STM32F10x_StdPeriph_Lib_V3.5.0\STM32F10x_StdPeriph_Lib_V3.5.0\Libraries\STM32F10x_StdPeriph_Driver\inc</code>下都是库函数的头文件，这些全都复制到<code>Library</code>文件夹中</p></li><li><p>在keil5中新建组<code>Library</code>，添加Library文件夹下的所有文件，在工程中添加文件夹的头文件路径</p></li></ol><blockquote><p>但是这些库函数还不能使用，在<code>\STM32F10x_StdPeriph_Lib_V3.5.0\STM32F10x_StdPeriph_Lib_V3.5.0\Project\STM32F10x_StdPeriph_Template</code>下有这几个文件是我们需要的：</p><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240901190423927.png"alt="添加库函数配置文件和中断文件" /><figcaption aria-hidden="true">添加库函数配置文件和中断文件</figcaption></figure><ol type="1"><li><p><code>conf</code>文件是用来配置库函数头文件的包含关系的，还有用来参数检查的函数定义，都是所有库函数需要的</p></li><li><p>两个it文件时用来存放中断函数的</p></li><li><p>在文件资源管理器中把这3个文件复制到<code>User</code>目录下，然后再keil5中把这3个文件添加到User组里，然后记得把User也添加头文件路径<code>Include Paths</code>里</p><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240901190804879.png"alt="放到我们的User文件夹下" /><figcaption aria-hidden="true">放到我们的User文件夹下</figcaption></figure></li><li><p>最后还需要一个宏定义，打开<code>stm32f10x.h</code>，滑到最后找到<code>USE_STDPERIPH_DRIVER</code></p><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240901191223608.png"alt="找到宏定义" /><figcaption aria-hidden="true">找到宏定义</figcaption></figure><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240901191250567.png"alt="宏定义" /><figcaption aria-hidden="true">宏定义</figcaption></figure><p>条件编译，意思是你定义了USE_STDPERIPH_DRIVER这个字符串，下面这个includeconf.h才有效</p><p>所以我们需要复制这个语句<code>USE_STDPERIPH_DRIVER</code>，打开工程选项，在c/c++的Define中粘贴这个字符串</p><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240901191807500.png"alt="添加宏定义在C/C++的Define中" /><figcaption aria-hidden="true">添加宏定义在C/C++的Define中</figcaption></figure></li></ol></blockquote><p>这样，我们基于库函数的工程就建完了。</p><h1 id="gpio">3. GPIO</h1><h2 id="简要说明">简要说明</h2><blockquote><p>•GPIO（General Purpose Input Output）通用输入输出口</p><p>•可配置为8种输入输出模式</p><p>•引脚电平：0V~3.3V，部分引脚可容忍5V（输入5v但输出最高就是3.3v）</p><p>•输出模式下可控制端口输出高低电平，用以驱动LED、控制蜂鸣器、模拟通信协议输出时序等</p><p>•输入模式下可读取端口的高低电平或电压，用于读取按键输入、外接模块电平信号输入、ADC电压采集、模拟通信协议接收数据等</p><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240901200419667.png"alt="GPIO基本结构" /><figcaption aria-hidden="true">GPIO基本结构</figcaption></figure><p>•通过配置GPIO的端口配置寄存器，端口可以配置成以下8种模式</p><table><thead><tr><th><strong>模式名称</strong></th><th><strong>性质</strong></th><th><strong>特征</strong></th></tr></thead><tbody><tr><td>浮空输入 GPIO_Mode_IN_FLOATING</td><td>数字输入</td><td>可读取引脚电平，若引脚悬空，则电平不确定</td></tr><tr><td>上拉输入 GPIO_Mode_IPU</td><td>数字输入</td><td>可读取引脚电平，内部连接上拉电阻，悬空时默认高电平</td></tr><tr><td>下拉输入 GPIO_Mode_IPD</td><td>数字输入</td><td>可读取引脚电平，内部连接下拉电阻，悬空时默认低电平</td></tr><tr><td>模拟输入 GPIO_Mode_AIN</td><td>模拟输入</td><td>GPIO无效，引脚直接接入内部ADC</td></tr><tr><td>开漏输出 GPIO_Mode_Out_OD</td><td>数字输出</td><td>可输出引脚电平，高电平为高阻态，低电平接VSS</td></tr><tr><td>推挽输出 GPIO_Mode_Out_PP</td><td>数字输出</td><td>可输出引脚电平，高电平接VDD，低电平接VSS</td></tr><tr><td>复用开漏输出 GPIO_Mode_AF_OD</td><td>数字输出</td><td>由片上外设控制，高电平为高阻态，低电平接VSS</td></tr><tr><td>复用推挽输出 GPIO_Mode_AF_PP</td><td>数字输出</td><td>由片上外设控制，高电平接VDD，低电平接VSS</td></tr></tbody></table><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240901201627190.png"alt="输入配置图" /><figcaption aria-hidden="true">输入配置图</figcaption></figure><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240901201705628.png"alt="复用功能配置" /><figcaption aria-hidden="true">复用功能配置</figcaption></figure></blockquote><h2 id="个步骤">3个步骤</h2><blockquote><p>操作GPIO的3个步骤：</p><ol type="1"><li>使用RCC开始GPIO的时钟</li><li>使用GPIO_Init函数初始化GPIO</li><li>使用输出或者输入函数控制GPIO口</li></ol></blockquote><h2 id="重要函数">重要函数</h2><blockquote><p><em>通过相关的头文件找到函数声明，再转到对应的.c文件中查看函数定义，如前3个函数与RCC相关的都在stm32f10x_rcc.h中，GPIO相关函数在stm32f10x_gpio.h中，<strong>要学习库函数怎么使用就是去看对应的源文件</strong></em></p><ol type="1"><li><p>AHB外设总线控制</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * @brief  Enables or disables the AHB peripheral clock.</span><br><span class="hljs-comment">  * @param  RCC_AHBPeriph: specifies the AHB peripheral to gates its clock.</span><br><span class="hljs-comment">  *   </span><br><span class="hljs-comment">  *   For @b STM32_Connectivity_line_devices, this parameter can be any combination</span><br><span class="hljs-comment">  *   of the following values:        </span><br><span class="hljs-comment">  *     @arg RCC_AHBPeriph_DMA1</span><br><span class="hljs-comment">  *     @arg RCC_AHBPeriph_DMA2</span><br><span class="hljs-comment">  *     @arg RCC_AHBPeriph_SRAM</span><br><span class="hljs-comment">  *     @arg RCC_AHBPeriph_FLITF</span><br><span class="hljs-comment">  *     @arg RCC_AHBPeriph_CRC</span><br><span class="hljs-comment">  *     @arg RCC_AHBPeriph_OTG_FS    </span><br><span class="hljs-comment">  *     @arg RCC_AHBPeriph_ETH_MAC   </span><br><span class="hljs-comment">  *     @arg RCC_AHBPeriph_ETH_MAC_Tx</span><br><span class="hljs-comment">  *     @arg RCC_AHBPeriph_ETH_MAC_Rx</span><br><span class="hljs-comment">  * </span><br><span class="hljs-comment">  *   For @b other_STM32_devices, this parameter can be any combination of the </span><br><span class="hljs-comment">  *   following values:        </span><br><span class="hljs-comment">  *     @arg RCC_AHBPeriph_DMA1</span><br><span class="hljs-comment">  *     @arg RCC_AHBPeriph_DMA2</span><br><span class="hljs-comment">  *     @arg RCC_AHBPeriph_SRAM</span><br><span class="hljs-comment">  *     @arg RCC_AHBPeriph_FLITF</span><br><span class="hljs-comment">  *     @arg RCC_AHBPeriph_CRC</span><br><span class="hljs-comment">  *     @arg RCC_AHBPeriph_FSMC</span><br><span class="hljs-comment">  *     @arg RCC_AHBPeriph_SDIO</span><br><span class="hljs-comment">  *   </span><br><span class="hljs-comment">  * @note SRAM and FLITF clock can be disabled only during sleep mode.</span><br><span class="hljs-comment">  * @param  NewState: new state of the specified peripheral clock.</span><br><span class="hljs-comment">  *   This parameter can be: ENABLE or DISABLE.</span><br><span class="hljs-comment">  * @retval None</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">RCC_AHBPeriphClockCmd</span><span class="hljs-params">(<span class="hljs-type">uint32_t</span> RCC_AHBPeriph, FunctionalState NewState)</span><br></code></pre></td></tr></table></figure></li><li><p>APB2</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * @brief  Enables or disables the High Speed APB (APB2) peripheral clock.</span><br><span class="hljs-comment">  * @param  RCC_APB2Periph: specifies the APB2 peripheral to gates its clock.</span><br><span class="hljs-comment">  *   This parameter can be any combination of the following values:</span><br><span class="hljs-comment">  *     @arg RCC_APB2Periph_AFIO, RCC_APB2Periph_GPIOA, RCC_APB2Periph_GPIOB,</span><br><span class="hljs-comment">  *          RCC_APB2Periph_GPIOC, RCC_APB2Periph_GPIOD, RCC_APB2Periph_GPIOE,</span><br><span class="hljs-comment">  *          RCC_APB2Periph_GPIOF, RCC_APB2Periph_GPIOG, RCC_APB2Periph_ADC1,</span><br><span class="hljs-comment">  *          RCC_APB2Periph_ADC2, RCC_APB2Periph_TIM1, RCC_APB2Periph_SPI1,</span><br><span class="hljs-comment">  *          RCC_APB2Periph_TIM8, RCC_APB2Periph_USART1, RCC_APB2Periph_ADC3,</span><br><span class="hljs-comment">  *          RCC_APB2Periph_TIM15, RCC_APB2Periph_TIM16, RCC_APB2Periph_TIM17,</span><br><span class="hljs-comment">  *          RCC_APB2Periph_TIM9, RCC_APB2Periph_TIM10, RCC_APB2Periph_TIM11     </span><br><span class="hljs-comment">  * @param  NewState: new state of the specified peripheral clock.</span><br><span class="hljs-comment">  *   This parameter can be: ENABLE or DISABLE.</span><br><span class="hljs-comment">  * @retval None</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">RCC_APB2PeriphClockCmd</span><span class="hljs-params">(<span class="hljs-type">uint32_t</span> RCC_APB2Periph, FunctionalState NewState)</span><br></code></pre></td></tr></table></figure></li><li><p>APB1</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * @brief  Enables or disables the Low Speed APB (APB1) peripheral clock.</span><br><span class="hljs-comment">  * @param  RCC_APB1Periph: specifies the APB1 peripheral to gates its clock.</span><br><span class="hljs-comment">  *   This parameter can be any combination of the following values:</span><br><span class="hljs-comment">  *     @arg RCC_APB1Periph_TIM2, RCC_APB1Periph_TIM3, RCC_APB1Periph_TIM4,</span><br><span class="hljs-comment">  *          RCC_APB1Periph_TIM5, RCC_APB1Periph_TIM6, RCC_APB1Periph_TIM7,</span><br><span class="hljs-comment">  *          RCC_APB1Periph_WWDG, RCC_APB1Periph_SPI2, RCC_APB1Periph_SPI3,</span><br><span class="hljs-comment">  *          RCC_APB1Periph_USART2, RCC_APB1Periph_USART3, RCC_APB1Periph_USART4, </span><br><span class="hljs-comment">  *          RCC_APB1Periph_USART5, RCC_APB1Periph_I2C1, RCC_APB1Periph_I2C2,</span><br><span class="hljs-comment">  *          RCC_APB1Periph_USB, RCC_APB1Periph_CAN1, RCC_APB1Periph_BKP,</span><br><span class="hljs-comment">  *          RCC_APB1Periph_PWR, RCC_APB1Periph_DAC, RCC_APB1Periph_CEC,</span><br><span class="hljs-comment">  *          RCC_APB1Periph_TIM12, RCC_APB1Periph_TIM13, RCC_APB1Periph_TIM14</span><br><span class="hljs-comment">  * @param  NewState: new state of the specified peripheral clock.</span><br><span class="hljs-comment">  *   This parameter can be: ENABLE or DISABLE.</span><br><span class="hljs-comment">  * @retval None</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">RCC_APB1PeriphClockCmd</span><span class="hljs-params">(<span class="hljs-type">uint32_t</span> RCC_APB1Periph, FunctionalState NewState)</span><br></code></pre></td></tr></table></figure></li><li><p>GPIO控制函数（常用，一个初始化GPIO，一个初始化GPIO结构体，四个读取GPIO，四个写入GPIO）具体还是看gpio.c文件吧</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><code class="hljs c">   <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * @brief  Initializes the GPIOx peripheral according to the specified</span><br><span class="hljs-comment">     *         parameters in the GPIO_InitStruct.</span><br><span class="hljs-comment">     * @param  GPIOx: where x can be (A..G) to select the GPIO peripheral.</span><br><span class="hljs-comment">     * @param  GPIO_InitStruct: pointer to a GPIO_InitTypeDef structure that</span><br><span class="hljs-comment">     *         contains the configuration information for the specified GPIO peripheral.</span><br><span class="hljs-comment">     * @retval None</span><br><span class="hljs-comment">     */</span><br>   <span class="hljs-type">void</span> <span class="hljs-title function_">GPIO_Init</span><span class="hljs-params">(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct)</span><br>              <br>             <span class="hljs-comment">/**</span><br><span class="hljs-comment">    * @brief  Fills each GPIO_InitStruct member with its default value.</span><br><span class="hljs-comment">    * @param  GPIO_InitStruct : pointer to a GPIO_InitTypeDef structure which will</span><br><span class="hljs-comment">    *         be initialized.</span><br><span class="hljs-comment">    * @retval None</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-type">void</span> <span class="hljs-title function_">GPIO_StructInit</span><span class="hljs-params">(GPIO_InitTypeDef* GPIO_InitStruct)</span><br>   <br>          <br>          <span class="hljs-comment">/**</span><br><span class="hljs-comment">    * @brief  Reads the specified input port pin.</span><br><span class="hljs-comment">    * @param  GPIOx: where x can be (A..G) to select the GPIO peripheral.</span><br><span class="hljs-comment">    * @param  GPIO_Pin:  specifies the port bit to read.</span><br><span class="hljs-comment">    *   This parameter can be GPIO_Pin_x where x can be (0..15).</span><br><span class="hljs-comment">    * @retval The input port pin value.</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-type">uint8_t</span> <span class="hljs-title function_">GPIO_ReadInputDataBit</span><span class="hljs-params">(GPIO_TypeDef* GPIOx, <span class="hljs-type">uint16_t</span> GPIO_Pin)</span><br>   <br>          <br>          <span class="hljs-comment">/**</span><br><span class="hljs-comment">    * @brief  Reads the specified GPIO input data port.</span><br><span class="hljs-comment">    * @param  GPIOx: where x can be (A..G) to select the GPIO peripheral.</span><br><span class="hljs-comment">    * @retval GPIO input data port value.</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-type">uint16_t</span> <span class="hljs-title function_">GPIO_ReadInputData</span><span class="hljs-params">(GPIO_TypeDef* GPIOx)</span><br>   <br>          <br>          <span class="hljs-comment">/**</span><br><span class="hljs-comment">    * @brief  Reads the specified output data port bit.</span><br><span class="hljs-comment">    * @param  GPIOx: where x can be (A..G) to select the GPIO peripheral.</span><br><span class="hljs-comment">    * @param  GPIO_Pin:  specifies the port bit to read.</span><br><span class="hljs-comment">    *   This parameter can be GPIO_Pin_x where x can be (0..15).</span><br><span class="hljs-comment">    * @retval The output port pin value.</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-type">uint8_t</span> <span class="hljs-title function_">GPIO_ReadOutputDataBit</span><span class="hljs-params">(GPIO_TypeDef* GPIOx, <span class="hljs-type">uint16_t</span> GPIO_Pin)</span><br>   <br>          <br>          <span class="hljs-comment">/**</span><br><span class="hljs-comment">    * @brief  Reads the specified GPIO output data port.</span><br><span class="hljs-comment">    * @param  GPIOx: where x can be (A..G) to select the GPIO peripheral.</span><br><span class="hljs-comment">    * @retval GPIO output data port value.</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-type">uint16_t</span> <span class="hljs-title function_">GPIO_ReadOutputData</span><span class="hljs-params">(GPIO_TypeDef* GPIOx)</span><br>   <br>          <br>          <span class="hljs-comment">/**</span><br><span class="hljs-comment">    * @brief  Sets the selected data port bits.</span><br><span class="hljs-comment">    * @param  GPIOx: where x can be (A..G) to select the GPIO peripheral.</span><br><span class="hljs-comment">    * @param  GPIO_Pin: specifies the port bits to be written.</span><br><span class="hljs-comment">    *   This parameter can be any combination of GPIO_Pin_x where x can be (0..15).</span><br><span class="hljs-comment">    * @retval None</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-type">void</span> <span class="hljs-title function_">GPIO_SetBits</span><span class="hljs-params">(GPIO_TypeDef* GPIOx, <span class="hljs-type">uint16_t</span> GPIO_Pin)</span><br>   <br>          <br>          <span class="hljs-comment">/**</span><br><span class="hljs-comment">    * @brief  Clears the selected data port bits.</span><br><span class="hljs-comment">    * @param  GPIOx: where x can be (A..G) to select the GPIO peripheral.</span><br><span class="hljs-comment">    * @param  GPIO_Pin: specifies the port bits to be written.</span><br><span class="hljs-comment">    *   This parameter can be any combination of GPIO_Pin_x where x can be (0..15).</span><br><span class="hljs-comment">    * @retval None</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-type">void</span> <span class="hljs-title function_">GPIO_ResetBits</span><span class="hljs-params">(GPIO_TypeDef* GPIOx, <span class="hljs-type">uint16_t</span> GPIO_Pin)</span><br>   <br>          <br>          <span class="hljs-comment">/**</span><br><span class="hljs-comment">    * @brief  Sets or clears the selected data port bit.</span><br><span class="hljs-comment">    * @param  GPIOx: where x can be (A..G) to select the GPIO peripheral.</span><br><span class="hljs-comment">    * @param  GPIO_Pin: specifies the port bit to be written.</span><br><span class="hljs-comment">    *   This parameter can be one of GPIO_Pin_x where x can be (0..15).</span><br><span class="hljs-comment">    * @param  BitVal: specifies the value to be written to the selected bit.</span><br><span class="hljs-comment">    *   This parameter can be one of the BitAction enum values:</span><br><span class="hljs-comment">    *     @arg Bit_RESET: to clear the port pin</span><br><span class="hljs-comment">    *     @arg Bit_SET: to set the port pin</span><br><span class="hljs-comment">    * @retval None</span><br><span class="hljs-comment">    */</span><br>   <span class="hljs-type">void</span> <span class="hljs-title function_">GPIO_WriteBit</span><span class="hljs-params">(GPIO_TypeDef* GPIOx, <span class="hljs-type">uint16_t</span> GPIO_Pin, BitAction BitVal)</span><br>   <br>          <span class="hljs-comment">/**</span><br><span class="hljs-comment">          </span><br><span class="hljs-comment">   * @brief  Writes data to the specified GPIO data port.</span><br><span class="hljs-comment">   * @param  GPIOx: where x can be (A..G) to select the GPIO peripheral.</span><br><span class="hljs-comment">   * @param  PortVal: specifies the value to be written to the port output data register.</span><br><span class="hljs-comment">   * @retval None</span><br><span class="hljs-comment">   */</span><br>    <span class="hljs-type">void</span> <span class="hljs-title function_">GPIO_Write</span><span class="hljs-params">(GPIO_TypeDef* GPIOx, <span class="hljs-type">uint16_t</span> PortVal)</span><br><br>       <br><br>## LED闪烁代码<br><br>工程架构（延时函数是用的江协提供的，放到System文件夹下）<br><br>![工程架构]<span class="hljs-params">(https:<span class="hljs-comment">//cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240902095126221.png)</span></span><br><span class="hljs-params"></span><br><span class="hljs-params">`main.c`</span><br><span class="hljs-params"></span><br><span class="hljs-params">```c</span><br><span class="hljs-params">#include <span class="hljs-string">&quot;stm32f10x.h&quot;</span>                  <span class="hljs-comment">// Device header</span></span><br><span class="hljs-params">#include <span class="hljs-string">&quot;Delay.h&quot;</span></span><br><span class="hljs-params"></span><br><span class="hljs-params"><span class="hljs-type">int</span> main(<span class="hljs-type">void</span>)</span><br><span class="hljs-params">&#123;</span><br><span class="hljs-params"><span class="hljs-comment">/*开启时钟*/</span></span><br><span class="hljs-params">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);<span class="hljs-comment">//开启GPIOA的时钟</span></span><br><span class="hljs-params"><span class="hljs-comment">//使用各个外设前必须开启时钟，否则对外设的操作无效</span></span><br><span class="hljs-params"></span><br><span class="hljs-params"><span class="hljs-comment">/*GPIO初始化*/</span></span><br><span class="hljs-params">GPIO_InitTypeDef GPIO_InitStructure;<span class="hljs-comment">//定义结构体变量</span></span><br><span class="hljs-params"></span><br><span class="hljs-params">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;<span class="hljs-comment">//GPIO模式，赋值为推挽输出模式</span></span><br><span class="hljs-params">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;<span class="hljs-comment">//GPIO引脚，赋值为第0号引脚</span></span><br><span class="hljs-params">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;<span class="hljs-comment">//GPIO速度，赋值为50MHz</span></span><br><span class="hljs-params"></span><br><span class="hljs-params">GPIO_Init(GPIOA, &amp;GPIO_InitStructure);<span class="hljs-comment">//将赋值后的构体变量传递给GPIO_Init函数</span></span><br><span class="hljs-params"><span class="hljs-comment">//函数内部会自动根据结构体的参数配置相应寄存器</span></span><br><span class="hljs-params"><span class="hljs-comment">//实现GPIOA的初始化</span></span><br><span class="hljs-params"></span><br><span class="hljs-params"><span class="hljs-comment">/*主循环，循环体内的代码会一直循环执行*/</span></span><br><span class="hljs-params"><span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>)</span><br><span class="hljs-params">&#123;</span><br><span class="hljs-params"><span class="hljs-comment">/*设置PA0引脚的高低电平，实现LED闪烁，下面展示3种方法*/</span></span><br><span class="hljs-params"></span><br><span class="hljs-params"><span class="hljs-comment">/*方法1：GPIO_ResetBits设置低电平，GPIO_SetBits设置高电平*/</span></span><br><span class="hljs-params">GPIO_ResetBits(GPIOA, GPIO_Pin_0);<span class="hljs-comment">//将PA0引脚设置为低电平</span></span><br><span class="hljs-params">Delay_ms(<span class="hljs-number">500</span>);<span class="hljs-comment">//延时500ms</span></span><br><span class="hljs-params">GPIO_SetBits(GPIOA, GPIO_Pin_0);<span class="hljs-comment">//将PA0引脚设置为高电平</span></span><br><span class="hljs-params">Delay_ms(<span class="hljs-number">500</span>);<span class="hljs-comment">//延时500ms</span></span><br><span class="hljs-params"></span><br><span class="hljs-params"><span class="hljs-comment">/*方法2：GPIO_WriteBit设置低/高电平，由Bit_RESET/Bit_SET指定*/</span></span><br><span class="hljs-params">GPIO_WriteBit(GPIOA, GPIO_Pin_0, Bit_RESET);<span class="hljs-comment">//将PA0引脚设置为低电平</span></span><br><span class="hljs-params">Delay_ms(<span class="hljs-number">500</span>);<span class="hljs-comment">//延时500ms</span></span><br><span class="hljs-params">GPIO_WriteBit(GPIOA, GPIO_Pin_0, Bit_SET);<span class="hljs-comment">//将PA0引脚设置为高电平</span></span><br><span class="hljs-params">Delay_ms(<span class="hljs-number">500</span>);<span class="hljs-comment">//延时500ms</span></span><br><span class="hljs-params"></span><br><span class="hljs-params"><span class="hljs-comment">/*方法3：GPIO_WriteBit设置低/高电平，由数据0/1指定，数据需要强转为BitAction类型*/</span></span><br><span class="hljs-params">GPIO_WriteBit(GPIOA, GPIO_Pin_0, (BitAction)<span class="hljs-number">0</span>);<span class="hljs-comment">//将PA0引脚设置为低电平</span></span><br><span class="hljs-params">Delay_ms(<span class="hljs-number">500</span>);<span class="hljs-comment">//延时500ms</span></span><br><span class="hljs-params">GPIO_WriteBit(GPIOA, GPIO_Pin_0, (BitAction)<span class="hljs-number">1</span>);<span class="hljs-comment">//将PA0引脚设置为高电平</span></span><br><span class="hljs-params">Delay_ms(<span class="hljs-number">500</span>);<span class="hljs-comment">//延时500ms</span></span><br><span class="hljs-params">&#125;</span><br><span class="hljs-params">&#125;</span><br><span class="hljs-params"></span><br></code></pre></td></tr></table></figure></li></ol></blockquote><h2 id="led流水灯代码">LED流水灯代码</h2><p><code>main.c</code></p><blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;stm32f10x.h&quot;</span>                  <span class="hljs-comment">// Device header</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;Delay.h&quot;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-comment">/*开启时钟*/</span><br>RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);<span class="hljs-comment">//开启GPIOA的时钟</span><br><span class="hljs-comment">//使用各个外设前必须开启时钟，否则对外设的操作无效</span><br><br><span class="hljs-comment">/*GPIO初始化*/</span><br>GPIO_InitTypeDef GPIO_InitStructure;<span class="hljs-comment">//定义结构体变量</span><br><br>GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;<span class="hljs-comment">//GPIO模式，赋值为推挽输出模式</span><br>GPIO_InitStructure.GPIO_Pin = GPIO_Pin_All;<span class="hljs-comment">//GPIO引脚，赋值为所有引脚</span><br>GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;<span class="hljs-comment">//GPIO速度，赋值为50MHz</span><br><br>GPIO_Init(GPIOA, &amp;GPIO_InitStructure);<span class="hljs-comment">//将赋值后的构体变量传递给GPIO_Init函数</span><br><span class="hljs-comment">//函数内部会自动根据结构体的参数配置相应寄存器</span><br><span class="hljs-comment">//实现GPIOA的初始化</span><br><br><span class="hljs-comment">/*主循环，循环体内的代码会一直循环执行*/</span><br><span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>)<br>&#123;<br><span class="hljs-comment">/*使用GPIO_Write，同时设置GPIOA所有引脚的高低电平，实现LED流水灯*/</span><br>GPIO_Write(GPIOA, ~<span class="hljs-number">0x0001</span>);<span class="hljs-comment">//0000 0000 0000 0001，PA0引脚为低电平，其他引脚均为高电平，注意数据有按位取反</span><br>Delay_ms(<span class="hljs-number">100</span>);<span class="hljs-comment">//延时100ms</span><br>GPIO_Write(GPIOA, ~<span class="hljs-number">0x0002</span>);<span class="hljs-comment">//0000 0000 0000 0010，PA1引脚为低电平，其他引脚均为高电平</span><br>Delay_ms(<span class="hljs-number">100</span>);<span class="hljs-comment">//延时100ms</span><br>GPIO_Write(GPIOA, ~<span class="hljs-number">0x0004</span>);<span class="hljs-comment">//0000 0000 0000 0100，PA2引脚为低电平，其他引脚均为高电平</span><br>Delay_ms(<span class="hljs-number">100</span>);<span class="hljs-comment">//延时100ms</span><br>GPIO_Write(GPIOA, ~<span class="hljs-number">0x0008</span>);<span class="hljs-comment">//0000 0000 0000 1000，PA3引脚为低电平，其他引脚均为高电平</span><br>Delay_ms(<span class="hljs-number">100</span>);<span class="hljs-comment">//延时100ms</span><br>GPIO_Write(GPIOA, ~<span class="hljs-number">0x0010</span>);<span class="hljs-comment">//0000 0000 0001 0000，PA4引脚为低电平，其他引脚均为高电平</span><br>Delay_ms(<span class="hljs-number">100</span>);<span class="hljs-comment">//延时100ms</span><br>GPIO_Write(GPIOA, ~<span class="hljs-number">0x0020</span>);<span class="hljs-comment">//0000 0000 0010 0000，PA5引脚为低电平，其他引脚均为高电平</span><br>Delay_ms(<span class="hljs-number">100</span>);<span class="hljs-comment">//延时100ms</span><br>GPIO_Write(GPIOA, ~<span class="hljs-number">0x0040</span>);<span class="hljs-comment">//0000 0000 0100 0000，PA6引脚为低电平，其他引脚均为高电平</span><br>Delay_ms(<span class="hljs-number">100</span>);<span class="hljs-comment">//延时100ms</span><br>GPIO_Write(GPIOA, ~<span class="hljs-number">0x0080</span>);<span class="hljs-comment">//0000 0000 1000 0000，PA7引脚为低电平，其他引脚均为高电平</span><br>Delay_ms(<span class="hljs-number">100</span>);<span class="hljs-comment">//延时100ms</span><br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure></blockquote><h2 id="蜂鸣器代码">蜂鸣器代码</h2><p><code>main.c</code></p><blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;stm32f10x.h&quot;</span>                  <span class="hljs-comment">// Device header</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;Delay.h&quot;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-comment">/*开启时钟*/</span><br>RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);<span class="hljs-comment">//开启GPIOB的时钟</span><br><span class="hljs-comment">//使用各个外设前必须开启时钟，否则对外设的操作无效</span><br><br><span class="hljs-comment">/*GPIO初始化*/</span><br>GPIO_InitTypeDef GPIO_InitStructure;<span class="hljs-comment">//定义结构体变量</span><br><br>GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;<span class="hljs-comment">//GPIO模式，赋值为推挽输出模式</span><br>GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12;<span class="hljs-comment">//GPIO引脚，赋值为第12号引脚</span><br>GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;<span class="hljs-comment">//GPIO速度，赋值为50MHz</span><br><br>GPIO_Init(GPIOB, &amp;GPIO_InitStructure);<span class="hljs-comment">//将赋值后的构体变量传递给GPIO_Init函数</span><br><span class="hljs-comment">//函数内部会自动根据结构体的参数配置相应寄存器</span><br><span class="hljs-comment">//实现GPIOB的初始化</span><br><br><span class="hljs-comment">/*主循环，循环体内的代码会一直循环执行*/</span><br><span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>)<br>&#123;<br>GPIO_ResetBits(GPIOB, GPIO_Pin_12);<span class="hljs-comment">//将PB12引脚设置为低电平，蜂鸣器鸣叫</span><br>Delay_ms(<span class="hljs-number">100</span>);<span class="hljs-comment">//延时100ms</span><br>GPIO_SetBits(GPIOB, GPIO_Pin_12);<span class="hljs-comment">//将PB12引脚设置为高电平，蜂鸣器停止</span><br>Delay_ms(<span class="hljs-number">100</span>);<span class="hljs-comment">//延时100ms</span><br>GPIO_ResetBits(GPIOB, GPIO_Pin_12);<span class="hljs-comment">//将PB12引脚设置为低电平，蜂鸣器鸣叫</span><br>Delay_ms(<span class="hljs-number">100</span>);<span class="hljs-comment">//延时100ms</span><br>GPIO_SetBits(GPIOB, GPIO_Pin_12);<span class="hljs-comment">//将PB12引脚设置为高电平，蜂鸣器停止</span><br>Delay_ms(<span class="hljs-number">700</span>);<span class="hljs-comment">//延时700ms</span><br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure></blockquote><h2 id="按键控制led代码">按键控制LED代码</h2><blockquote><p>工程架构(Hardware文件夹存放硬件驱动代码)：</p><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240902101004132.png"alt="工程架构" /><figcaption aria-hidden="true">工程架构</figcaption></figure><p><code>LED.h</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">ifndef</span> __LED_H</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> __LED_H</span><br><br><span class="hljs-type">void</span> <span class="hljs-title function_">LED_Init</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">LED1_ON</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">LED1_OFF</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">LED1_Turn</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">LED2_ON</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">LED2_OFF</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">LED2_Turn</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br><br></code></pre></td></tr></table></figure><p><code>LED.c</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;stm32f10x.h&quot;</span>                  <span class="hljs-comment">// Device header</span></span><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * 函    数：LED初始化</span><br><span class="hljs-comment">  * 参    数：无</span><br><span class="hljs-comment">  * 返 回 值：无</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LED_Init</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-comment">/*开启时钟*/</span><br>RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);<span class="hljs-comment">//开启GPIOA的时钟</span><br><br><span class="hljs-comment">/*GPIO初始化*/</span><br>GPIO_InitTypeDef GPIO_InitStructure;<br>GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;<br>GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1 | GPIO_Pin_2;<br>GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;<br>GPIO_Init(GPIOA, &amp;GPIO_InitStructure);<span class="hljs-comment">//将PA1和PA2引脚初始化为推挽输出</span><br><br><span class="hljs-comment">/*设置GPIO初始化后的默认电平*/</span><br>GPIO_SetBits(GPIOA, GPIO_Pin_1 | GPIO_Pin_2);<span class="hljs-comment">//设置PA1和PA2引脚为高电平</span><br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * 函    数：LED1开启</span><br><span class="hljs-comment">  * 参    数：无</span><br><span class="hljs-comment">  * 返 回 值：无</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LED1_ON</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>GPIO_ResetBits(GPIOA, GPIO_Pin_1);<span class="hljs-comment">//设置PA1引脚为低电平</span><br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * 函    数：LED1关闭</span><br><span class="hljs-comment">  * 参    数：无</span><br><span class="hljs-comment">  * 返 回 值：无</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LED1_OFF</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>GPIO_SetBits(GPIOA, GPIO_Pin_1);<span class="hljs-comment">//设置PA1引脚为高电平</span><br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * 函    数：LED1状态翻转</span><br><span class="hljs-comment">  * 参    数：无</span><br><span class="hljs-comment">  * 返 回 值：无</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LED1_Turn</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-keyword">if</span> (GPIO_ReadOutputDataBit(GPIOA, GPIO_Pin_1) == <span class="hljs-number">0</span>)<span class="hljs-comment">//获取输出寄存器的状态，如果当前引脚输出低电平</span><br>&#123;<br>GPIO_SetBits(GPIOA, GPIO_Pin_1);<span class="hljs-comment">//则设置PA1引脚为高电平</span><br>&#125;<br><span class="hljs-keyword">else</span><span class="hljs-comment">//否则，即当前引脚输出高电平</span><br>&#123;<br>GPIO_ResetBits(GPIOA, GPIO_Pin_1);<span class="hljs-comment">//则设置PA1引脚为低电平</span><br>&#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * 函    数：LED2开启</span><br><span class="hljs-comment">  * 参    数：无</span><br><span class="hljs-comment">  * 返 回 值：无</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LED2_ON</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>GPIO_ResetBits(GPIOA, GPIO_Pin_2);<span class="hljs-comment">//设置PA2引脚为低电平</span><br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * 函    数：LED2关闭</span><br><span class="hljs-comment">  * 参    数：无</span><br><span class="hljs-comment">  * 返 回 值：无</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LED2_OFF</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>GPIO_SetBits(GPIOA, GPIO_Pin_2);<span class="hljs-comment">//设置PA2引脚为高电平</span><br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * 函    数：LED2状态翻转</span><br><span class="hljs-comment">  * 参    数：无</span><br><span class="hljs-comment">  * 返 回 值：无</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LED2_Turn</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-keyword">if</span> (GPIO_ReadOutputDataBit(GPIOA, GPIO_Pin_2) == <span class="hljs-number">0</span>)<span class="hljs-comment">//获取输出寄存器的状态，如果当前引脚输出低电平</span><br>&#123;                                                  <br>GPIO_SetBits(GPIOA, GPIO_Pin_2);               <span class="hljs-comment">//则设置PA2引脚为高电平</span><br>&#125;                                                  <br><span class="hljs-keyword">else</span>                                               <span class="hljs-comment">//否则，即当前引脚输出高电平</span><br>&#123;                                                  <br>GPIO_ResetBits(GPIOA, GPIO_Pin_2);             <span class="hljs-comment">//则设置PA2引脚为低电平</span><br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><code>key.h</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">ifndef</span> __KEY_H</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> __KEY_H</span><br><br><span class="hljs-type">void</span> <span class="hljs-title function_">Key_Init</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><span class="hljs-type">uint8_t</span> <span class="hljs-title function_">Key_GetNum</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br><br></code></pre></td></tr></table></figure><p><code>key.c</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;stm32f10x.h&quot;</span>                  <span class="hljs-comment">// Device header</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;Delay.h&quot;</span></span><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * 函    数：按键初始化</span><br><span class="hljs-comment">  * 参    数：无</span><br><span class="hljs-comment">  * 返 回 值：无</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Key_Init</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-comment">/*开启时钟*/</span><br>RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);<span class="hljs-comment">//开启GPIOB的时钟</span><br><br><span class="hljs-comment">/*GPIO初始化*/</span><br>GPIO_InitTypeDef GPIO_InitStructure;<br>GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;<br>GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1 | GPIO_Pin_11;<br>GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;<br>GPIO_Init(GPIOB, &amp;GPIO_InitStructure);<span class="hljs-comment">//将PB1和PB11引脚初始化为上拉输入</span><br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * 函    数：按键获取键码</span><br><span class="hljs-comment">  * 参    数：无</span><br><span class="hljs-comment">  * 返 回 值：按下按键的键码值，范围：0~2，返回0代表没有按键按下</span><br><span class="hljs-comment">  * 注意事项：此函数是阻塞式操作，当按键按住不放时，函数会卡住，直到按键松手</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">uint8_t</span> <span class="hljs-title function_">Key_GetNum</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-type">uint8_t</span> KeyNum = <span class="hljs-number">0</span>;<span class="hljs-comment">//定义变量，默认键码值为0</span><br><br><span class="hljs-keyword">if</span> (GPIO_ReadInputDataBit(GPIOB, GPIO_Pin_1) == <span class="hljs-number">0</span>)<span class="hljs-comment">//读PB1输入寄存器的状态，如果为0，则代表按键1按下</span><br>&#123;<br>Delay_ms(<span class="hljs-number">20</span>);<span class="hljs-comment">//延时消抖</span><br><span class="hljs-keyword">while</span> (GPIO_ReadInputDataBit(GPIOB, GPIO_Pin_1) == <span class="hljs-number">0</span>);<span class="hljs-comment">//等待按键松手</span><br>Delay_ms(<span class="hljs-number">20</span>);<span class="hljs-comment">//延时消抖</span><br>KeyNum = <span class="hljs-number">1</span>;<span class="hljs-comment">//置键码为1</span><br>&#125;<br><br><span class="hljs-keyword">if</span> (GPIO_ReadInputDataBit(GPIOB, GPIO_Pin_11) == <span class="hljs-number">0</span>)<span class="hljs-comment">//读PB11输入寄存器的状态，如果为0，则代表按键2按下</span><br>&#123;<br>Delay_ms(<span class="hljs-number">20</span>);<span class="hljs-comment">//延时消抖</span><br><span class="hljs-keyword">while</span> (GPIO_ReadInputDataBit(GPIOB, GPIO_Pin_11) == <span class="hljs-number">0</span>);<span class="hljs-comment">//等待按键松手</span><br>Delay_ms(<span class="hljs-number">20</span>);<span class="hljs-comment">//延时消抖</span><br>KeyNum = <span class="hljs-number">2</span>;<span class="hljs-comment">//置键码为2</span><br>&#125;<br><br><span class="hljs-keyword">return</span> KeyNum;<span class="hljs-comment">//返回键码值，如果没有按键按下，所有if都不成立，则键码为默认值0</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p><code>main.c</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;stm32f10x.h&quot;</span>                  <span class="hljs-comment">// Device header</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;Delay.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;LED.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;Key.h&quot;</span></span><br><br><span class="hljs-type">uint8_t</span> KeyNum;<span class="hljs-comment">//定义用于接收按键键码的变量</span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-comment">/*模块初始化*/</span><br>LED_Init();<span class="hljs-comment">//LED初始化</span><br>Key_Init();<span class="hljs-comment">//按键初始化</span><br><br><span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>)<br>&#123;<br>KeyNum = Key_GetNum();<span class="hljs-comment">//获取按键键码</span><br><br><span class="hljs-keyword">if</span> (KeyNum == <span class="hljs-number">1</span>)<span class="hljs-comment">//按键1按下</span><br>&#123;<br>LED1_Turn();<span class="hljs-comment">//LED1翻转</span><br>&#125;<br><br><span class="hljs-keyword">if</span> (KeyNum == <span class="hljs-number">2</span>)<span class="hljs-comment">//按键2按下</span><br>&#123;<br>LED2_Turn();<span class="hljs-comment">//LED2翻转</span><br>&#125;<br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure></blockquote><h2 id="光敏传感器控制蜂鸣器代码">光敏传感器控制蜂鸣器代码</h2><blockquote><p>工程框架：</p><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240902110616445.png"alt="工程架构" /><figcaption aria-hidden="true">工程架构</figcaption></figure><p><code>Buzzer.h</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">ifndef</span> __BUZZER_H</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> __BUZZER_H</span><br><br><span class="hljs-type">void</span> <span class="hljs-title function_">Buzzer_Init</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">Buzzer_ON</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">Buzzer_OFF</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">Buzzer_Turn</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br><br></code></pre></td></tr></table></figure><p><code>Buzzer.c</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;stm32f10x.h&quot;</span>                  <span class="hljs-comment">// Device header</span></span><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * 函    数：蜂鸣器初始化</span><br><span class="hljs-comment">  * 参    数：无</span><br><span class="hljs-comment">  * 返 回 值：无</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Buzzer_Init</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-comment">/*开启时钟*/</span><br>RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);<span class="hljs-comment">//开启GPIOB的时钟</span><br><br><span class="hljs-comment">/*GPIO初始化*/</span><br>GPIO_InitTypeDef GPIO_InitStructure;<br>GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;<br>GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12;<br>GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;<br>GPIO_Init(GPIOB, &amp;GPIO_InitStructure);<span class="hljs-comment">//将PB12引脚初始化为推挽输出</span><br><br><span class="hljs-comment">/*设置GPIO初始化后的默认电平*/</span><br>GPIO_SetBits(GPIOB, GPIO_Pin_12);<span class="hljs-comment">//设置PB12引脚为高电平</span><br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * 函    数：蜂鸣器开启</span><br><span class="hljs-comment">  * 参    数：无</span><br><span class="hljs-comment">  * 返 回 值：无</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Buzzer_ON</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>GPIO_ResetBits(GPIOB, GPIO_Pin_12);<span class="hljs-comment">//设置PB12引脚为低电平</span><br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * 函    数：蜂鸣器关闭</span><br><span class="hljs-comment">  * 参    数：无</span><br><span class="hljs-comment">  * 返 回 值：无</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Buzzer_OFF</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>GPIO_SetBits(GPIOB, GPIO_Pin_12);<span class="hljs-comment">//设置PB12引脚为高电平</span><br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * 函    数：蜂鸣器状态翻转</span><br><span class="hljs-comment">  * 参    数：无</span><br><span class="hljs-comment">  * 返 回 值：无</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Buzzer_Turn</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-keyword">if</span> (GPIO_ReadOutputDataBit(GPIOB, GPIO_Pin_12) == <span class="hljs-number">0</span>)<span class="hljs-comment">//获取输出寄存器的状态，如果当前引脚输出低电平</span><br>&#123;<br>GPIO_SetBits(GPIOB, GPIO_Pin_12);<span class="hljs-comment">//则设置PB12引脚为高电平</span><br>&#125;<br><span class="hljs-keyword">else</span><span class="hljs-comment">//否则，即当前引脚输出高电平</span><br>&#123;<br>GPIO_ResetBits(GPIOB, GPIO_Pin_12);<span class="hljs-comment">//则设置PB12引脚为低电平</span><br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><code>LightSensor.h</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">ifndef</span> __LIGHT_SENSOR_H</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> __LIGHT_SENSOR_H</span><br><br><span class="hljs-type">void</span> <span class="hljs-title function_">LightSensor_Init</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><span class="hljs-type">uint8_t</span> <span class="hljs-title function_">LightSensor_Get</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br><br></code></pre></td></tr></table></figure><p><code>LightSensor.c</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;stm32f10x.h&quot;</span>                  <span class="hljs-comment">// Device header</span></span><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * 函    数：光敏传感器初始化</span><br><span class="hljs-comment">  * 参    数：无</span><br><span class="hljs-comment">  * 返 回 值：无</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">LightSensor_Init</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-comment">/*开启时钟*/</span><br>RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);<span class="hljs-comment">//开启GPIOB的时钟</span><br><br><span class="hljs-comment">/*GPIO初始化*/</span><br>GPIO_InitTypeDef GPIO_InitStructure;<br>GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;<br>GPIO_InitStructure.GPIO_Pin = GPIO_Pin_13;<br>GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;<br>GPIO_Init(GPIOB, &amp;GPIO_InitStructure);<span class="hljs-comment">//将PB13引脚初始化为上拉输入</span><br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * 函    数：获取当前光敏传感器输出的高低电平</span><br><span class="hljs-comment">  * 参    数：无</span><br><span class="hljs-comment">  * 返 回 值：光敏传感器输出的高低电平，范围：0/1</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">uint8_t</span> <span class="hljs-title function_">LightSensor_Get</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-keyword">return</span> GPIO_ReadInputDataBit(GPIOB, GPIO_Pin_13);<span class="hljs-comment">//返回PB13输入寄存器的状态</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p><code>main.c</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;stm32f10x.h&quot;</span>                  <span class="hljs-comment">// Device header</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;Delay.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;Buzzer.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;LightSensor.h&quot;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-comment">/*模块初始化*/</span><br>Buzzer_Init();<span class="hljs-comment">//蜂鸣器初始化</span><br>LightSensor_Init();<span class="hljs-comment">//光敏传感器初始化</span><br><br><span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>)<br>&#123;<br><span class="hljs-keyword">if</span> (LightSensor_Get() == <span class="hljs-number">1</span>)<span class="hljs-comment">//如果当前光敏输出1</span><br>&#123;<br>Buzzer_ON();<span class="hljs-comment">//蜂鸣器开启</span><br>&#125;<br><span class="hljs-keyword">else</span><span class="hljs-comment">//否则</span><br>&#123;<br>Buzzer_OFF();<span class="hljs-comment">//蜂鸣器关闭</span><br>&#125;<br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure></blockquote><h1 id="调试方式">4. 调试方式</h1><h2id="串口调试通过串口通信将调试信息发送到电脑端电脑使用串口助手显示调试信息">串口调试：通过串口通信，将调试信息发送到电脑端，电脑使用串口助手显示调试信息</h2><h2id="显示屏调试直接将显示屏连接到单片机将调试信息打印在显示屏上">显示屏调试：直接将显示屏连接到单片机，将调试信息打印在显示屏上</h2><p><img src="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240902111527190.png" alt="OLED" style="zoom:50%;" /></p><p><img src="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240902112755328.png" alt="image-20240902112755328" style="zoom:50%;" /></p><h3id="oled相关代码放入hardware文件夹中">OLED相关代码（放入Hardware文件夹中）</h3><blockquote><p><code>OLED.h</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">ifndef</span> __OLED_H</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> __OLED_H</span><br><br><span class="hljs-type">void</span> <span class="hljs-title function_">OLED_Init</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">OLED_Clear</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">OLED_ShowChar</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> Line, <span class="hljs-type">uint8_t</span> Column, <span class="hljs-type">char</span> Char)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">OLED_ShowString</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> Line, <span class="hljs-type">uint8_t</span> Column, <span class="hljs-type">char</span> *String)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">OLED_ShowNum</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> Line, <span class="hljs-type">uint8_t</span> Column, <span class="hljs-type">uint32_t</span> Number, <span class="hljs-type">uint8_t</span> Length)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">OLED_ShowSignedNum</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> Line, <span class="hljs-type">uint8_t</span> Column, <span class="hljs-type">int32_t</span> Number, <span class="hljs-type">uint8_t</span> Length)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">OLED_ShowHexNum</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> Line, <span class="hljs-type">uint8_t</span> Column, <span class="hljs-type">uint32_t</span> Number, <span class="hljs-type">uint8_t</span> Length)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">OLED_ShowBinNum</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> Line, <span class="hljs-type">uint8_t</span> Column, <span class="hljs-type">uint32_t</span> Number, <span class="hljs-type">uint8_t</span> Length)</span>;<br><br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br><br></code></pre></td></tr></table></figure><p><code>OLED.c</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;stm32f10x.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;OLED_Font.h&quot;</span></span><br><br><span class="hljs-comment">/*引脚配置*/</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> OLED_W_SCL(x)GPIO_WriteBit(GPIOB, GPIO_Pin_8, (BitAction)(x))</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> OLED_W_SDA(x)GPIO_WriteBit(GPIOB, GPIO_Pin_9, (BitAction)(x))</span><br><br><span class="hljs-comment">/*引脚初始化*/</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">OLED_I2C_Init</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);<br><br>GPIO_InitTypeDef GPIO_InitStructure;<br> GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_OD;<br>GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;<br>GPIO_InitStructure.GPIO_Pin = GPIO_Pin_8;<br> GPIO_Init(GPIOB, &amp;GPIO_InitStructure);<br>GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;<br> GPIO_Init(GPIOB, &amp;GPIO_InitStructure);<br><br>OLED_W_SCL(<span class="hljs-number">1</span>);<br>OLED_W_SDA(<span class="hljs-number">1</span>);<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * @brief  I2C开始</span><br><span class="hljs-comment">  * @param  无</span><br><span class="hljs-comment">  * @retval 无</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">OLED_I2C_Start</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>OLED_W_SDA(<span class="hljs-number">1</span>);<br>OLED_W_SCL(<span class="hljs-number">1</span>);<br>OLED_W_SDA(<span class="hljs-number">0</span>);<br>OLED_W_SCL(<span class="hljs-number">0</span>);<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * @brief  I2C停止</span><br><span class="hljs-comment">  * @param  无</span><br><span class="hljs-comment">  * @retval 无</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">OLED_I2C_Stop</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>OLED_W_SDA(<span class="hljs-number">0</span>);<br>OLED_W_SCL(<span class="hljs-number">1</span>);<br>OLED_W_SDA(<span class="hljs-number">1</span>);<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * @brief  I2C发送一个字节</span><br><span class="hljs-comment">  * @param  Byte 要发送的一个字节</span><br><span class="hljs-comment">  * @retval 无</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">OLED_I2C_SendByte</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> Byte)</span><br>&#123;<br><span class="hljs-type">uint8_t</span> i;<br><span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">8</span>; i++)<br>&#123;<br>OLED_W_SDA(Byte &amp; (<span class="hljs-number">0x80</span> &gt;&gt; i));<br>OLED_W_SCL(<span class="hljs-number">1</span>);<br>OLED_W_SCL(<span class="hljs-number">0</span>);<br>&#125;<br>OLED_W_SCL(<span class="hljs-number">1</span>);<span class="hljs-comment">//额外的一个时钟，不处理应答信号</span><br>OLED_W_SCL(<span class="hljs-number">0</span>);<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * @brief  OLED写命令</span><br><span class="hljs-comment">  * @param  Command 要写入的命令</span><br><span class="hljs-comment">  * @retval 无</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">OLED_WriteCommand</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> Command)</span><br>&#123;<br>OLED_I2C_Start();<br>OLED_I2C_SendByte(<span class="hljs-number">0x78</span>);<span class="hljs-comment">//从机地址</span><br>OLED_I2C_SendByte(<span class="hljs-number">0x00</span>);<span class="hljs-comment">//写命令</span><br>OLED_I2C_SendByte(Command); <br>OLED_I2C_Stop();<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * @brief  OLED写数据</span><br><span class="hljs-comment">  * @param  Data 要写入的数据</span><br><span class="hljs-comment">  * @retval 无</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">OLED_WriteData</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> Data)</span><br>&#123;<br>OLED_I2C_Start();<br>OLED_I2C_SendByte(<span class="hljs-number">0x78</span>);<span class="hljs-comment">//从机地址</span><br>OLED_I2C_SendByte(<span class="hljs-number">0x40</span>);<span class="hljs-comment">//写数据</span><br>OLED_I2C_SendByte(Data);<br>OLED_I2C_Stop();<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * @brief  OLED设置光标位置</span><br><span class="hljs-comment">  * @param  Y 以左上角为原点，向下方向的坐标，范围：0~7</span><br><span class="hljs-comment">  * @param  X 以左上角为原点，向右方向的坐标，范围：0~127</span><br><span class="hljs-comment">  * @retval 无</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">OLED_SetCursor</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> Y, <span class="hljs-type">uint8_t</span> X)</span><br>&#123;<br>OLED_WriteCommand(<span class="hljs-number">0xB0</span> | Y);<span class="hljs-comment">//设置Y位置</span><br>OLED_WriteCommand(<span class="hljs-number">0x10</span> | ((X &amp; <span class="hljs-number">0xF0</span>) &gt;&gt; <span class="hljs-number">4</span>));<span class="hljs-comment">//设置X位置高4位</span><br>OLED_WriteCommand(<span class="hljs-number">0x00</span> | (X &amp; <span class="hljs-number">0x0F</span>));<span class="hljs-comment">//设置X位置低4位</span><br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * @brief  OLED清屏</span><br><span class="hljs-comment">  * @param  无</span><br><span class="hljs-comment">  * @retval 无</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">OLED_Clear</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;  <br><span class="hljs-type">uint8_t</span> i, j;<br><span class="hljs-keyword">for</span> (j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">8</span>; j++)<br>&#123;<br>OLED_SetCursor(j, <span class="hljs-number">0</span>);<br><span class="hljs-keyword">for</span>(i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">128</span>; i++)<br>&#123;<br>OLED_WriteData(<span class="hljs-number">0x00</span>);<br>&#125;<br>&#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * @brief  OLED显示一个字符</span><br><span class="hljs-comment">  * @param  Line 行位置，范围：1~4</span><br><span class="hljs-comment">  * @param  Column 列位置，范围：1~16</span><br><span class="hljs-comment">  * @param  Char 要显示的一个字符，范围：ASCII可见字符</span><br><span class="hljs-comment">  * @retval 无</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">OLED_ShowChar</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> Line, <span class="hljs-type">uint8_t</span> Column, <span class="hljs-type">char</span> Char)</span><br>&#123;      <br><span class="hljs-type">uint8_t</span> i;<br>OLED_SetCursor((Line - <span class="hljs-number">1</span>) * <span class="hljs-number">2</span>, (Column - <span class="hljs-number">1</span>) * <span class="hljs-number">8</span>);<span class="hljs-comment">//设置光标位置在上半部分</span><br><span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">8</span>; i++)<br>&#123;<br>OLED_WriteData(OLED_F8x16[Char - <span class="hljs-string">&#x27; &#x27;</span>][i]);<span class="hljs-comment">//显示上半部分内容</span><br>&#125;<br>OLED_SetCursor((Line - <span class="hljs-number">1</span>) * <span class="hljs-number">2</span> + <span class="hljs-number">1</span>, (Column - <span class="hljs-number">1</span>) * <span class="hljs-number">8</span>);<span class="hljs-comment">//设置光标位置在下半部分</span><br><span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">8</span>; i++)<br>&#123;<br>OLED_WriteData(OLED_F8x16[Char - <span class="hljs-string">&#x27; &#x27;</span>][i + <span class="hljs-number">8</span>]);<span class="hljs-comment">//显示下半部分内容</span><br>&#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * @brief  OLED显示字符串</span><br><span class="hljs-comment">  * @param  Line 起始行位置，范围：1~4</span><br><span class="hljs-comment">  * @param  Column 起始列位置，范围：1~16</span><br><span class="hljs-comment">  * @param  String 要显示的字符串，范围：ASCII可见字符</span><br><span class="hljs-comment">  * @retval 无</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">OLED_ShowString</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> Line, <span class="hljs-type">uint8_t</span> Column, <span class="hljs-type">char</span> *String)</span><br>&#123;<br><span class="hljs-type">uint8_t</span> i;<br><span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; String[i] != <span class="hljs-string">&#x27;\0&#x27;</span>; i++)<br>&#123;<br>OLED_ShowChar(Line, Column + i, String[i]);<br>&#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * @brief  OLED次方函数</span><br><span class="hljs-comment">  * @retval 返回值等于X的Y次方</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">uint32_t</span> <span class="hljs-title function_">OLED_Pow</span><span class="hljs-params">(<span class="hljs-type">uint32_t</span> X, <span class="hljs-type">uint32_t</span> Y)</span><br>&#123;<br><span class="hljs-type">uint32_t</span> Result = <span class="hljs-number">1</span>;<br><span class="hljs-keyword">while</span> (Y--)<br>&#123;<br>Result *= X;<br>&#125;<br><span class="hljs-keyword">return</span> Result;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * @brief  OLED显示数字（十进制，正数）</span><br><span class="hljs-comment">  * @param  Line 起始行位置，范围：1~4</span><br><span class="hljs-comment">  * @param  Column 起始列位置，范围：1~16</span><br><span class="hljs-comment">  * @param  Number 要显示的数字，范围：0~4294967295</span><br><span class="hljs-comment">  * @param  Length 要显示数字的长度，范围：1~10</span><br><span class="hljs-comment">  * @retval 无</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">OLED_ShowNum</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> Line, <span class="hljs-type">uint8_t</span> Column, <span class="hljs-type">uint32_t</span> Number, <span class="hljs-type">uint8_t</span> Length)</span><br>&#123;<br><span class="hljs-type">uint8_t</span> i;<br><span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; Length; i++)<br>&#123;<br>OLED_ShowChar(Line, Column + i, Number / OLED_Pow(<span class="hljs-number">10</span>, Length - i - <span class="hljs-number">1</span>) % <span class="hljs-number">10</span> + <span class="hljs-string">&#x27;0&#x27;</span>);<br>&#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * @brief  OLED显示数字（十进制，带符号数）</span><br><span class="hljs-comment">  * @param  Line 起始行位置，范围：1~4</span><br><span class="hljs-comment">  * @param  Column 起始列位置，范围：1~16</span><br><span class="hljs-comment">  * @param  Number 要显示的数字，范围：-2147483648~2147483647</span><br><span class="hljs-comment">  * @param  Length 要显示数字的长度，范围：1~10</span><br><span class="hljs-comment">  * @retval 无</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">OLED_ShowSignedNum</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> Line, <span class="hljs-type">uint8_t</span> Column, <span class="hljs-type">int32_t</span> Number, <span class="hljs-type">uint8_t</span> Length)</span><br>&#123;<br><span class="hljs-type">uint8_t</span> i;<br><span class="hljs-type">uint32_t</span> Number1;<br><span class="hljs-keyword">if</span> (Number &gt;= <span class="hljs-number">0</span>)<br>&#123;<br>OLED_ShowChar(Line, Column, <span class="hljs-string">&#x27;+&#x27;</span>);<br>Number1 = Number;<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>OLED_ShowChar(Line, Column, <span class="hljs-string">&#x27;-&#x27;</span>);<br>Number1 = -Number;<br>&#125;<br><span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; Length; i++)<br>&#123;<br>OLED_ShowChar(Line, Column + i + <span class="hljs-number">1</span>, Number1 / OLED_Pow(<span class="hljs-number">10</span>, Length - i - <span class="hljs-number">1</span>) % <span class="hljs-number">10</span> + <span class="hljs-string">&#x27;0&#x27;</span>);<br>&#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * @brief  OLED显示数字（十六进制，正数）</span><br><span class="hljs-comment">  * @param  Line 起始行位置，范围：1~4</span><br><span class="hljs-comment">  * @param  Column 起始列位置，范围：1~16</span><br><span class="hljs-comment">  * @param  Number 要显示的数字，范围：0~0xFFFFFFFF</span><br><span class="hljs-comment">  * @param  Length 要显示数字的长度，范围：1~8</span><br><span class="hljs-comment">  * @retval 无</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">OLED_ShowHexNum</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> Line, <span class="hljs-type">uint8_t</span> Column, <span class="hljs-type">uint32_t</span> Number, <span class="hljs-type">uint8_t</span> Length)</span><br>&#123;<br><span class="hljs-type">uint8_t</span> i, SingleNumber;<br><span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; Length; i++)<br>&#123;<br>SingleNumber = Number / OLED_Pow(<span class="hljs-number">16</span>, Length - i - <span class="hljs-number">1</span>) % <span class="hljs-number">16</span>;<br><span class="hljs-keyword">if</span> (SingleNumber &lt; <span class="hljs-number">10</span>)<br>&#123;<br>OLED_ShowChar(Line, Column + i, SingleNumber + <span class="hljs-string">&#x27;0&#x27;</span>);<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br>OLED_ShowChar(Line, Column + i, SingleNumber - <span class="hljs-number">10</span> + <span class="hljs-string">&#x27;A&#x27;</span>);<br>&#125;<br>&#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * @brief  OLED显示数字（二进制，正数）</span><br><span class="hljs-comment">  * @param  Line 起始行位置，范围：1~4</span><br><span class="hljs-comment">  * @param  Column 起始列位置，范围：1~16</span><br><span class="hljs-comment">  * @param  Number 要显示的数字，范围：0~1111 1111 1111 1111</span><br><span class="hljs-comment">  * @param  Length 要显示数字的长度，范围：1~16</span><br><span class="hljs-comment">  * @retval 无</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">OLED_ShowBinNum</span><span class="hljs-params">(<span class="hljs-type">uint8_t</span> Line, <span class="hljs-type">uint8_t</span> Column, <span class="hljs-type">uint32_t</span> Number, <span class="hljs-type">uint8_t</span> Length)</span><br>&#123;<br><span class="hljs-type">uint8_t</span> i;<br><span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; Length; i++)<br>&#123;<br>OLED_ShowChar(Line, Column + i, Number / OLED_Pow(<span class="hljs-number">2</span>, Length - i - <span class="hljs-number">1</span>) % <span class="hljs-number">2</span> + <span class="hljs-string">&#x27;0&#x27;</span>);<br>&#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * @brief  OLED初始化</span><br><span class="hljs-comment">  * @param  无</span><br><span class="hljs-comment">  * @retval 无</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">OLED_Init</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-type">uint32_t</span> i, j;<br><br><span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">1000</span>; i++)<span class="hljs-comment">//上电延时</span><br>&#123;<br><span class="hljs-keyword">for</span> (j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">1000</span>; j++);<br>&#125;<br><br>OLED_I2C_Init();<span class="hljs-comment">//端口初始化</span><br><br>OLED_WriteCommand(<span class="hljs-number">0xAE</span>);<span class="hljs-comment">//关闭显示</span><br><br>OLED_WriteCommand(<span class="hljs-number">0xD5</span>);<span class="hljs-comment">//设置显示时钟分频比/振荡器频率</span><br>OLED_WriteCommand(<span class="hljs-number">0x80</span>);<br><br>OLED_WriteCommand(<span class="hljs-number">0xA8</span>);<span class="hljs-comment">//设置多路复用率</span><br>OLED_WriteCommand(<span class="hljs-number">0x3F</span>);<br><br>OLED_WriteCommand(<span class="hljs-number">0xD3</span>);<span class="hljs-comment">//设置显示偏移</span><br>OLED_WriteCommand(<span class="hljs-number">0x00</span>);<br><br>OLED_WriteCommand(<span class="hljs-number">0x40</span>);<span class="hljs-comment">//设置显示开始行</span><br><br>OLED_WriteCommand(<span class="hljs-number">0xA1</span>);<span class="hljs-comment">//设置左右方向，0xA1正常 0xA0左右反置</span><br><br>OLED_WriteCommand(<span class="hljs-number">0xC8</span>);<span class="hljs-comment">//设置上下方向，0xC8正常 0xC0上下反置</span><br><br>OLED_WriteCommand(<span class="hljs-number">0xDA</span>);<span class="hljs-comment">//设置COM引脚硬件配置</span><br>OLED_WriteCommand(<span class="hljs-number">0x12</span>);<br><br>OLED_WriteCommand(<span class="hljs-number">0x81</span>);<span class="hljs-comment">//设置对比度控制</span><br>OLED_WriteCommand(<span class="hljs-number">0xCF</span>);<br><br>OLED_WriteCommand(<span class="hljs-number">0xD9</span>);<span class="hljs-comment">//设置预充电周期</span><br>OLED_WriteCommand(<span class="hljs-number">0xF1</span>);<br><br>OLED_WriteCommand(<span class="hljs-number">0xDB</span>);<span class="hljs-comment">//设置VCOMH取消选择级别</span><br>OLED_WriteCommand(<span class="hljs-number">0x30</span>);<br><br>OLED_WriteCommand(<span class="hljs-number">0xA4</span>);<span class="hljs-comment">//设置整个显示打开/关闭</span><br><br>OLED_WriteCommand(<span class="hljs-number">0xA6</span>);<span class="hljs-comment">//设置正常/倒转显示</span><br><br>OLED_WriteCommand(<span class="hljs-number">0x8D</span>);<span class="hljs-comment">//设置充电泵</span><br>OLED_WriteCommand(<span class="hljs-number">0x14</span>);<br><br>OLED_WriteCommand(<span class="hljs-number">0xAF</span>);<span class="hljs-comment">//开启显示</span><br><br>OLED_Clear();<span class="hljs-comment">//OLED清屏</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p><code>OLED_Font.h</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">ifndef</span> __OLED_FONT_H</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> __OLED_FONT_H</span><br><br><span class="hljs-comment">/*OLED字模库，宽8像素，高16像素*/</span><br><span class="hljs-type">const</span> <span class="hljs-type">uint8_t</span> OLED_F8x16[][<span class="hljs-number">16</span>]=<br>&#123;<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//  0</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x33</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//! 1</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//&quot; 2</span><br><br><span class="hljs-number">0x40</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x78</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x78</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x04</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//# 3</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0xFC</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x21</span>,<span class="hljs-number">0x1E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//$ 4</span><br><br><span class="hljs-number">0xF0</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x21</span>,<span class="hljs-number">0x1C</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x1E</span>,<span class="hljs-number">0x21</span>,<span class="hljs-number">0x1E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//% 5</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x1E</span>,<span class="hljs-number">0x21</span>,<span class="hljs-number">0x23</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x19</span>,<span class="hljs-number">0x27</span>,<span class="hljs-number">0x21</span>,<span class="hljs-number">0x10</span>,<span class="hljs-comment">//&amp; 6</span><br><br><span class="hljs-number">0x10</span>,<span class="hljs-number">0x16</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//&#x27; 7</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//( 8</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//) 9</span><br><br><span class="hljs-number">0x40</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x02</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//* 10</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x01</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//+ 11</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x80</span>,<span class="hljs-number">0xB0</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//, 12</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x01</span>,<span class="hljs-comment">//- 13</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//. 14</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x04</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">/// 15</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//0 16</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//1 17</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x28</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x22</span>,<span class="hljs-number">0x21</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//2 18</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x48</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//3 19</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//4 20</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x19</span>,<span class="hljs-number">0x21</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//5 21</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//6 22</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0xC8</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//7 23</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x1C</span>,<span class="hljs-number">0x22</span>,<span class="hljs-number">0x21</span>,<span class="hljs-number">0x21</span>,<span class="hljs-number">0x22</span>,<span class="hljs-number">0x1C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//8 24</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x31</span>,<span class="hljs-number">0x22</span>,<span class="hljs-number">0x22</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//9 25</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//: 26</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//; 27</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//&lt; 28</span><br><br><span class="hljs-number">0x40</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x04</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//= 29</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//&gt; 30</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x48</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x36</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//? 31</span><br><br><span class="hljs-number">0xC0</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0xC8</span>,<span class="hljs-number">0x28</span>,<span class="hljs-number">0xE8</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x07</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x27</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x23</span>,<span class="hljs-number">0x14</span>,<span class="hljs-number">0x0B</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//@ 32</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x20</span>,<span class="hljs-number">0x3C</span>,<span class="hljs-number">0x23</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x27</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x20</span>,<span class="hljs-comment">//A 33</span><br><br><span class="hljs-number">0x08</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x20</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//B 34</span><br><br><span class="hljs-number">0xC0</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x07</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//C 35</span><br><br><span class="hljs-number">0x08</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x20</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//D 36</span><br><br><span class="hljs-number">0x08</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0xE8</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x20</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x23</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//E 37</span><br><br><span class="hljs-number">0x08</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0xE8</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x20</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//F 38</span><br><br><span class="hljs-number">0xC0</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x07</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x22</span>,<span class="hljs-number">0x1E</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//G 39</span><br><br><span class="hljs-number">0x08</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x08</span>,<br><span class="hljs-number">0x20</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x21</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x21</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x20</span>,<span class="hljs-comment">//H 40</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//I 41</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0xC0</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x7F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//J 42</span><br><br><span class="hljs-number">0x08</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x28</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x20</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x26</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//K 43</span><br><br><span class="hljs-number">0x08</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x20</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//L 44</span><br><br><span class="hljs-number">0x08</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x20</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//M 45</span><br><br><span class="hljs-number">0x08</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x08</span>,<br><span class="hljs-number">0x20</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//N 46</span><br><br><span class="hljs-number">0xE0</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x0F</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//O 47</span><br><br><span class="hljs-number">0x08</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x20</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x21</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//P 48</span><br><br><span class="hljs-number">0xE0</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x0F</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x50</span>,<span class="hljs-number">0x4F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//Q 49</span><br><br><span class="hljs-number">0x08</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x20</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x20</span>,<span class="hljs-comment">//R 50</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x21</span>,<span class="hljs-number">0x21</span>,<span class="hljs-number">0x22</span>,<span class="hljs-number">0x1C</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//S 51</span><br><br><span class="hljs-number">0x18</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//T 52</span><br><br><span class="hljs-number">0x08</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x08</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//U 53</span><br><br><span class="hljs-number">0x08</span>,<span class="hljs-number">0x78</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC8</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x08</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//V 54</span><br><br><span class="hljs-number">0xF8</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x03</span>,<span class="hljs-number">0x3C</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x07</span>,<span class="hljs-number">0x3C</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//W 55</span><br><br><span class="hljs-number">0x08</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x68</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x68</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x08</span>,<br><span class="hljs-number">0x20</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x2C</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x2C</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x20</span>,<span class="hljs-comment">//X 56</span><br><br><span class="hljs-number">0x08</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0xC8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xC8</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//Y 57</span><br><br><span class="hljs-number">0x10</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0xC8</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x20</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0x26</span>,<span class="hljs-number">0x21</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//Z 58</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xFE</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x7F</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//[ 59</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x38</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//\ 60</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0xFE</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x7F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//] 61</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//^ 62</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-comment">//_ 63</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//` 64</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x19</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x22</span>,<span class="hljs-number">0x22</span>,<span class="hljs-number">0x22</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x20</span>,<span class="hljs-comment">//a 65</span><br><br><span class="hljs-number">0x08</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//b 66</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//c 67</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x20</span>,<span class="hljs-comment">//d 68</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x22</span>,<span class="hljs-number">0x22</span>,<span class="hljs-number">0x22</span>,<span class="hljs-number">0x22</span>,<span class="hljs-number">0x13</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//e 69</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0xF0</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x88</span>,<span class="hljs-number">0x18</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//f 70</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x6B</span>,<span class="hljs-number">0x94</span>,<span class="hljs-number">0x94</span>,<span class="hljs-number">0x94</span>,<span class="hljs-number">0x93</span>,<span class="hljs-number">0x60</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//g 71</span><br><br><span class="hljs-number">0x08</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x20</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x21</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x20</span>,<span class="hljs-comment">//h 72</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x98</span>,<span class="hljs-number">0x98</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//i 73</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x98</span>,<span class="hljs-number">0x98</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0xC0</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x7F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//j 74</span><br><br><span class="hljs-number">0x08</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x20</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x2D</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//k 75</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0xF8</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//l 76</span><br><br><span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x20</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-comment">//m 77</span><br><br><span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x20</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x21</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x20</span>,<span class="hljs-comment">//n 78</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//o 79</span><br><br><span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x80</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0xA1</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//p 80</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x11</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0xA0</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x80</span>,<span class="hljs-comment">//q 81</span><br><br><span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x21</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//r 82</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x33</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x24</span>,<span class="hljs-number">0x19</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//s 83</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0xE0</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//t 84</span><br><br><span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x1F</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x10</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x20</span>,<span class="hljs-comment">//u 85</span><br><br><span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x08</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//v 86</span><br><br><span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<br><span class="hljs-number">0x0F</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x0C</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x0F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//w 87</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x31</span>,<span class="hljs-number">0x2E</span>,<span class="hljs-number">0x0E</span>,<span class="hljs-number">0x31</span>,<span class="hljs-number">0x20</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//x 88</span><br><br><span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<br><span class="hljs-number">0x80</span>,<span class="hljs-number">0x81</span>,<span class="hljs-number">0x8E</span>,<span class="hljs-number">0x70</span>,<span class="hljs-number">0x18</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//y 89</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x21</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x2C</span>,<span class="hljs-number">0x22</span>,<span class="hljs-number">0x21</span>,<span class="hljs-number">0x30</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//z 90</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x7C</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x02</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x40</span>,<span class="hljs-comment">//&#123; 91</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0xFF</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//| 92</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x7C</span>,<span class="hljs-number">0x80</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x40</span>,<span class="hljs-number">0x3F</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//&#125; 93</span><br><br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x06</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x01</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x02</span>,<span class="hljs-number">0x04</span>,<span class="hljs-number">0x04</span>,<br><span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-number">0x00</span>,<span class="hljs-comment">//~ 94</span><br>&#125;;<br><br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br><br></code></pre></td></tr></table></figure></blockquote><h2id="keil调试模式借助keil软件的调试模式可使用单步运行设置断点查看寄存器及变量等功能">Keil调试模式：借助Keil软件的调试模式，可使用单步运行、设置断点、查看寄存器及变量等功能</h2><p><em>以LED闪烁工程为例</em></p><blockquote><p>魔术棒==&gt;Debug==&gt;勾选左边的Use Simulator（使用电脑模拟仿真stm32进行调试，不需要连接硬件）</p><p>右边是硬件在线调试，需要将硬件都连接好</p><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240902113119129.png"alt="仿真调试" /><figcaption aria-hidden="true">仿真调试</figcaption></figure><p>勾选右边使用硬件在线调试，点击调试按钮</p><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240902113633951.png"alt="开始调试" /><figcaption aria-hidden="true">开始调试</figcaption></figure><p>进入调试界面</p><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240902113722890.png"alt="调试界面" /><figcaption aria-hidden="true">调试界面</figcaption></figure><p>上方窗口是C语言翻译成的汇编语言（蓝色箭头指向的c语言对应相应的汇编语言，黄色箭头是下一步将要执行的代码）</p><p>左边窗口时寄存器组和状态标志位的信息</p><p><strong>下面7个按钮分别是：重头开始运行；全速运行；停止全速运行；单步运行；跳过当前行单步运行；跳出当前函数单步运行；跳到光标指定行单步运行</strong></p><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240902114126978.png"alt="image-20240902114126978" /><figcaption aria-hidden="true">image-20240902114126978</figcaption></figure><p>再看下面几个按钮的功能：</p><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240902114909994.png"alt="image-20240902114909994" /><figcaption aria-hidden="true">image-20240902114909994</figcaption></figure><ol type="1"><li><p>打开或关闭命令行窗口（即左下方的comman窗口）</p></li><li><p>打开或关闭反汇编窗口</p></li><li><p>符号窗口，打开后可以实时查看程序中所有变量的值（右边的Symbols）</p><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240902115416593.png"alt="image-20240902115416593" /><figcaption aria-hidden="true">image-20240902115416593</figcaption></figure><p>例如想要查看结构体中某个具体的值，右键添加到watch1窗口就会显示再下方的窗口watch1中</p><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240902115522440.png"alt="image-20240902115522440" /><figcaption aria-hidden="true">image-20240902115522440</figcaption></figure><ol start="4" type="1"><li>寄存器窗口显示（右边）</li></ol><p>遇到的小问题解决方法：<ahref="https://www.cnblogs.com/freedomAfish/articles/13654989.html">关于keil5的system viewer找不到子选项 - hifish - 博客园 (cnblogs.com)</a></p><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240902122010145.png"alt="image-20240902122010145" /><figcaption aria-hidden="true">image-20240902122010145</figcaption></figure></li></ol></blockquote><h1 id="exti">5. EXTI</h1><h2 id="简要说明-1">简要说明</h2><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240902155329731.png"alt="image-20240902155329731" /><figcaption aria-hidden="true">image-20240902155329731</figcaption></figure><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240902160020421.png"alt="中断执行流程" /><figcaption aria-hidden="true">中断执行流程</figcaption></figure><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240902160459997.png"alt="NVIC基本结构" /><figcaption aria-hidden="true">NVIC基本结构</figcaption></figure><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240902160749455.png"alt="NVIC优先级分组" /><figcaption aria-hidden="true">NVIC优先级分组</figcaption></figure><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240902161033047.png"alt="image-20240902161033047" /><figcaption aria-hidden="true">image-20240902161033047</figcaption></figure><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240902161230738.png"alt="image-20240902161230738" /><figcaption aria-hidden="true">image-20240902161230738</figcaption></figure><blockquote><p>EXTI9_5指的是EXTI5到9触发的是同一个中断函数，EXTI15_10同理</p><p>对照上面的图就可以知道如何去配置：从GPIO到NVIC这一路中出现的外设模块都配置好</p><ol type="1"><li><p>配置RCC，将这里涉及的外设时钟都打开（NVIC不用，因为NVIC是内核中的外设，RCC只负责配置内核外的外设）</p></li><li><p>配置GPIO，选择我们的端口模式（输入还是输出）<strong>其他外设使用GPIO，不清楚配置为什么模式，可以去参考手册中找外设的GPIO配置表查看。</strong><ahref="https://github.com/Qingyun0118/myblog/blob/9b50fa963bc4d6c03b65e035b07d67283b291485/STM32F10xxx%E5%8F%82%E8%80%83%E6%89%8B%E5%86%8C%EF%BC%88%E4%B8%AD%E6%96%87%EF%BC%89.pdf">参考手册链接</a></p></li><li><p>配置AFIO，选择我们这一路的GPIO，连接到后面的EXTI，AFIO相关函数声明也在gpio.h中</p></li><li><p>配置EXTI，选择边沿触发方式，如上升沿，下降沿或者双边沿，选择触发响应方式：中断响应和事件响应</p></li><li><p>配置NVIC，给中断选择一个合适的优先级</p><p>【STM32入门教程-2023版 细致讲解 中文字幕】 【精准空降到 03:06】https://www.bilibili.com/video/BV1th411z7sn/?p=12&amp;share_source=copy_web&amp;vd_source=94cb1c7c1ef54b6d1579d0017943c57e&amp;t=186</p></li></ol></blockquote><p>[<ahref="https://www.bilibili.com/video/BV1th411z7sn?p=11&amp;vd_source=b94f6aa4bb4f3465ef91f93357149559">5-1]EXTI外部中断_哔哩哔哩_bilibili</a></p><h2 id="旋转编码器计次代码">旋转编码器计次代码</h2><blockquote><p>工程框架：<img src="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240902183118981.png" alt="image-20240902183118981" style="zoom: 80%;" /></p><p><code>Encoder.h</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">ifndef</span> __ENCODER_H</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> __ENCODER_H</span><br><br><span class="hljs-type">void</span> <span class="hljs-title function_">Encoder_Init</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><span class="hljs-type">int16_t</span> <span class="hljs-title function_">Encoder_Get</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br><br></code></pre></td></tr></table></figure><p><code>Encoder.c</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;stm32f10x.h&quot;</span>                  <span class="hljs-comment">// Device header</span></span><br><br><span class="hljs-type">int16_t</span> Encoder_Count;<span class="hljs-comment">//全局变量，用于计数旋转编码器的增量值</span><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * 函    数：旋转编码器初始化</span><br><span class="hljs-comment">  * 参    数：无</span><br><span class="hljs-comment">  * 返 回 值：无</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Encoder_Init</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-comment">/*开启时钟*/</span><br>RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);<span class="hljs-comment">//开启GPIOB的时钟</span><br>RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO, ENABLE);<span class="hljs-comment">//开启AFIO的时钟，外部中断必须开启AFIO的时钟</span><br><br><span class="hljs-comment">/*GPIO初始化*/</span><br>GPIO_InitTypeDef GPIO_InitStructure;<br>GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;<br>GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_1;<br>GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;<br>GPIO_Init(GPIOB, &amp;GPIO_InitStructure);<span class="hljs-comment">//将PB0和PB1引脚初始化为上拉输入</span><br><br><span class="hljs-comment">/*AFIO选择中断引脚*/</span><br>GPIO_EXTILineConfig(GPIO_PortSourceGPIOB, GPIO_PinSource0);<span class="hljs-comment">//将外部中断的0号线映射到GPIOB，即选择PB0为外部中断引脚</span><br>GPIO_EXTILineConfig(GPIO_PortSourceGPIOB, GPIO_PinSource1);<span class="hljs-comment">//将外部中断的1号线映射到GPIOB，即选择PB1为外部中断引脚</span><br><br><span class="hljs-comment">/*EXTI初始化*/</span><br>EXTI_InitTypeDef EXTI_InitStructure;<span class="hljs-comment">//定义结构体变量</span><br>EXTI_InitStructure.EXTI_Line = EXTI_Line0 | EXTI_Line1;<span class="hljs-comment">//选择配置外部中断的0号线和1号线</span><br>EXTI_InitStructure.EXTI_LineCmd = ENABLE;<span class="hljs-comment">//指定外部中断线使能</span><br>EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;<span class="hljs-comment">//指定外部中断线为中断模式</span><br>EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Falling;<span class="hljs-comment">//指定外部中断线为下降沿触发</span><br>EXTI_Init(&amp;EXTI_InitStructure);<span class="hljs-comment">//将结构体变量交给EXTI_Init，配置EXTI外设</span><br><br><span class="hljs-comment">/*NVIC中断分组*/</span><br>NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);<span class="hljs-comment">//配置NVIC为分组2</span><br><span class="hljs-comment">//即抢占优先级范围：0~3，响应优先级范围：0~3</span><br><span class="hljs-comment">//此分组配置在整个工程中仅需调用一次</span><br><span class="hljs-comment">//若有多个中断，可以把此代码放在main函数内，while循环之前</span><br><span class="hljs-comment">//若调用多次配置分组的代码，则后执行的配置会覆盖先执行的配置</span><br><br><span class="hljs-comment">/*NVIC配置*/</span><br>NVIC_InitTypeDef NVIC_InitStructure;<span class="hljs-comment">//定义结构体变量</span><br>NVIC_InitStructure.NVIC_IRQChannel = EXTI0_IRQn;<span class="hljs-comment">//选择配置NVIC的EXTI0线</span><br>NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;<span class="hljs-comment">//指定NVIC线路使能</span><br>NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="hljs-number">1</span>;<span class="hljs-comment">//指定NVIC线路的抢占优先级为1</span><br>NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="hljs-number">1</span>;<span class="hljs-comment">//指定NVIC线路的响应优先级为1</span><br>NVIC_Init(&amp;NVIC_InitStructure);<span class="hljs-comment">//将结构体变量交给NVIC_Init，配置NVIC外设</span><br><br>NVIC_InitStructure.NVIC_IRQChannel = EXTI1_IRQn;<span class="hljs-comment">//选择配置NVIC的EXTI1线</span><br>NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;<span class="hljs-comment">//指定NVIC线路使能</span><br>NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="hljs-number">1</span>;<span class="hljs-comment">//指定NVIC线路的抢占优先级为1</span><br>NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="hljs-number">2</span>;<span class="hljs-comment">//指定NVIC线路的响应优先级为2</span><br>NVIC_Init(&amp;NVIC_InitStructure);<span class="hljs-comment">//将结构体变量交给NVIC_Init，配置NVIC外设</span><br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * 函    数：旋转编码器获取增量值</span><br><span class="hljs-comment">  * 参    数：无</span><br><span class="hljs-comment">  * 返 回 值：自上此调用此函数后，旋转编码器的增量值</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">int16_t</span> <span class="hljs-title function_">Encoder_Get</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-comment">/*使用Temp变量作为中继，目的是返回Encoder_Count后将其清零*/</span><br><span class="hljs-comment">/*在这里，也可以直接返回Encoder_Count</span><br><span class="hljs-comment">  但这样就不是获取增量值的操作方法了</span><br><span class="hljs-comment">  也可以实现功能，只是思路不一样*/</span><br><span class="hljs-type">int16_t</span> Temp;<br>Temp = Encoder_Count;<br>Encoder_Count = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">return</span> Temp;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * 函    数：EXTI0外部中断函数</span><br><span class="hljs-comment">  * 参    数：无</span><br><span class="hljs-comment">  * 返 回 值：无</span><br><span class="hljs-comment">  * 注意事项：此函数为中断函数，无需调用，中断触发后自动执行</span><br><span class="hljs-comment">  *           函数名为预留的指定名称，可以从启动文件复制</span><br><span class="hljs-comment">  *           请确保函数名正确，不能有任何差异，否则中断函数将不能进入</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">EXTI0_IRQHandler</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-keyword">if</span> (EXTI_GetITStatus(EXTI_Line0) == SET)<span class="hljs-comment">//判断是否是外部中断0号线触发的中断</span><br>&#123;<br><span class="hljs-comment">/*如果出现数据乱跳的现象，可再次判断引脚电平，以避免抖动*/</span><br><span class="hljs-keyword">if</span> (GPIO_ReadInputDataBit(GPIOB, GPIO_Pin_0) == <span class="hljs-number">0</span>)<br>&#123;<br><span class="hljs-keyword">if</span> (GPIO_ReadInputDataBit(GPIOB, GPIO_Pin_1) == <span class="hljs-number">0</span>)<span class="hljs-comment">//PB0的下降沿触发中断，此时检测另一相PB1的电平，目的是判断旋转方向</span><br>&#123;<br>Encoder_Count --;<span class="hljs-comment">//此方向定义为反转，计数变量自减</span><br>&#125;<br>&#125;<br>EXTI_ClearITPendingBit(EXTI_Line0);<span class="hljs-comment">//清除外部中断0号线的中断标志位</span><br><span class="hljs-comment">//中断标志位必须清除</span><br><span class="hljs-comment">//否则中断将连续不断地触发，导致主程序卡死</span><br>&#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * 函    数：EXTI1外部中断函数</span><br><span class="hljs-comment">  * 参    数：无</span><br><span class="hljs-comment">  * 返 回 值：无</span><br><span class="hljs-comment">  * 注意事项：此函数为中断函数，无需调用，中断触发后自动执行</span><br><span class="hljs-comment">  *           函数名为预留的指定名称，可以从启动文件复制</span><br><span class="hljs-comment">  *           请确保函数名正确，不能有任何差异，否则中断函数将不能进入</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">EXTI1_IRQHandler</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-keyword">if</span> (EXTI_GetITStatus(EXTI_Line1) == SET)<span class="hljs-comment">//判断是否是外部中断1号线触发的中断</span><br>&#123;<br><span class="hljs-comment">/*如果出现数据乱跳的现象，可再次判断引脚电平，以避免抖动*/</span><br><span class="hljs-keyword">if</span> (GPIO_ReadInputDataBit(GPIOB, GPIO_Pin_1) == <span class="hljs-number">0</span>)<br>&#123;<br><span class="hljs-keyword">if</span> (GPIO_ReadInputDataBit(GPIOB, GPIO_Pin_0) == <span class="hljs-number">0</span>)<span class="hljs-comment">//PB1的下降沿触发中断，此时检测另一相PB0的电平，目的是判断旋转方向</span><br>&#123;<br>Encoder_Count ++;<span class="hljs-comment">//此方向定义为正转，计数变量自增</span><br>&#125;<br>&#125;<br>EXTI_ClearITPendingBit(EXTI_Line1);<span class="hljs-comment">//清除外部中断1号线的中断标志位</span><br><span class="hljs-comment">//中断标志位必须清除</span><br><span class="hljs-comment">//否则中断将连续不断地触发，导致主程序卡死</span><br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p><code>main.c</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;stm32f10x.h&quot;</span>                  <span class="hljs-comment">// Device header</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;Delay.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;OLED.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;Encoder.h&quot;</span></span><br><br><span class="hljs-type">int16_t</span> Num;<span class="hljs-comment">//定义待被旋转编码器调节的变量</span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-comment">/*模块初始化*/</span><br>OLED_Init();<span class="hljs-comment">//OLED初始化</span><br>Encoder_Init();<span class="hljs-comment">//旋转编码器初始化</span><br><br><span class="hljs-comment">/*显示静态字符串*/</span><br>OLED_ShowString(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-string">&quot;Num:&quot;</span>);<span class="hljs-comment">//1行1列显示字符串Num:</span><br><br><span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>)<br>&#123;<br>Num += Encoder_Get();<span class="hljs-comment">//获取自上此调用此函数后，旋转编码器的增量值，并将增量值加到Num上</span><br>OLED_ShowSignedNum(<span class="hljs-number">1</span>, <span class="hljs-number">5</span>, Num, <span class="hljs-number">5</span>);<span class="hljs-comment">//显示Num</span><br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure></blockquote><h1 id="tim">6. TIM</h1><h2 id="tim定时中断简要说明">TIM定时中断简要说明</h2><table><thead><tr><th><strong>类型</strong></th><th><strong>编号</strong></th><th><strong>总线</strong></th><th><strong>功能</strong></th></tr></thead><tbody><tr><td>高级定时器</td><td>TIM1、TIM8</td><td>APB2</td><td>拥有通用定时器全部功能，并额外具有重复计数器、死区生成、互补输出、刹车输入等功能</td></tr><tr><td>通用定时器</td><td>TIM2、TIM3、TIM4、TIM5</td><td>APB1</td><td>拥有基本定时器全部功能，并额外具有内外时钟源选择、输入捕获、输出比较、编码器接口、主从触发模式等功能</td></tr><tr><td>基本定时器</td><td>TIM6、TIM7</td><td>APB1</td><td>拥有定时中断、主模式触发DAC的功能</td></tr></tbody></table><blockquote><p>STM32F103C8T6定时器资源：TIM1、TIM2、TIM3、TIM4</p></blockquote><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240903105621132.png"alt="image-20240903105621132" /><figcaption aria-hidden="true">image-20240903105621132</figcaption></figure><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240903111515897.png"alt="image-20240903111515897" /><figcaption aria-hidden="true">image-20240903111515897</figcaption></figure><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240903112611933.png"alt="image-20240903112611933" /><figcaption aria-hidden="true">image-20240903112611933</figcaption></figure><p>[<ahref="https://www.bilibili.com/video/BV1th411z7sn?p=13&amp;vd_source=b94f6aa4bb4f3465ef91f93357149559">6-1]TIM定时中断_哔哩哔哩_bilibili</a></p><h2id="tim定时中断与外部时钟源的选择代码">TIM定时中断与外部时钟源的选择代码</h2><blockquote><ol type="1"><li><p>定时中断</p><p>工程框架：</p><p><img src="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240903164110970.png" alt="image-20240903164110970" style="zoom:67%;" /></p><p><code>Timer.h</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">ifndef</span> __TIMER_H</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> __TIMER_H</span><br><br><span class="hljs-type">void</span> <span class="hljs-title function_">Timer_Init</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br><br></code></pre></td></tr></table></figure><p><code>Timer.c</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;stm32f10x.h&quot;</span>                  <span class="hljs-comment">// Device header</span></span><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * 函    数：定时中断初始化</span><br><span class="hljs-comment">  * 参    数：无</span><br><span class="hljs-comment">  * 返 回 值：无</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Timer_Init</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-comment">/*开启时钟*/</span><br>RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);<span class="hljs-comment">//开启TIM2的时钟</span><br><br><span class="hljs-comment">/*配置时钟源*/</span><br>TIM_InternalClockConfig(TIM2);<span class="hljs-comment">//选择TIM2为内部时钟，若不调用此函数，TIM默认也为内部时钟</span><br><br><span class="hljs-comment">/*时基单元初始化*/</span><br>TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;<span class="hljs-comment">//定义结构体变量</span><br>TIM_TimeBaseInitStructure.TIM_ClockDivision = TIM_CKD_DIV1;<span class="hljs-comment">//时钟分频，选择不分频，此参数用于配置滤波器时钟，不影响时基单元功能</span><br>TIM_TimeBaseInitStructure.TIM_CounterMode = TIM_CounterMode_Up;<span class="hljs-comment">//计数器模式，选择向上计数</span><br>TIM_TimeBaseInitStructure.TIM_Period = <span class="hljs-number">10000</span> - <span class="hljs-number">1</span>;<span class="hljs-comment">//计数周期，即ARR的值</span><br>TIM_TimeBaseInitStructure.TIM_Prescaler = <span class="hljs-number">7200</span> - <span class="hljs-number">1</span>;<span class="hljs-comment">//预分频器，即PSC的值</span><br>TIM_TimeBaseInitStructure.TIM_RepetitionCounter = <span class="hljs-number">0</span>;<span class="hljs-comment">//重复计数器，高级定时器才会用到</span><br>TIM_TimeBaseInit(TIM2, &amp;TIM_TimeBaseInitStructure);<span class="hljs-comment">//将结构体变量交给TIM_TimeBaseInit，配置TIM2的时基单元</span><br><br><span class="hljs-comment">/*中断输出配置*/</span><br>TIM_ClearFlag(TIM2, TIM_FLAG_Update);<span class="hljs-comment">//清除定时器更新标志位</span><br><span class="hljs-comment">//TIM_TimeBaseInit函数末尾，手动产生了更新事件</span><br><span class="hljs-comment">//若不清除此标志位，则开启中断后，会立刻进入一次中断</span><br><span class="hljs-comment">//如果不介意此问题，则不清除此标志位也可</span><br><br>TIM_ITConfig(TIM2, TIM_IT_Update, ENABLE);<span class="hljs-comment">//开启TIM2的更新中断</span><br><br><span class="hljs-comment">/*NVIC中断分组*/</span><br>NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);<span class="hljs-comment">//配置NVIC为分组2</span><br><span class="hljs-comment">//即抢占优先级范围：0~3，响应优先级范围：0~3</span><br><span class="hljs-comment">//此分组配置在整个工程中仅需调用一次</span><br><span class="hljs-comment">//若有多个中断，可以把此代码放在main函数内，while循环之前</span><br><span class="hljs-comment">//若调用多次配置分组的代码，则后执行的配置会覆盖先执行的配置</span><br><br><span class="hljs-comment">/*NVIC配置*/</span><br>NVIC_InitTypeDef NVIC_InitStructure;<span class="hljs-comment">//定义结构体变量</span><br>NVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQn;<span class="hljs-comment">//选择配置NVIC的TIM2线</span><br>NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;<span class="hljs-comment">//指定NVIC线路使能</span><br>NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="hljs-number">2</span>;<span class="hljs-comment">//指定NVIC线路的抢占优先级为2</span><br>NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="hljs-number">1</span>;<span class="hljs-comment">//指定NVIC线路的响应优先级为1</span><br>NVIC_Init(&amp;NVIC_InitStructure);<span class="hljs-comment">//将结构体变量交给NVIC_Init，配置NVIC外设</span><br><br><span class="hljs-comment">/*TIM使能*/</span><br>TIM_Cmd(TIM2, ENABLE);<span class="hljs-comment">//使能TIM2，定时器开始运行</span><br>&#125;<br><br><span class="hljs-comment">/* 定时器中断函数，可以复制到使用它的地方</span><br><span class="hljs-comment">void TIM2_IRQHandler(void)</span><br><span class="hljs-comment">&#123;</span><br><span class="hljs-comment">if (TIM_GetITStatus(TIM2, TIM_IT_Update) == SET)</span><br><span class="hljs-comment">&#123;</span><br><span class="hljs-comment"></span><br><span class="hljs-comment">TIM_ClearITPendingBit(TIM2, TIM_IT_Update);</span><br><span class="hljs-comment">&#125;</span><br><span class="hljs-comment">&#125;</span><br><span class="hljs-comment">*/</span><br><br></code></pre></td></tr></table></figure><p><code>main.c</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;stm32f10x.h&quot;</span>                  <span class="hljs-comment">// Device header</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;Delay.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;OLED.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;Timer.h&quot;</span></span><br><br><span class="hljs-type">uint16_t</span> Num;<span class="hljs-comment">//定义在定时器中断里自增的变量</span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-comment">/*模块初始化*/</span><br>OLED_Init();<span class="hljs-comment">//OLED初始化</span><br>Timer_Init();<span class="hljs-comment">//定时中断初始化</span><br><br><span class="hljs-comment">/*显示静态字符串*/</span><br>OLED_ShowString(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-string">&quot;Num:&quot;</span>);<span class="hljs-comment">//1行1列显示字符串Num:</span><br><br><span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>)<br>&#123;<br>OLED_ShowNum(<span class="hljs-number">1</span>, <span class="hljs-number">5</span>, Num, <span class="hljs-number">5</span>);<span class="hljs-comment">//不断刷新显示Num变量</span><br>&#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * 函    数：TIM2中断函数</span><br><span class="hljs-comment">  * 参    数：无</span><br><span class="hljs-comment">  * 返 回 值：无</span><br><span class="hljs-comment">  * 注意事项：此函数为中断函数，无需调用，中断触发后自动执行</span><br><span class="hljs-comment">  *           函数名为预留的指定名称，可以从启动文件复制</span><br><span class="hljs-comment">  *           请确保函数名正确，不能有任何差异，否则中断函数将不能进入</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">TIM2_IRQHandler</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-keyword">if</span> (TIM_GetITStatus(TIM2, TIM_IT_Update) == SET)<span class="hljs-comment">//判断是否是TIM2的更新事件触发的中断</span><br>&#123;<br>Num ++;<span class="hljs-comment">//Num变量自增，用于测试定时中断</span><br>TIM_ClearITPendingBit(TIM2, TIM_IT_Update);<span class="hljs-comment">//清除TIM2更新事件的中断标志位</span><br><span class="hljs-comment">//中断标志位必须清除</span><br><span class="hljs-comment">//否则中断将连续不断地触发，导致主程序卡死</span><br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure></li><li><p>定时器外部时钟</p><p>Timer.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">ifndef</span> __TIMER_H</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> __TIMER_H</span><br>      <br><span class="hljs-type">void</span> <span class="hljs-title function_">Timer_Init</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><span class="hljs-type">uint16_t</span> <span class="hljs-title function_">Timer_GetCounter</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br>      <br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br>      <br></code></pre></td></tr></table></figure><p>Timer.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;stm32f10x.h&quot;</span>                  <span class="hljs-comment">// Device header</span></span><br>      <br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * 函    数：定时中断初始化</span><br><span class="hljs-comment">  * 参    数：无</span><br><span class="hljs-comment">  * 返 回 值：无</span><br><span class="hljs-comment">  * 注意事项：此函数配置为外部时钟，定时器相当于计数器</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Timer_Init</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-comment">/*开启时钟*/</span><br>RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);<span class="hljs-comment">//开启TIM2的时钟</span><br>RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);<span class="hljs-comment">//开启GPIOA的时钟</span><br>      <br><span class="hljs-comment">/*GPIO初始化*/</span><br>GPIO_InitTypeDef GPIO_InitStructure;<br>GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;<br>GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;<br>GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;<br>GPIO_Init(GPIOA, &amp;GPIO_InitStructure);<span class="hljs-comment">//将PA0引脚初始化为上拉输入</span><br>      <br><span class="hljs-comment">/*外部时钟配置*/</span><br>TIM_ETRClockMode2Config(TIM2, TIM_ExtTRGPSC_OFF, TIM_ExtTRGPolarity_NonInverted, <span class="hljs-number">0x0F</span>);<br><span class="hljs-comment">//选择外部时钟模式2，时钟从TIM_ETR引脚输入</span><br><span class="hljs-comment">//注意TIM2的ETR引脚固定为PA0，无法随意更改</span><br><span class="hljs-comment">//最后一个滤波器参数加到最大0x0F，可滤除时钟信号抖动</span><br>      <br><span class="hljs-comment">/*时基单元初始化*/</span><br>TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;<span class="hljs-comment">//定义结构体变量</span><br>TIM_TimeBaseInitStructure.TIM_ClockDivision = TIM_CKD_DIV1;<span class="hljs-comment">//时钟分频，选择不分频，此参数用于配置滤波器时钟，不影响时基单元功能</span><br>TIM_TimeBaseInitStructure.TIM_CounterMode = TIM_CounterMode_Up;<span class="hljs-comment">//计数器模式，选择向上计数</span><br>TIM_TimeBaseInitStructure.TIM_Period = <span class="hljs-number">10</span> - <span class="hljs-number">1</span>;<span class="hljs-comment">//计数周期，即ARR的值</span><br>TIM_TimeBaseInitStructure.TIM_Prescaler = <span class="hljs-number">1</span> - <span class="hljs-number">1</span>;<span class="hljs-comment">//预分频器，即PSC的值</span><br>TIM_TimeBaseInitStructure.TIM_RepetitionCounter = <span class="hljs-number">0</span>;<span class="hljs-comment">//重复计数器，高级定时器才会用到</span><br>TIM_TimeBaseInit(TIM2, &amp;TIM_TimeBaseInitStructure);<span class="hljs-comment">//将结构体变量交给TIM_TimeBaseInit，配置TIM2的时基单元</span><br>      <br><span class="hljs-comment">/*中断输出配置*/</span><br>TIM_ClearFlag(TIM2, TIM_FLAG_Update);<span class="hljs-comment">//清除定时器更新标志位</span><br><span class="hljs-comment">//TIM_TimeBaseInit函数末尾，手动产生了更新事件</span><br><span class="hljs-comment">//若不清除此标志位，则开启中断后，会立刻进入一次中断</span><br><span class="hljs-comment">//如果不介意此问题，则不清除此标志位也可</span><br>      <br>TIM_ITConfig(TIM2, TIM_IT_Update, ENABLE);<span class="hljs-comment">//开启TIM2的更新中断</span><br>      <br><span class="hljs-comment">/*NVIC中断分组*/</span><br>NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);<span class="hljs-comment">//配置NVIC为分组2</span><br><span class="hljs-comment">//即抢占优先级范围：0~3，响应优先级范围：0~3</span><br><span class="hljs-comment">//此分组配置在整个工程中仅需调用一次</span><br><span class="hljs-comment">//若有多个中断，可以把此代码放在main函数内，while循环之前</span><br><span class="hljs-comment">//若调用多次配置分组的代码，则后执行的配置会覆盖先执行的配置</span><br>      <br><span class="hljs-comment">/*NVIC配置*/</span><br>NVIC_InitTypeDef NVIC_InitStructure;<span class="hljs-comment">//定义结构体变量</span><br>NVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQn;<span class="hljs-comment">//选择配置NVIC的TIM2线</span><br>NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;<span class="hljs-comment">//指定NVIC线路使能</span><br>NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="hljs-number">2</span>;<span class="hljs-comment">//指定NVIC线路的抢占优先级为2</span><br>NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="hljs-number">1</span>;<span class="hljs-comment">//指定NVIC线路的响应优先级为1</span><br>NVIC_Init(&amp;NVIC_InitStructure);<span class="hljs-comment">//将结构体变量交给NVIC_Init，配置NVIC外设</span><br>      <br><span class="hljs-comment">/*TIM使能*/</span><br>TIM_Cmd(TIM2, ENABLE);<span class="hljs-comment">//使能TIM2，定时器开始运行</span><br>&#125;<br>      <br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * 函    数：返回定时器CNT的值</span><br><span class="hljs-comment">  * 参    数：无</span><br><span class="hljs-comment">  * 返 回 值：定时器CNT的值，范围：0~65535</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">uint16_t</span> <span class="hljs-title function_">Timer_GetCounter</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-keyword">return</span> TIM_GetCounter(TIM2);<span class="hljs-comment">//返回定时器TIM2的CNT</span><br>&#125;<br>      <br><span class="hljs-comment">/* 定时器中断函数，可以复制到使用它的地方</span><br><span class="hljs-comment">void TIM2_IRQHandler(void)</span><br><span class="hljs-comment">&#123;</span><br><span class="hljs-comment">if (TIM_GetITStatus(TIM2, TIM_IT_Update) == SET)</span><br><span class="hljs-comment">&#123;</span><br><span class="hljs-comment">      </span><br><span class="hljs-comment">TIM_ClearITPendingBit(TIM2, TIM_IT_Update);</span><br><span class="hljs-comment">&#125;</span><br><span class="hljs-comment">&#125;</span><br><span class="hljs-comment">*/</span><br>      <br></code></pre></td></tr></table></figure><p>main.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;stm32f10x.h&quot;</span>                  <span class="hljs-comment">// Device header</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;Delay.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;OLED.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;Timer.h&quot;</span></span><br>      <br><span class="hljs-type">uint16_t</span> Num;<span class="hljs-comment">//定义在定时器中断里自增的变量</span><br>      <br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-comment">/*模块初始化*/</span><br>OLED_Init();<span class="hljs-comment">//OLED初始化</span><br>Timer_Init();<span class="hljs-comment">//定时中断初始化</span><br>      <br><span class="hljs-comment">/*显示静态字符串*/</span><br>OLED_ShowString(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-string">&quot;Num:&quot;</span>);<span class="hljs-comment">//1行1列显示字符串Num:</span><br>OLED_ShowString(<span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-string">&quot;CNT:&quot;</span>);<span class="hljs-comment">//2行1列显示字符串CNT:</span><br>      <br><span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>)<br>&#123;<br>OLED_ShowNum(<span class="hljs-number">1</span>, <span class="hljs-number">5</span>, Num, <span class="hljs-number">5</span>);<span class="hljs-comment">//不断刷新显示Num变量</span><br>OLED_ShowNum(<span class="hljs-number">2</span>, <span class="hljs-number">5</span>, Timer_GetCounter(), <span class="hljs-number">5</span>);<span class="hljs-comment">//不断刷新显示CNT的值</span><br>&#125;<br>&#125;<br>      <br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * 函    数：TIM2中断函数</span><br><span class="hljs-comment">  * 参    数：无</span><br><span class="hljs-comment">  * 返 回 值：无</span><br><span class="hljs-comment">  * 注意事项：此函数为中断函数，无需调用，中断触发后自动执行</span><br><span class="hljs-comment">  *           函数名为预留的指定名称，可以从启动文件复制</span><br><span class="hljs-comment">  *           请确保函数名正确，不能有任何差异，否则中断函数将不能进入</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">TIM2_IRQHandler</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-keyword">if</span> (TIM_GetITStatus(TIM2, TIM_IT_Update) == SET)<span class="hljs-comment">//判断是否是TIM2的更新事件触发的中断</span><br>&#123;<br>Num ++;<span class="hljs-comment">//Num变量自增，用于测试定时中断</span><br>TIM_ClearITPendingBit(TIM2, TIM_IT_Update);<span class="hljs-comment">//清除TIM2更新事件的中断标志位</span><br><span class="hljs-comment">//中断标志位必须清除</span><br><span class="hljs-comment">//否则中断将连续不断地触发，导致主程序卡死</span><br>&#125;<br>&#125;<br>      <br></code></pre></td></tr></table></figure></li></ol></blockquote><h2 id="tim输出比较简要说明">TIM输出比较简要说明</h2><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240903181004661.png"alt="image-20240903181004661" /><figcaption aria-hidden="true">image-20240903181004661</figcaption></figure><p><img src="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240903181750744.png"/></p><table><thead><tr><th><strong>模式</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td>冻结</td><td>CNT=CCR时，REF保持为原状态</td></tr><tr><td>匹配时置有效电平</td><td>CNT=CCR时，REF置有效电平</td></tr><tr><td>匹配时置无效电平</td><td>CNT=CCR时，REF置无效电平</td></tr><tr><td>匹配时电平翻转</td><td>CNT=CCR时，REF电平翻转</td></tr><tr><td>强制为无效电平</td><td>CNT与CCR无效，REF强制为无效电平</td></tr><tr><td>强制为有效电平</td><td>CNT与CCR无效，REF强制为有效电平</td></tr><tr><td>PWM模式1</td><td>向上计数：CNT&lt;CCR时，REF置有效电平，CNT≥CCR时，REF置无效电平向下计数：CNT&gt;CCR时，REF置无效电平，CNT≤CCR时，REF置有效电平</td></tr><tr><td>PWM模式2</td><td>向上计数：CNT&lt;CCR时，REF置无效电平，CNT≥CCR时，REF置有效电平向下计数：CNT&gt;CCR时，REF置有效电平，CNT≤CCR时，REF置无效电平</td></tr></tbody></table><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240903182951964.png"alt="image-20240903182951964" /><figcaption aria-hidden="true">image-20240903182951964</figcaption></figure><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240903183525704.png"alt="image-20240903183525704" /><figcaption aria-hidden="true">image-20240903183525704</figcaption></figure><h2 id="tim输出比较代码">TIM输出比较代码</h2><p>[<ahref="https://www.bilibili.com/video/BV1th411z7sn?p=16&amp;vd_source=b94f6aa4bb4f3465ef91f93357149559">6-4]PWM驱动LED呼吸灯&amp;PWM驱动舵机&amp;PWM驱动直流电机_哔哩哔哩_bilibili</a></p><h3 id="pwm驱动led呼吸灯代码">1. PWM驱动LED呼吸灯代码</h3><blockquote><p>PWM.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">ifndef</span> __PWM_H</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> __PWM_H</span><br><br><span class="hljs-type">void</span> <span class="hljs-title function_">PWM_Init</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">PWM_SetCompare1</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> Compare)</span>;<br><br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br><br></code></pre></td></tr></table></figure><p>PWM.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;stm32f10x.h&quot;</span>                  <span class="hljs-comment">// Device header</span></span><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * 函    数：PWM初始化</span><br><span class="hljs-comment">  * 参    数：无</span><br><span class="hljs-comment">  * 返 回 值：无</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">PWM_Init</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-comment">/*开启时钟*/</span><br>RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);<span class="hljs-comment">//开启TIM2的时钟</span><br>RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);<span class="hljs-comment">//开启GPIOA的时钟</span><br><br><span class="hljs-comment">/*GPIO重映射*/</span><br><span class="hljs-comment">//RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO, ENABLE);//开启AFIO的时钟，重映射必须先开启AFIO的时钟</span><br><span class="hljs-comment">//GPIO_PinRemapConfig(GPIO_PartialRemap1_TIM2, ENABLE);//将TIM2的引脚部分重映射，具体的映射方案需查看参考手册</span><br><span class="hljs-comment">//GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable, ENABLE);//将JTAG引脚失能，作为普通GPIO引脚使用</span><br><br><span class="hljs-comment">/*GPIO初始化*/</span><br>GPIO_InitTypeDef GPIO_InitStructure;<br>GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;<br>GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;<span class="hljs-comment">//GPIO_Pin_15;</span><br>GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;<br>GPIO_Init(GPIOA, &amp;GPIO_InitStructure);<span class="hljs-comment">//将PA0引脚初始化为复用推挽输出</span><br><span class="hljs-comment">//受外设控制的引脚，均需要配置为复用模式</span><br><br><span class="hljs-comment">/*配置时钟源*/</span><br>TIM_InternalClockConfig(TIM2);<span class="hljs-comment">//选择TIM2为内部时钟，若不调用此函数，TIM默认也为内部时钟</span><br><br><span class="hljs-comment">/*时基单元初始化*/</span><br>TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;<span class="hljs-comment">//定义结构体变量</span><br>TIM_TimeBaseInitStructure.TIM_ClockDivision = TIM_CKD_DIV1;     <span class="hljs-comment">//时钟分频，选择不分频，此参数用于配置滤波器时钟，不影响时基单元功能</span><br>TIM_TimeBaseInitStructure.TIM_CounterMode = TIM_CounterMode_Up; <span class="hljs-comment">//计数器模式，选择向上计数</span><br>TIM_TimeBaseInitStructure.TIM_Period = <span class="hljs-number">100</span> - <span class="hljs-number">1</span>;<span class="hljs-comment">//计数周期，即ARR的值</span><br>TIM_TimeBaseInitStructure.TIM_Prescaler = <span class="hljs-number">720</span> - <span class="hljs-number">1</span>;<span class="hljs-comment">//预分频器，即PSC的值</span><br>TIM_TimeBaseInitStructure.TIM_RepetitionCounter = <span class="hljs-number">0</span>;            <span class="hljs-comment">//重复计数器，高级定时器才会用到</span><br>TIM_TimeBaseInit(TIM2, &amp;TIM_TimeBaseInitStructure);             <span class="hljs-comment">//将结构体变量交给TIM_TimeBaseInit，配置TIM2的时基单元</span><br><br><span class="hljs-comment">/*输出比较初始化*/</span><br>TIM_OCInitTypeDef TIM_OCInitStructure;<span class="hljs-comment">//定义结构体变量</span><br>TIM_OCStructInit(&amp;TIM_OCInitStructure);<span class="hljs-comment">//结构体初始化，若结构体没有完整赋值</span><br><span class="hljs-comment">//则最好执行此函数，给结构体所有成员都赋一个默认值</span><br><span class="hljs-comment">//避免结构体初值不确定的问题</span><br>TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;<span class="hljs-comment">//输出比较模式，选择PWM模式1</span><br>TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;<span class="hljs-comment">//输出极性，选择为高，若选择极性为低，则输出高低电平取反</span><br>TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;<span class="hljs-comment">//输出使能</span><br>TIM_OCInitStructure.TIM_Pulse = <span class="hljs-number">0</span>;<span class="hljs-comment">//初始的CCR值</span><br>TIM_OC1Init(TIM2, &amp;TIM_OCInitStructure);<span class="hljs-comment">//将结构体变量交给TIM_OC1Init，配置TIM2的输出比较通道1</span><br><br><span class="hljs-comment">/*TIM使能*/</span><br>TIM_Cmd(TIM2, ENABLE);<span class="hljs-comment">//使能TIM2，定时器开始运行</span><br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * 函    数：PWM设置CCR</span><br><span class="hljs-comment">  * 参    数：Compare 要写入的CCR的值，范围：0~100</span><br><span class="hljs-comment">  * 返 回 值：无</span><br><span class="hljs-comment">  * 注意事项：CCR和ARR共同决定占空比，此函数仅设置CCR的值，并不直接是占空比</span><br><span class="hljs-comment">  *           占空比Duty = CCR / (ARR + 1)</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">PWM_SetCompare1</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> Compare)</span><br>&#123;<br>TIM_SetCompare1(TIM2, Compare);<span class="hljs-comment">//设置CCR1的值</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p>main.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;stm32f10x.h&quot;</span>                  <span class="hljs-comment">// Device header</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;Delay.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;OLED.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;PWM.h&quot;</span></span><br><br><span class="hljs-type">uint8_t</span> i;<span class="hljs-comment">//定义for循环的变量</span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-comment">/*模块初始化*/</span><br>OLED_Init();<span class="hljs-comment">//OLED初始化</span><br>PWM_Init();<span class="hljs-comment">//PWM初始化</span><br><br><span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>)<br>&#123;<br><span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">100</span>; i++)<br>&#123;<br>PWM_SetCompare1(i);<span class="hljs-comment">//依次将定时器的CCR寄存器设置为0~100，PWM占空比逐渐增大，LED逐渐变亮</span><br>Delay_ms(<span class="hljs-number">10</span>);<span class="hljs-comment">//延时10ms</span><br>&#125;<br><span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">100</span>; i++)<br>&#123;<br>PWM_SetCompare1(<span class="hljs-number">100</span> - i);<span class="hljs-comment">//依次将定时器的CCR寄存器设置为100~0，PWM占空比逐渐减小，LED逐渐变暗</span><br>Delay_ms(<span class="hljs-number">10</span>);<span class="hljs-comment">//延时10ms</span><br>&#125;<br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure></blockquote><h3 id="pwm驱动舵机代码">2. PWM驱动舵机代码</h3><blockquote><p>PWM.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">ifndef</span> __PWM_H</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> __PWM_H</span><br><br><span class="hljs-type">void</span> <span class="hljs-title function_">PWM_Init</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">PWM_SetCompare2</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> Compare)</span>;<br><br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br><br></code></pre></td></tr></table></figure><p>PWM.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;stm32f10x.h&quot;</span>                  <span class="hljs-comment">// Device header</span></span><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * 函    数：PWM初始化</span><br><span class="hljs-comment">  * 参    数：无</span><br><span class="hljs-comment">  * 返 回 值：无</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">PWM_Init</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-comment">/*开启时钟*/</span><br>RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);<span class="hljs-comment">//开启TIM2的时钟</span><br>RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);<span class="hljs-comment">//开启GPIOA的时钟</span><br><br><span class="hljs-comment">/*GPIO初始化*/</span><br>GPIO_InitTypeDef GPIO_InitStructure;<br>GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;<br>GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;<br>GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;<br>GPIO_Init(GPIOA, &amp;GPIO_InitStructure);<span class="hljs-comment">//将PA1引脚初始化为复用推挽输出</span><br><span class="hljs-comment">//受外设控制的引脚，均需要配置为复用模式</span><br><br><span class="hljs-comment">/*配置时钟源*/</span><br>TIM_InternalClockConfig(TIM2);<span class="hljs-comment">//选择TIM2为内部时钟，若不调用此函数，TIM默认也为内部时钟</span><br><br><span class="hljs-comment">/*时基单元初始化*/</span><br>TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;<span class="hljs-comment">//定义结构体变量</span><br>TIM_TimeBaseInitStructure.TIM_ClockDivision = TIM_CKD_DIV1;     <span class="hljs-comment">//时钟分频，选择不分频，此参数用于配置滤波器时钟，不影响时基单元功能</span><br>TIM_TimeBaseInitStructure.TIM_CounterMode = TIM_CounterMode_Up; <span class="hljs-comment">//计数器模式，选择向上计数</span><br>TIM_TimeBaseInitStructure.TIM_Period = <span class="hljs-number">20000</span> - <span class="hljs-number">1</span>;<span class="hljs-comment">//计数周期，即ARR的值</span><br>TIM_TimeBaseInitStructure.TIM_Prescaler = <span class="hljs-number">72</span> - <span class="hljs-number">1</span>;<span class="hljs-comment">//预分频器，即PSC的值</span><br>TIM_TimeBaseInitStructure.TIM_RepetitionCounter = <span class="hljs-number">0</span>;            <span class="hljs-comment">//重复计数器，高级定时器才会用到</span><br>TIM_TimeBaseInit(TIM2, &amp;TIM_TimeBaseInitStructure);             <span class="hljs-comment">//将结构体变量交给TIM_TimeBaseInit，配置TIM2的时基单元</span><br><br><span class="hljs-comment">/*输出比较初始化*/</span> <br>TIM_OCInitTypeDef TIM_OCInitStructure;<span class="hljs-comment">//定义结构体变量</span><br>TIM_OCStructInit(&amp;TIM_OCInitStructure);                         <span class="hljs-comment">//结构体初始化，若结构体没有完整赋值</span><br>                                                                <span class="hljs-comment">//则最好执行此函数，给结构体所有成员都赋一个默认值</span><br>                                                                <span class="hljs-comment">//避免结构体初值不确定的问题</span><br>TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;               <span class="hljs-comment">//输出比较模式，选择PWM模式1</span><br>TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;       <span class="hljs-comment">//输出极性，选择为高，若选择极性为低，则输出高低电平取反</span><br>TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;   <span class="hljs-comment">//输出使能</span><br>TIM_OCInitStructure.TIM_Pulse = <span class="hljs-number">0</span>;<span class="hljs-comment">//初始的CCR值</span><br>TIM_OC2Init(TIM2, &amp;TIM_OCInitStructure);                        <span class="hljs-comment">//将结构体变量交给TIM_OC2Init，配置TIM2的输出比较通道2</span><br><br><span class="hljs-comment">/*TIM使能*/</span><br>TIM_Cmd(TIM2, ENABLE);<span class="hljs-comment">//使能TIM2，定时器开始运行</span><br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * 函    数：PWM设置CCR</span><br><span class="hljs-comment">  * 参    数：Compare 要写入的CCR的值，范围：0~100</span><br><span class="hljs-comment">  * 返 回 值：无</span><br><span class="hljs-comment">  * 注意事项：CCR和ARR共同决定占空比，此函数仅设置CCR的值，并不直接是占空比</span><br><span class="hljs-comment">  *           占空比Duty = CCR / (ARR + 1)</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">PWM_SetCompare2</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> Compare)</span><br>&#123;<br>TIM_SetCompare2(TIM2, Compare);<span class="hljs-comment">//设置CCR2的值</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p><strong>注意，LED呼吸灯的PWM代码与舵机的PWM代码有些区别：LED呼吸灯用TIM2的通道1输出PWM，舵机用TIM2的通道2输出PWM。因为有四个通道，所以可以使用一个定时器的四个通道输出PWM（共用一个定时器，所以四个通道的频率必须相同；占空比是由各自的CCR决定，所以占空比可以各自设定）</strong></p><p><em>舵机相关的头文件和源文件放在Hardware文件夹下</em></p><p>Servo.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">ifndef</span> __SERVO_H</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> __SERVO_H</span><br><br><span class="hljs-type">void</span> <span class="hljs-title function_">Servo_Init</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">Servo_SetAngle</span><span class="hljs-params">(<span class="hljs-type">float</span> Angle)</span>;<br><br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br><br></code></pre></td></tr></table></figure><p>Servo.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;stm32f10x.h&quot;</span>                  <span class="hljs-comment">// Device header</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;PWM.h&quot;</span></span><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * 函    数：舵机初始化</span><br><span class="hljs-comment">  * 参    数：无</span><br><span class="hljs-comment">  * 返 回 值：无</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Servo_Init</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>PWM_Init();<span class="hljs-comment">//初始化舵机的底层PWM</span><br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * 函    数：舵机设置角度</span><br><span class="hljs-comment">  * 参    数：Angle 要设置的舵机角度，范围：0~180</span><br><span class="hljs-comment">  * 返 回 值：无</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Servo_SetAngle</span><span class="hljs-params">(<span class="hljs-type">float</span> Angle)</span><br>&#123;<br>PWM_SetCompare2(Angle / <span class="hljs-number">180</span> * <span class="hljs-number">2000</span> + <span class="hljs-number">500</span>);<span class="hljs-comment">//设置占空比</span><br><span class="hljs-comment">//将角度线性变换，对应到舵机要求的占空比范围上</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p>main.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;stm32f10x.h&quot;</span>                  <span class="hljs-comment">// Device header</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;Delay.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;OLED.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;Servo.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;Key.h&quot;</span></span><br><br><span class="hljs-type">uint8_t</span> KeyNum;<span class="hljs-comment">//定义用于接收键码的变量</span><br><span class="hljs-type">float</span> Angle;<span class="hljs-comment">//定义角度变量</span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-comment">/*模块初始化*/</span><br>OLED_Init();<span class="hljs-comment">//OLED初始化</span><br>Servo_Init();<span class="hljs-comment">//舵机初始化</span><br>Key_Init();<span class="hljs-comment">//按键初始化</span><br><br><span class="hljs-comment">/*显示静态字符串*/</span><br>OLED_ShowString(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-string">&quot;Angle:&quot;</span>);<span class="hljs-comment">//1行1列显示字符串Angle:</span><br><br><span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>)<br>&#123;<br>KeyNum = Key_GetNum();<span class="hljs-comment">//获取按键键码</span><br><span class="hljs-keyword">if</span> (KeyNum == <span class="hljs-number">1</span>)<span class="hljs-comment">//按键1按下</span><br>&#123;<br>Angle += <span class="hljs-number">30</span>;<span class="hljs-comment">//角度变量自增30</span><br><span class="hljs-keyword">if</span> (Angle &gt; <span class="hljs-number">180</span>)<span class="hljs-comment">//角度变量超过180后</span><br>&#123;<br>Angle = <span class="hljs-number">0</span>;<span class="hljs-comment">//角度变量归零</span><br>&#125;<br>&#125;<br>Servo_SetAngle(Angle);<span class="hljs-comment">//设置舵机的角度为角度变量</span><br>OLED_ShowNum(<span class="hljs-number">1</span>, <span class="hljs-number">7</span>, Angle, <span class="hljs-number">3</span>);<span class="hljs-comment">//OLED显示角度变量</span><br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure></blockquote><h3 id="pwm驱动直流电机代码">3. PWM驱动直流电机代码</h3><blockquote><p>PWM.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">ifndef</span> __PWM_H</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> __PWM_H</span><br><br><span class="hljs-type">void</span> <span class="hljs-title function_">PWM_Init</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">PWM_SetCompare3</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> Compare)</span>;<br><br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br><br></code></pre></td></tr></table></figure><p>PWM.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;stm32f10x.h&quot;</span>                  <span class="hljs-comment">// Device header</span></span><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * 函    数：PWM初始化</span><br><span class="hljs-comment">  * 参    数：无</span><br><span class="hljs-comment">  * 返 回 值：无</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">PWM_Init</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-comment">/*开启时钟*/</span><br>RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);<span class="hljs-comment">//开启TIM2的时钟</span><br>RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);<span class="hljs-comment">//开启GPIOA的时钟</span><br><br><span class="hljs-comment">/*GPIO初始化*/</span><br>GPIO_InitTypeDef GPIO_InitStructure;<br>GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;<br>GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;<br>GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;<br>GPIO_Init(GPIOA, &amp;GPIO_InitStructure);<span class="hljs-comment">//将PA2引脚初始化为复用推挽输出</span><br><span class="hljs-comment">//受外设控制的引脚，均需要配置为复用模式</span><br><br><span class="hljs-comment">/*配置时钟源*/</span><br>TIM_InternalClockConfig(TIM2);<span class="hljs-comment">//选择TIM2为内部时钟，若不调用此函数，TIM默认也为内部时钟</span><br><br><span class="hljs-comment">/*时基单元初始化*/</span><br>TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;<span class="hljs-comment">//定义结构体变量</span><br>TIM_TimeBaseInitStructure.TIM_ClockDivision = TIM_CKD_DIV1;     <span class="hljs-comment">//时钟分频，选择不分频，此参数用于配置滤波器时钟，不影响时基单元功能</span><br>TIM_TimeBaseInitStructure.TIM_CounterMode = TIM_CounterMode_Up; <span class="hljs-comment">//计数器模式，选择向上计数</span><br>TIM_TimeBaseInitStructure.TIM_Period = <span class="hljs-number">100</span> - <span class="hljs-number">1</span>;                 <span class="hljs-comment">//计数周期，即ARR的值</span><br>TIM_TimeBaseInitStructure.TIM_Prescaler = <span class="hljs-number">36</span> - <span class="hljs-number">1</span>;               <span class="hljs-comment">//预分频器，即PSC的值</span><br>TIM_TimeBaseInitStructure.TIM_RepetitionCounter = <span class="hljs-number">0</span>;            <span class="hljs-comment">//重复计数器，高级定时器才会用到</span><br>TIM_TimeBaseInit(TIM2, &amp;TIM_TimeBaseInitStructure);             <span class="hljs-comment">//将结构体变量交给TIM_TimeBaseInit，配置TIM2的时基单元</span><br><br><span class="hljs-comment">/*输出比较初始化*/</span> <br>TIM_OCInitTypeDef TIM_OCInitStructure;<span class="hljs-comment">//定义结构体变量</span><br>TIM_OCStructInit(&amp;TIM_OCInitStructure);                         <span class="hljs-comment">//结构体初始化，若结构体没有完整赋值</span><br>                                                                <span class="hljs-comment">//则最好执行此函数，给结构体所有成员都赋一个默认值</span><br>                                                                <span class="hljs-comment">//避免结构体初值不确定的问题</span><br>TIM_OCInitStructure.TIM_OCMode = TIM_OCMode_PWM1;               <span class="hljs-comment">//输出比较模式，选择PWM模式1</span><br>TIM_OCInitStructure.TIM_OCPolarity = TIM_OCPolarity_High;       <span class="hljs-comment">//输出极性，选择为高，若选择极性为低，则输出高低电平取反</span><br>TIM_OCInitStructure.TIM_OutputState = TIM_OutputState_Enable;   <span class="hljs-comment">//输出使能</span><br>TIM_OCInitStructure.TIM_Pulse = <span class="hljs-number">0</span>;<span class="hljs-comment">//初始的CCR值</span><br>TIM_OC3Init(TIM2, &amp;TIM_OCInitStructure);                        <span class="hljs-comment">//将结构体变量交给TIM_OC3Init，配置TIM2的输出比较通道3</span><br><br><span class="hljs-comment">/*TIM使能*/</span><br>TIM_Cmd(TIM2, ENABLE);<span class="hljs-comment">//使能TIM2，定时器开始运行</span><br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * 函    数：PWM设置CCR</span><br><span class="hljs-comment">  * 参    数：Compare 要写入的CCR的值，范围：0~100</span><br><span class="hljs-comment">  * 返 回 值：无</span><br><span class="hljs-comment">  * 注意事项：CCR和ARR共同决定占空比，此函数仅设置CCR的值，并不直接是占空比</span><br><span class="hljs-comment">  *           占空比Duty = CCR / (ARR + 1)</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">PWM_SetCompare3</span><span class="hljs-params">(<span class="hljs-type">uint16_t</span> Compare)</span><br>&#123;<br>TIM_SetCompare3(TIM2, Compare);<span class="hljs-comment">//设置CCR3的值</span><br>&#125;<br><br></code></pre></td></tr></table></figure><p>Motor.h</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">ifndef</span> __MOTOR_H</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> __MOTOR_H</span><br><br><span class="hljs-type">void</span> <span class="hljs-title function_">Motor_Init</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>;<br><span class="hljs-type">void</span> <span class="hljs-title function_">Motor_SetSpeed</span><span class="hljs-params">(<span class="hljs-type">int8_t</span> Speed)</span>;<br><br><span class="hljs-meta">#<span class="hljs-keyword">endif</span></span><br><br></code></pre></td></tr></table></figure><p>Motor.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;stm32f10x.h&quot;</span>                  <span class="hljs-comment">// Device header</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;PWM.h&quot;</span></span><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * 函    数：直流电机初始化</span><br><span class="hljs-comment">  * 参    数：无</span><br><span class="hljs-comment">  * 返 回 值：无</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Motor_Init</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-comment">/*开启时钟*/</span><br>RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);<span class="hljs-comment">//开启GPIOA的时钟</span><br><br>GPIO_InitTypeDef GPIO_InitStructure;<br>GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;<br>GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4 | GPIO_Pin_5;<br>GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;<br>GPIO_Init(GPIOA, &amp;GPIO_InitStructure);<span class="hljs-comment">//将PA4和PA5引脚初始化为推挽输出</span><br><br>PWM_Init();<span class="hljs-comment">//初始化直流电机的底层PWM</span><br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment">  * 函    数：直流电机设置速度</span><br><span class="hljs-comment">  * 参    数：Speed 要设置的速度，范围：-100~100</span><br><span class="hljs-comment">  * 返 回 值：无</span><br><span class="hljs-comment">  */</span><br><span class="hljs-type">void</span> <span class="hljs-title function_">Motor_SetSpeed</span><span class="hljs-params">(<span class="hljs-type">int8_t</span> Speed)</span><br>&#123;<br><span class="hljs-keyword">if</span> (Speed &gt;= <span class="hljs-number">0</span>)<span class="hljs-comment">//如果设置正转的速度值</span><br>&#123;<br>GPIO_SetBits(GPIOA, GPIO_Pin_4);<span class="hljs-comment">//PA4置高电平</span><br>GPIO_ResetBits(GPIOA, GPIO_Pin_5);<span class="hljs-comment">//PA5置低电平，设置方向为正转</span><br>PWM_SetCompare3(Speed);<span class="hljs-comment">//PWM设置为速度值</span><br>&#125;<br><span class="hljs-keyword">else</span><span class="hljs-comment">//否则，即设置反转的速度值</span><br>&#123;<br>GPIO_ResetBits(GPIOA, GPIO_Pin_4);<span class="hljs-comment">//PA4置低电平</span><br>GPIO_SetBits(GPIOA, GPIO_Pin_5);<span class="hljs-comment">//PA5置高电平，设置方向为反转</span><br>PWM_SetCompare3(-Speed);<span class="hljs-comment">//PWM设置为负的速度值，因为此时速度值为负数，而PWM只能给正数</span><br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>main.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;stm32f10x.h&quot;</span>                  <span class="hljs-comment">// Device header</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;Delay.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;OLED.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;Motor.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;Key.h&quot;</span></span><br><br><span class="hljs-type">uint8_t</span> KeyNum;<span class="hljs-comment">//定义用于接收按键键码的变量</span><br><span class="hljs-type">int8_t</span> Speed;<span class="hljs-comment">//定义速度变量</span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-comment">/*模块初始化*/</span><br>OLED_Init();<span class="hljs-comment">//OLED初始化</span><br>Motor_Init();<span class="hljs-comment">//直流电机初始化</span><br>Key_Init();<span class="hljs-comment">//按键初始化</span><br><br><span class="hljs-comment">/*显示静态字符串*/</span><br>OLED_ShowString(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-string">&quot;Speed:&quot;</span>);<span class="hljs-comment">//1行1列显示字符串Speed:</span><br><br><span class="hljs-keyword">while</span> (<span class="hljs-number">1</span>)<br>&#123;<br>KeyNum = Key_GetNum();<span class="hljs-comment">//获取按键键码</span><br><span class="hljs-keyword">if</span> (KeyNum == <span class="hljs-number">1</span>)<span class="hljs-comment">//按键1按下</span><br>&#123;<br>Speed += <span class="hljs-number">20</span>;<span class="hljs-comment">//速度变量自增20</span><br><span class="hljs-keyword">if</span> (Speed &gt; <span class="hljs-number">100</span>)<span class="hljs-comment">//速度变量超过100后</span><br>&#123;<br>Speed = <span class="hljs-number">-100</span>;<span class="hljs-comment">//速度变量变为-100</span><br><span class="hljs-comment">//此操作会让电机旋转方向突然改变，可能会因供电不足而导致单片机复位</span><br><span class="hljs-comment">//若出现了此现象，则应避免使用这样的操作</span><br>&#125;<br>&#125;<br>Motor_SetSpeed(Speed);<span class="hljs-comment">//设置直流电机的速度为速度变量</span><br>OLED_ShowSignedNum(<span class="hljs-number">1</span>, <span class="hljs-number">7</span>, Speed, <span class="hljs-number">3</span>);<span class="hljs-comment">//OLED显示速度变量</span><br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure></blockquote><h2 id="tim-输入捕获简要说明">TIM 输入捕获简要说明</h2><h2 id="tim-输入捕获代码">TIM 输入捕获代码</h2><blockquote></blockquote><h2 id="tim编码器接口简要说明">TIM编码器接口简要说明</h2><h2 id="tim编码器代码">TIM编码器代码</h2><blockquote></blockquote><h1 id="一些tips">一些tips</h1><h2id="小魔方向上or向下的箭头可以调整组的位置也可以使用小魔方来新建组和添加我们需要的文件">小魔方==&gt;向上or向下的箭头可以调整组的位置，也可以使用小魔方来新建组和添加我们需要的文件</h2><blockquote><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240901193314212.png"alt="image-20240901193314212" /><figcaption aria-hidden="true">image-20240901193314212</figcaption></figure></blockquote><h2id="可以通过查看一些库函数的定义来明确所需的参数直接复制对应参数也可以提高速度">可以通过查看一些库函数的定义来明确所需的参数，直接复制对应参数也可以提高速度</h2><blockquote><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240901193616058.png"alt="image-20240901193616058" /><figcaption aria-hidden="true">image-20240901193616058</figcaption></figure><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240901193656847.png"alt="image-20240901193656847" /><figcaption aria-hidden="true">image-20240901193656847</figcaption></figure></blockquote><blockquote><p><code>ctrl+F</code>搜索</p></blockquote><blockquote><p><code>\STM32F10x_StdPeriph_Lib_V3.5.0\STM32F10x_StdPeriph_Lib_V3.5.0</code>下有对应版本的库函数帮助手册，必要时可以参考一下</p><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240902100558927.png"alt="image-20240902100558927" /><figcaption aria-hidden="true">image-20240902100558927</figcaption></figure></blockquote><blockquote><table><thead><tr><th><strong>关键字</strong></th><th><strong>位数</strong></th><th><strong>表示范围</strong></th><th><strong>stdint关键字</strong></th><th><strong>ST关键字</strong></th></tr></thead><tbody><tr><td>char</td><td>8</td><td>-128 ~ 127</td><td>int8_t</td><td>s8</td></tr><tr><td>unsigned char</td><td>8</td><td>0 ~ 255</td><td>uint8_t</td><td>u8</td></tr><tr><td>short</td><td>16</td><td>-32768 ~ 32767</td><td>int16_t</td><td>s16</td></tr><tr><td>unsigned short</td><td>16</td><td>0 ~ 65535</td><td>uint16_t</td><td>u16</td></tr><tr><td>int</td><td>32</td><td>-2147483648 ~ 2147483647</td><td>int32_t</td><td>s32</td></tr><tr><td>unsigned int</td><td>32</td><td>0 ~ 4294967295</td><td>uint32_t</td><td>u32</td></tr><tr><td>long</td><td>32</td><td>-2147483648 ~ 2147483647</td><td></td><td></td></tr><tr><td>unsigned long</td><td>32</td><td>0 ~ 4294967295</td><td></td><td></td></tr><tr><td>long long</td><td>64</td><td>-(2^64)/2 ~ (2^64)/2-1</td><td>int64_t</td><td></td></tr><tr><td>unsigned long long</td><td>64</td><td>0 ~ (2^64)-1</td><td>uint64_t</td><td></td></tr><tr><td>float</td><td>32</td><td>-3.4e38 ~ 3.4e38</td><td></td><td></td></tr><tr><td>double</td><td>64</td><td>-1.7e308 ~ 1.7e308</td><td></td><td></td></tr></tbody></table></blockquote><h2id="ctrlalt空格可以弹出代码提示框如果发现ctrl空格会切换中英文输入法右键桌面右下的中英然后按键设置取消ctrl空格"><code>ctrl+alt+空格</code>可以弹出代码提示框，如果发现ctrl+空格会切换中英文输入法：右键桌面右下的<code>中/英</code>然后<code>按键设置</code>，取消<code>ctrl+空格</code></h2><h2id="keil5工具栏中的蓝色小旗子是添加书签通过添加书签可以方便定位一些函数">keil5工具栏中的蓝色小旗子是添加书签，通过添加书签可以方便定位一些函数</h2><h2id="跨越不同.c文件使用同一个变量声明和使用不在同一个.c文件中需要在使用的文件中使用extern关键字告诉编译器我有这个变量但是不在这个文件里让它自个去找">跨越不同.c文件使用同一个变量（声明和使用不在同一个.c文件中）需要在使用的文件中使用extern关键字，告诉编译器，我有这个变量，但是不在这个文件里，让它自个去找</h2><h1 id="一些小问题的解决">一些小问题的解决</h1><p><ahref="https://www.cnblogs.com/freedomAfish/articles/13654989.html">关于keil5的system viewer找不到子选项 - hifish - 博客园 (cnblogs.com)</a></p><p><ahref="https://blog.csdn.net/weixin_44775036/article/details/122215607#:~:text=软件版本：%20Keil%20μVision%20V5.31.0.0%20问题描述：%20如下图所示，在Flash,Download选项卡中勾选了%20Reset%20and%20Run，但是程序load结束后不自动运行，断电重新上电后，可以正常运行。%20解决办法：%20如下图所示，%20在Pack选项卡中去掉Enable前面的对勾，即设置为未选中状态，如此，程序load结束后即可自动运行。">KeilMDK-ARM软件勾选Reset andRun不起作用的解决办法_keil点击run不运行-CSDN博客</a></p>]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>stm32</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>树莓派静态ip的设置</title>
    <link href="/2024/08/31/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%9D%99%E6%80%81ip%E7%9A%84%E8%AE%BE%E7%BD%AE/"/>
    <url>/2024/08/31/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%9D%99%E6%80%81ip%E7%9A%84%E8%AE%BE%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="为什么要给树莓派设置静态ip">为什么要给树莓派设置静态IP</h1><p>对于我自身来说其实给树莓派设置这个静态ip并不是必须的，但是考虑到后面可能需要用，主要就是因为树莓派在连接不同的网络的时候，它的IP并不是固定的，是动态的，那么没有显示器的话，我们要去查树莓派的ip并且去ssh连接它或者用vnc连接都是比较麻烦的。</p><h1 id="遇到的问题">遇到的问题</h1><p>其实最大的问题就是，树莓派的系统版本不同导致有些网上找到的资料我们不能拿来直接用，就很烦，常说一句话<strong>”一包烟，一杯茶，一个环境配一天“</strong>，我觉得最大的原因就是因为，很多资料因为系统版本的不同导致我们不能直接照搬，对很多东西我们其实对于底层的东西没有深入的了解（反正我是这样，所以配环境很多时候就是csdn找，代码copy过来用，不行就换篇文章，如此往复而已，真的让人头疼。。。）</p><p><strong>这也让我明白了记录的重要性。。。</strong></p><h1 id="那么开始正题">那么，开始正题</h1><p>首先就是我去查了一些资料（csdn）</p><p><ahref="https://blog.csdn.net/m0_47673868/article/details/132410559#:~:text=本文介绍了如何在树莓派上使用dhcpcd和NetworkManager进行网络配置，包括静态IP设置、不同接口配置方法以及通过系统设置页面进行简单配置。文章提供了详细的命令和截图，适合运维、嵌入式硬件和linux爱好者参考。">树莓派配置静态ip的几种方式（dhcpcd和Network-Manager）_树莓派怎么设置静态ip-CSDN博客</a></p><hr /><h2 id="修改配置文件">修改配置文件</h2><p>这篇博客第一种方法是去修改配置文件<code>sudo nano /etc/dhcpcd.conf</code>，但是呢，因为树莓派的系统版本不一样（这篇博客还算时间比较近的了，23年8.29，我是在24年8.31弄的），系统版本不一样导致的就是我输入<code>sudo nano /etc/dhcpcd.conf</code>会显示这是一个新的文件（图片底部<code>new file</code>都给我整不会了。。。）：</p><p><img src="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240831030936887.png" alt="image-20240831030936887" style="zoom:67%;" /></p><p>第二种方法我输入<code>sudo nano /etc/network/interfaces</code>，出来下面这些，不是空的，感觉应该可以尝试这种方法（但我没有用，因为我有显示器，所以我直接用第三种，当然也可以用vnc来操作hhhhh，但是<strong>修改以后需要断开网络重新连接</strong>，这样vnc就断了）</p><p>（<strong>尝试以后的我回来了。。。不行，这个操作以后无线网络都连不了了我。。。pass</strong>）</p><p><img src="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240831031514686.png" alt="image-20240831031514686" style="zoom:67%;" /></p><p>我也把具体要写（复制）在里面的东西放下边：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">auto lo<br>iface lo inet loopback<br> <br>auto eth0<br>iface eth0 inet dhcp<br>auto wlan0<br>allow-hotplug wlan0<br>iface wlan0 inet static//静态地址<br>address 192.168.1.65<br>netmask 255.255.255.0<br>gateway 192.168.1.1<br>network 192.168.1.1<br> <br>wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf //wifi帐号密码文件<br></code></pre></td></tr></table></figure><blockquote><p>对上边的代码我要有一些补充说明，有一些是在使用图形界面进行配置的时候也是要注意的</p><ol type="1"><li><code>eht0</code>指的是有线网络（就是给树莓派插上网线的，咱不是整的这个变成静态的所以让它auto）</li><li><code>wlan0</code>就是咱要搞的无线网络，咱要把它弄成静态的</li><li><code>adress</code>就是你要设置的静态IP地址是多少，但是捏，这个咱也不能照抄（我照抄以后去ping，ping不通。。。）</li><li><code>netmask</code>就是掩码，<code>gateway</code>叫网关，还有后边这个<code>network</code>就不用解释了，这三个咋设置应该是不可以照抄的（凭我的经验是这样，hhh。。。具体咋弄我一起在<strong>使用显示器</strong>部分说）</li></ol></blockquote><hr /><h2 id="使用显示器or-vnc-等其他能够支持gui界面操作的">使用显示器（or VNC等其他能够支持gui界面操作的）</h2><p><em>（我这边虽然讲的使用显示器，但是在树莓派截完图再传到我电脑上我觉得太麻烦了，而且现在是凌晨三点半，，，我真不想弄了）</em></p><h4 id="第一步">第一步</h4><p>终端输入<code>ifconfig</code>，查看一些信息</p><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240831033722178.png"alt="image-20240831033722178" /><figcaption aria-hidden="true">image-20240831033722178</figcaption></figure><blockquote><p>看我红色框的地方（这个IP是我已经修改成静态ip以后的，我原本的是192.168.244.24）这些信息后边咱还要用到</p></blockquote><h4 id="第二步跟着图片做就行">第二步，跟着图片做就行</h4><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240831034154.jpg"alt="微信图片_20240831034154" /><figcaption aria-hidden="true">微信图片_20240831034154</figcaption></figure><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240831034218.jpg"alt="微信图片_20240831034218" /><figcaption aria-hidden="true">微信图片_20240831034218</figcaption></figure><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20240831034222.jpg"alt="微信图片_20240831034222" /><figcaption aria-hidden="true">微信图片_20240831034222</figcaption></figure><blockquote><p>最重要的到了，还记得之前咱用<code>ifconfig</code>看的信息不</p><ol type="1"><li>掩码<code>netmask</code>就24就行</li><li><code>address</code>你就只改最后一个<code>.</code>后面的数字就行，<strong>前面三个数都和你用<code>ifconfig</code>一样（192.168不用解释，但第三个数我一改成别的，然后就ping不上了，然后ssh也连不上了）</strong></li><li>gateway也是前三个和<code>ifconfig</code>的一样，然后最后一个是1，DNS和searchdomains也是</li><li>设置完保存save然后重新连接网络就行</li></ol></blockquote><p>最后就是咱ping一下看看行不行，<strong>最后再声明一下，这是我自己摸索的，然后很多东西不是很确定现在。</strong></p><h2 id="补充可能可以尝试的路径">补充可能可以尝试的路径</h2><p>再附上下边这个资料，是我参加另一位同学做的整理，我觉得是可以的，但我没有实际操作过，要注意的可能就是<strong>看看你的树莓派有没有配置netplan</strong>，没有的话就执行下边的指令安装一下：</p><p><strong>（实际操作发现，好像也不行，问题挺多的，但我熬不下去了。。。）</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> apt update<br><span class="hljs-built_in">sudo</span> apt install netplan.io<br></code></pre></td></tr></table></figure><h3 id="固定树莓派ip">固定树莓派IP</h3><ol type="1"><li>运行<code>ifconfig</code></li></ol><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/clip_image002.jpg"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><ol start="2" type="1"><li><code>sudo nano /etc/netplan/50-cloud-init.yaml</code></li></ol><p>​ 运行上面的命令打开网络配置文件</p><ol start="3" type="1"><li>将代码复制到文本里，<strong>格式很重要，</strong>根据自己的IP地址改里面的地址</li></ol><p>​</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">network:</span><br>  <span class="hljs-attr">ethernets:</span><br>    <span class="hljs-attr">eth0:</span><br>      <span class="hljs-attr">dhcp4:</span> <span class="hljs-literal">false</span><br>      <span class="hljs-attr">dhcp6:</span> <span class="hljs-literal">no</span><br>      <span class="hljs-attr">addresses:</span> [<span class="hljs-number">192.168</span><span class="hljs-number">.253</span><span class="hljs-number">.88</span><span class="hljs-string">/24</span>]<br>      <span class="hljs-attr">gateway4:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.253</span><span class="hljs-number">.1</span><br>      <span class="hljs-attr">nameservers:</span><br>        <span class="hljs-attr">addresses:</span> [<span class="hljs-number">114.114</span><span class="hljs-number">.114</span><span class="hljs-number">.114</span>, <span class="hljs-number">8.8</span><span class="hljs-number">.8</span><span class="hljs-number">.8</span>]<br>  <span class="hljs-attr">wifis:</span><br>    <span class="hljs-attr">wlan0:</span><br>      <span class="hljs-attr">access-points:</span><br>        <span class="hljs-string">&quot;自己的WiFi名&quot;</span><span class="hljs-string">:</span><br>          <span class="hljs-attr">password:</span> <span class="hljs-string">&quot;WiFi密码&quot;</span><br>      <span class="hljs-attr">dhcp4:</span> <span class="hljs-literal">false</span><br>      <span class="hljs-attr">dhcp6:</span> <span class="hljs-literal">no</span><br>      <span class="hljs-attr">addresses:</span> [<span class="hljs-number">192.168</span><span class="hljs-number">.253</span><span class="hljs-number">.8</span><span class="hljs-string">/24</span>]<br>      <span class="hljs-attr">gateway4:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.253</span><span class="hljs-number">.1</span><br>      <span class="hljs-attr">nameservers:</span><br>        <span class="hljs-attr">addresses:</span> [<span class="hljs-number">114.114</span><span class="hljs-number">.114</span><span class="hljs-number">.114</span>, <span class="hljs-number">8.8</span><span class="hljs-number">.8</span><span class="hljs-number">.8</span>]<br>  <span class="hljs-attr">version:</span> <span class="hljs-number">2</span><br><br></code></pre></td></tr></table></figure><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/clip_image004.jpg"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><ol start="4" type="1"><li><p><code>ctrl+x</code>退出 <code>y</code>保存 回车退出</p></li><li><p><code>sudo netplan try</code>保存配置</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">Do you want <span class="hljs-built_in">to</span> keep these settings?<br><br>Press ENTER <span class="hljs-keyword">before</span> <span class="hljs-keyword">the</span> timeout <span class="hljs-built_in">to</span> accept <span class="hljs-keyword">the</span> <span class="hljs-built_in">new</span> configuration<br><br>Changes will revert <span class="hljs-keyword">in</span> <span class="hljs-number">120</span> <span class="hljs-built_in">seconds</span><br></code></pre></td></tr></table></figure></li></ol><p>出现这几条语句即为配置成功</p>]]></content>
    
    
    <categories>
      
      <category>树莓派 静态IP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>树莓派 静态IP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>树莓派与stm32串口通信</title>
    <link href="/2024/08/31/%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%8Estm32%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1/"/>
    <url>/2024/08/31/%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%8Estm32%E4%B8%B2%E5%8F%A3%E9%80%9A%E4%BF%A1/</url>
    
    <content type="html"><![CDATA[<p>老规矩，链接先放：</p><p><ahref="https://blog.csdn.net/black_sneak/article/details/131484958">基于树莓派4B与STM32的UART串口通信实验（代码开源）_树莓派4b串口波特率-CSDN博客</a></p><p>主要是新的树莓派串口映射关系的更改要参考别的文章，下面这篇：</p><p><ahref="https://blog.csdn.net/weixin_74750999/article/details/131726117">树莓派4B串口的配置找不到Serial1（系统是目前最新的2024.4）_树莓派没有serial1-CSDN博客</a></p><blockquote><p>在交换映射关系时候，应该输入<code>sudo nano /boot/firmware/config.txt</code>，上面的参考博客输入的<code>sudo nano /boot/config.txt</code>会显示这个文件已经被移到<code>firmware</code>文件夹下了</p></blockquote><p>然后在末尾添加下面这个代码，然后重启就行了</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">dtoverlay</span><span class="hljs-operator">=</span>pi3-miniuart-bt<br></code></pre></td></tr></table></figure><figure><imgsrc="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/image-20240831141137604.png"alt="image-20240831141137604" /><figcaption aria-hidden="true">image-20240831141137604</figcaption></figure>]]></content>
    
    
    <categories>
      
      <category>树莓派 stm32 串口通信</category>
      
    </categories>
    
    
    <tags>
      
      <tag>树莓派 stm32 串口通信</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何搭建自己的博客（整理）</title>
    <link href="/2024/08/27/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%EF%BC%88%E6%95%B4%E7%90%86%EF%BC%89/"/>
    <url>/2024/08/27/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%EF%BC%88%E6%95%B4%E7%90%86%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>太懒了，直接把搭建这个博客时候参考的链接放这：</p><p><ahref="https://blog.csdn.net/yushuaigee/article/details/111465155">从零开始免费搭建自己的博客(一)——本地搭建hexo框架_从头开始博客搭建-CSDN博客</a></p><p>安装hexo时候用npm命令很慢（我挂梯子也觉得很慢），所以可以安装一个镜像，后边需要用npm命令的都换成cnpm的就行</p><p><ahref="https://blog.csdn.net/qq_59012240/article/details/128448457">【cnpm】cnpm的安装方法（附详细步骤）_cnpm安装-CSDN博客</a></p><hr /><p><ahref="https://blog.csdn.net/yushuaigee/article/details/111825875">[从零开始免费搭建自己的博客(二)——基于GitHub pages 建站_不依赖gitlab 搭建gitpage 站点-CSDN博客]</a></p><hr /><p><ahref="https://blog.csdn.net/yushuaigee/article/details/112597891">从零开始免费搭建自己的博客(五)——Typora+ PicGo + GitHub/Gitee图床_使用typora + giteepage-CSDN博客</a></p><hr /><p><ahref="https://theme-stun.github.io/docs/zh-CN/guide/quick-start.html#安装">快速开始| hexo-theme-stun</a></p><hr /><p>添加文章点击量统计：</p><p><ahref="https://blog.csdn.net/qq_48759664/article/details/119460188">Hexo-fluid主题设置统计博客阅读量_hexo-theme-fluid字数统计-CSDN博客</a></p><p>下面是learncloud网站</p><p>https://console.leancloud.cn/</p>]]></content>
    
    
    <categories>
      
      <category>参考链接</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Yolov5环境搭建（详细过程）</title>
    <link href="/2024/08/27/yolov5Env/"/>
    <url>/2024/08/27/yolov5Env/</url>
    
    <content type="html"><![CDATA[<p>这是我在用Yolov5做目标检测时的环境搭建过程以及训练的模型过程。</p><p>先把参考连接放这： <ahref="https://blog.csdn.net/qq_45945548/article/details/121701492?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522172377034416800180657489%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=172377034416800180657489&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-121701492-null-null.142%5Ev100%5Epc_search_result_base6&amp;utm_term=yolov5%E8%AE%AD%E7%BB%83%E8%87%AA%E5%B7%B1%E7%9A%84%E6%95%B0%E6%8D%AE%E9%9B%86&amp;spm=1018.2226.3001.4187">Yolov5训练自己的数据集（详细完整版）</a></p><p>然后环境的话就用Anaconda安装pyhton3.9就行</p><h1 id="安装anaconda">1. 安装Anaconda</h1><p>Anaconda是一个用于科学计算的Python发行版，包含了众多科学计算相关的库。Anaconda提供了包管理器和环境管理器，可以方便地安装、更新和卸载Python包，并且可以创建多个独立的环境，每个环境可以包含不同版本的Python和不同的包，方便进行多项目的管理和隔离。详细的安装步骤可以参考这个教程<br /><ahref="https://blog.csdn.net/fan18317517352/article/details/123035625">Anaconda超详细安装教程（Windows环境下）</a></p><hr /><h1 id="创建虚拟环境">2. 创建虚拟环境</h1><p>在Anaconda中，可以使用conda命令创建虚拟环境。虚拟环境是一种隔离的环境，可以在其中安装和管理Python包，而不会影响系统级别的Python环境。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda create -n yolov5 python=3.9  <span class="hljs-comment">#在终端中运行这段代码</span><br></code></pre></td></tr></table></figure><p>也可以在Anaconda的GUI界面中创建虚拟环境：</p><p><img src="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/1.png" alt="1" width="600" height="400"></p><p><img src="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/2.png" alt="2" width="600" height="400"></p><p>然后在终端中激活虚拟环境，后面在终端中进行的操作都是在你虚拟环境中进行的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda activate yolov5<br></code></pre></td></tr></table></figure><hr /><h1 id="下载yolov5">3. 下载yolov5</h1><p>用Git下载yolov5代码，我这里也放个<ahref="链接：https://pan.baidu.com/s/1LTA4aF5dsB1WBrN7i1jFOg?pwd=6666">百度网盘链接（里边还有我收集好的数据集）</a>提取码：6666</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs git">git clone https://github.com/ultralytics/yolov5<br></code></pre></td></tr></table></figure><h1 id="在yolov5目录下和对应虚拟环境中安装依赖">4.在yolov5目录下和对应虚拟环境中安装依赖</h1><p>在文件资源管理器进入yolov5目录，打开终端（输入<code>cmd</code>），输入以下命令安装依赖：</p><p><img src="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/3.png" alt="3" width="600" height="400"></p><p>激活对应的虚拟环境后输入下面的命令安装依赖：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install -r requirements.txt <span class="hljs-comment">#安装依赖，这个可能比较慢，换清华源很快</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install -r requirements.txt -i  https://pypi.tuna.tsinghua.edu.cn/simple <span class="hljs-comment">#换清华源</span><br></code></pre></td></tr></table></figure><hr /><h1 id="训练自己模型前的准备工作">5. 训练自己模型前的准备工作</h1><h2 id="准备数据集">5.1 准备数据集</h2><p>具体参考我收集好的数据集(MyData文件夹)：</p><p><img src="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/4.png" alt="4" width="600" height="400"></p><h3 id="创建文件夹annotations和images">5.1.1创建文件夹：Annotations和images</h3><p>先创建MyData文件夹(也可以起其他名字)，然后在里面创建两个文件夹：Annotations文件夹用来存放标注文件，images文件夹用来存放图片(<strong>这两个文件夹的名字一定是这俩</strong>)创建标注文件需要我们安装一个python脚本，labelImg <ahref="https://github.com/tzutalin/labelImg">下载地址</a>，这里我们直接在刚创建的虚拟环境中安装就行：首先激活我们的虚拟环境：</p><p>然后安装labelImg：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install labelImg<br></code></pre></td></tr></table></figure><p>安装好以后我们运行它：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">labelImg<br></code></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/5.png" alt="5" width="600" height="400"></p><p>运行后会弹出一个窗口，我们点击<code>Change save directory</code>选择我们刚才创建的Annotations文件夹，然后点击<code>Open Dir</code>选择我们刚才创建的images文件夹，然后点击<code>Create RectBox</code>按钮，就可以开始标注了。这里有个<em>tip</em>：按<code>w</code>标注，<code>a</code>上一张，<code>d</code>下一张。为了方便，记得打开自动保存</p><p><img src="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/6.png" alt="6" width="600" height="400"></p><p>当然几百张照片，一张一张下载挺麻烦的，我这里有一个脚本<code>Video2imags.py</code>能够实现视频转图片：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#coding=utf8</span><br><span class="hljs-keyword">import</span> cv2 <span class="hljs-comment">#这是opencv库，如果你的虚拟环境中没有安装，可以先安装一下</span><br><span class="hljs-keyword">import</span> os<br><br><span class="hljs-comment">#此删除文件夹内容的函数来源于网上</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">del_file</span>(<span class="hljs-params">filepath</span>):<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    删除某一目录下的所有文件或文件夹</span><br><span class="hljs-string">    :param filepath: 路径</span><br><span class="hljs-string">    :return:</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    del_list = os.listdir(filepath)<br>    <span class="hljs-keyword">for</span> f <span class="hljs-keyword">in</span> del_list:<br>        file_path = os.path.join(filepath, f)<br>        <span class="hljs-keyword">if</span> os.path.isfile(file_path):<br>            os.remove(file_path)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">video_to_images</span>(<span class="hljs-params">fps,path</span>):<br>  cv = cv2.VideoCapture(path)<br>  <span class="hljs-keyword">if</span>(<span class="hljs-keyword">not</span> cv.isOpened()):<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;\n打开视频失败！请检查视频路径是否正确\n&quot;</span>)<br>    exit(<span class="hljs-number">0</span>)<br>  <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.exists(<span class="hljs-string">&quot;images/&quot;</span>):<br>    os.mkdir(<span class="hljs-string">&quot;images/&quot;</span>) <span class="hljs-comment"># 创建文件夹</span><br>  <span class="hljs-keyword">else</span>:<br>    del_file(<span class="hljs-string">&#x27;images/&#x27;</span>) <span class="hljs-comment"># 清空文件夹</span><br>  order = <span class="hljs-number">0</span>   <span class="hljs-comment">#序号</span><br>  h = <span class="hljs-number">0</span><br>  <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>    h=h+<span class="hljs-number">1</span><br>    rval, frame = cv.read()<br>    <span class="hljs-keyword">if</span> h == fps:<br>      h = <span class="hljs-number">0</span><br>      order = order + <span class="hljs-number">1</span><br>      <span class="hljs-keyword">if</span> rval:<br>        cv2.imwrite(<span class="hljs-string">&#x27;./images/&#x27;</span> + <span class="hljs-built_in">str</span>(order) + <span class="hljs-string">&#x27;.jpg&#x27;</span>, frame) <span class="hljs-comment">#图片保存位置以及命名方式</span><br>        cv2.waitKey(<span class="hljs-number">1</span>)<br>      <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">break</span><br>  cv.release()<br>  <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;\nsave success!\n&#x27;</span>)<br><br><span class="hljs-comment"># 参数设置</span><br>fps = <span class="hljs-number">1</span>   <span class="hljs-comment"># 隔多少帧取一张图  1表示全部取</span><br>path=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-comment"># 视频路径 比如 D:\\images\\tram_result.mp4 或者 D:/images/tram_result.mp4，注意斜杠的方向（在vscode中一定要注意路径的斜杠方向）</span><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>  video_to_images(fps,path)<br>  <span class="hljs-comment"># 会在代码的当前文件夹下 生成images文件夹 用于保存图片</span><br>  <span class="hljs-comment"># 如果有images文件夹，会清空文件夹！</span><br><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python video2image.py <span class="hljs-comment">#在终端中运行这个脚本</span><br></code></pre></td></tr></table></figure><p><em>要安装opencv库的同学看这里：</em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install opencv-python<br></code></pre></td></tr></table></figure><p>有了图片，就可以开始我们的标注了，注意尽量贴合目标进行标注。</p><h3 id="准备训练集和验证集">5.1.2 准备训练集和验证集</h3><p>训练集用来训练模型，验证集用来评估模型的效果。我们需要把数据集分成训练集和验证集。这里我们运行<code>split_train_val.py</code>就可以自动帮我们生成训练集和验证集，注意脚本里的一些代码需要根据你自己的需求来改（<em>如果打开代码发现中文注释乱码就切换一下编码方式重新打开</em>）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># coding=utf-8</span><br><span class="hljs-comment">#这个文件基本不用改动，主要是用来划分训练集和验证集的，可以根据自己的需要进行修改</span><br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> argparse<br><br>parser = argparse.ArgumentParser()<br><span class="hljs-comment">#xml文件的地址，根据自己的数据进行修改 xml一般存放在Annotations下</span><br>parser.add_argument(<span class="hljs-string">&#x27;--xml_path&#x27;</span>, default=<span class="hljs-string">&#x27;Annotations&#x27;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;input xml label path&#x27;</span>)<br><span class="hljs-comment">#数据集的划分，地址选择自己数据下的ImageSets/Main</span><br>parser.add_argument(<span class="hljs-string">&#x27;--txt_path&#x27;</span>, default=<span class="hljs-string">&#x27;ImageSets/Main&#x27;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">str</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;output txt label path&#x27;</span>)<br>opt = parser.parse_args()<br><br>trainval_percent = <span class="hljs-number">1.0</span>  <span class="hljs-comment"># 训练集和验证集所占比例。 这里没有划分测试集</span><br>train_percent = <span class="hljs-number">0.9</span>     <span class="hljs-comment"># 训练集所占比例，可自己进行调整</span><br>xmlfilepath = opt.xml_path<br>txtsavepath = opt.txt_path<br>total_xml = os.listdir(xmlfilepath)<br><span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.exists(txtsavepath):<br>    os.makedirs(txtsavepath)<br><br>num = <span class="hljs-built_in">len</span>(total_xml)<br>list_index = <span class="hljs-built_in">range</span>(num)<br>tv = <span class="hljs-built_in">int</span>(num * trainval_percent)<br>tr = <span class="hljs-built_in">int</span>(tv * train_percent)<br>trainval = random.sample(list_index, tv)<br>train = random.sample(trainval, tr)<br><br>file_trainval = <span class="hljs-built_in">open</span>(txtsavepath + <span class="hljs-string">&#x27;/trainval.txt&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>)<br>file_test = <span class="hljs-built_in">open</span>(txtsavepath + <span class="hljs-string">&#x27;/test.txt&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>)<br>file_train = <span class="hljs-built_in">open</span>(txtsavepath + <span class="hljs-string">&#x27;/train.txt&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>)<br>file_val = <span class="hljs-built_in">open</span>(txtsavepath + <span class="hljs-string">&#x27;/val.txt&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>)<br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> list_index:<br>    name = total_xml[i][:-<span class="hljs-number">4</span>] + <span class="hljs-string">&#x27;\n&#x27;</span><br>    <span class="hljs-keyword">if</span> i <span class="hljs-keyword">in</span> trainval:<br>        file_trainval.write(name)<br>        <span class="hljs-keyword">if</span> i <span class="hljs-keyword">in</span> train:<br>            file_train.write(name)<br>        <span class="hljs-keyword">else</span>:<br>            file_val.write(name)<br>    <span class="hljs-keyword">else</span>:<br>        file_test.write(name)<br><br>file_trainval.close()<br>file_train.close()<br>file_val.close()<br>file_test.close()<br><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python split_train_val.py <span class="hljs-comment">#在终端中运行这个脚本</span><br></code></pre></td></tr></table></figure><p>运行这个脚本会生成下面几个文件夹：<code>dataSet_path</code>,<code>Images</code>和<code>Images</code>下的<code>Main</code>,<code>Main</code>里边有对应的txt文件</p><p><img src="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/7.png" alt="7" width="600" height="400"></p><h3 id="准备标签文件">5.1.3 准备标签文件</h3><p>标签文件是用来告诉模型我们要检测什么，我们需要一个txt文件。这里我们运行<code>xml_to_yolo.py</code>就可以自动帮咱生成，注意这个代码要把路径改成自己的数据集路径，还有你的类别要改成自己的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-keyword">import</span> xml.etree.ElementTree <span class="hljs-keyword">as</span> ET<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">from</span> os <span class="hljs-keyword">import</span> getcwd<br><br>sets = [<span class="hljs-string">&#x27;train&#x27;</span>, <span class="hljs-string">&#x27;val&#x27;</span>, <span class="hljs-string">&#x27;test&#x27;</span>]<br>classes = [ <span class="hljs-string">&quot;shark&quot;</span>,<span class="hljs-string">&quot;turtle&quot;</span>,<span class="hljs-string">&quot;red&quot;</span>,<span class="hljs-string">&quot;octopus&quot;</span>,<span class="hljs-string">&quot;blue&quot;</span>]   <span class="hljs-comment"># 改成自己的类别</span><br>abs_path = os.getcwd()<br><span class="hljs-built_in">print</span>(abs_path)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">convert</span>(<span class="hljs-params">size, box</span>):<br>    dw = <span class="hljs-number">1.</span> / (size[<span class="hljs-number">0</span>])<br>    dh = <span class="hljs-number">1.</span> / (size[<span class="hljs-number">1</span>])<br>    x = (box[<span class="hljs-number">0</span>] + box[<span class="hljs-number">1</span>]) / <span class="hljs-number">2.0</span> - <span class="hljs-number">1</span><br>    y = (box[<span class="hljs-number">2</span>] + box[<span class="hljs-number">3</span>]) / <span class="hljs-number">2.0</span> - <span class="hljs-number">1</span><br>    w = box[<span class="hljs-number">1</span>] - box[<span class="hljs-number">0</span>]<br>    h = box[<span class="hljs-number">3</span>] - box[<span class="hljs-number">2</span>]<br>    x = x * dw<br>    w = w * dw<br>    y = y * dh<br>    h = h * dh<br>    <span class="hljs-keyword">return</span> x, y, w, h<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">convert_annotation</span>(<span class="hljs-params">image_id</span>):<br>    in_file = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;D:/fileForWhile/yolov5/MyData/Annotations/%s.xml&#x27;</span> % (image_id), encoding=<span class="hljs-string">&#x27;UTF-8&#x27;</span>)  <span class="hljs-comment"># 改成自己的路径</span><br>    out_file = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;D:/fileForWhile/yolov5/MyData/labels/%s.txt&#x27;</span> % (image_id), <span class="hljs-string">&#x27;w&#x27;</span>)  <span class="hljs-comment"># 改成自己的路径</span><br>    tree = ET.parse(in_file)<br>    root = tree.getroot()<br>    size = root.find(<span class="hljs-string">&#x27;size&#x27;</span>)<br>    w = <span class="hljs-built_in">int</span>(size.find(<span class="hljs-string">&#x27;width&#x27;</span>).text)<br>    h = <span class="hljs-built_in">int</span>(size.find(<span class="hljs-string">&#x27;height&#x27;</span>).text)<br>    <span class="hljs-keyword">for</span> obj <span class="hljs-keyword">in</span> root.<span class="hljs-built_in">iter</span>(<span class="hljs-string">&#x27;object&#x27;</span>):<br>        difficult = obj.find(<span class="hljs-string">&#x27;difficult&#x27;</span>).text<br>        <span class="hljs-comment">#difficult = obj.find(&#x27;Difficult&#x27;).text</span><br>        cls = obj.find(<span class="hljs-string">&#x27;name&#x27;</span>).text<br>        <span class="hljs-keyword">if</span> cls <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> classes <span class="hljs-keyword">or</span> <span class="hljs-built_in">int</span>(difficult) == <span class="hljs-number">1</span>:<br>            <span class="hljs-keyword">continue</span><br>        cls_id = classes.index(cls)<br>        xmlbox = obj.find(<span class="hljs-string">&#x27;bndbox&#x27;</span>)<br>        b = (<span class="hljs-built_in">float</span>(xmlbox.find(<span class="hljs-string">&#x27;xmin&#x27;</span>).text), <span class="hljs-built_in">float</span>(xmlbox.find(<span class="hljs-string">&#x27;xmax&#x27;</span>).text), <span class="hljs-built_in">float</span>(xmlbox.find(<span class="hljs-string">&#x27;ymin&#x27;</span>).text),<br>             <span class="hljs-built_in">float</span>(xmlbox.find(<span class="hljs-string">&#x27;ymax&#x27;</span>).text))<br>        b1, b2, b3, b4 = b<br>        <span class="hljs-comment"># 标注越界修正</span><br>        <span class="hljs-keyword">if</span> b2 &gt; w:<br>            b2 = w<br>        <span class="hljs-keyword">if</span> b4 &gt; h:<br>            b4 = h<br>        b = (b1, b2, b3, b4)<br>        bb = convert((w, h), b)<br>        out_file.write(<span class="hljs-built_in">str</span>(cls_id) + <span class="hljs-string">&quot; &quot;</span> + <span class="hljs-string">&quot; &quot;</span>.join([<span class="hljs-built_in">str</span>(a) <span class="hljs-keyword">for</span> a <span class="hljs-keyword">in</span> bb]) + <span class="hljs-string">&#x27;\n&#x27;</span>)<br><br>wd = getcwd()<br><span class="hljs-keyword">for</span> image_set <span class="hljs-keyword">in</span> sets:<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.exists(<span class="hljs-string">&#x27;D:/fileForWhile/yolov5/MyData/labels/&#x27;</span>):  <span class="hljs-comment"># 改成自己的路径</span><br>        os.makedirs(<span class="hljs-string">&#x27;D:/fileForWhile/yolov5/MyData/labels/&#x27;</span>) <span class="hljs-comment"># 改成自己的路径</span><br>    image_ids = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;D:/fileForWhile/yolov5/MyData/ImageSets/Main/%s.txt&#x27;</span> % (image_set)).read().strip().split()  <span class="hljs-comment"># 改成自己的路径</span><br>   <br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.exists(<span class="hljs-string">&#x27;D:/fileForWhile/yolov5/MyData/dataSet_path/&#x27;</span>):  <span class="hljs-comment"># 改成自己的路径</span><br>        os.makedirs(<span class="hljs-string">&#x27;D:/fileForWhile/yolov5/MyData/dataSet_path/&#x27;</span>) <span class="hljs-comment"># 改成自己的路径</span><br>     <br>    list_file = <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;dataSet_path/%s.txt&#x27;</span> % (image_set), <span class="hljs-string">&#x27;w&#x27;</span>)<br>    <span class="hljs-comment"># 这行路径不需更改，这是相对路径</span><br>    <span class="hljs-keyword">for</span> image_id <span class="hljs-keyword">in</span> image_ids:<br>        list_file.write(<span class="hljs-string">&#x27;D:/fileForWhile/yolov5/MyData/images/%s.jpg\n&#x27;</span> % (image_id))  <span class="hljs-comment"># 改成自己的路径</span><br>        convert_annotation(image_id)<br>    list_file.close()<br><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python xml_to_yolo.py <span class="hljs-comment">#在终端中运行这个脚本</span><br></code></pre></td></tr></table></figure><p>运行这个脚本会生成<code>labels</code>文件夹，里面有我们需要的txt文件。</p><p><img src="https://cdn.jsdelivr.net/gh/Qingyun0118/myblog@master/img/8.png" alt="1.打开Anaconda Navigator" width="600" height="400"></p><h3 id="准备配置文件">5.1.4 准备配置文件</h3><p>创建一个txt文件，名字叫<code>myvoc.txt</code>，将后缀修改为yaml，在记事本中进行编辑，内容如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 训练自己的数据集</span><br><span class="hljs-attr">train:</span> <span class="hljs-string">train.txt</span> <span class="hljs-comment"># 改成自己的train.txt路径，注意前边的空格</span><br><span class="hljs-attr">val:</span> <span class="hljs-string">val.txt</span> <span class="hljs-comment"># 改成自己的val.txt路径，注意前边的空格</span><br><br><span class="hljs-comment"># number of classes</span><br><span class="hljs-attr">nc:</span> <span class="hljs-number">5</span>  <span class="hljs-comment"># 改成自己的类别数量</span><br><br><span class="hljs-comment"># class names</span><br><span class="hljs-attr">names:</span> [<span class="hljs-string">&quot;shark&quot;</span>,<span class="hljs-string">&quot;turtle&quot;</span>,<span class="hljs-string">&quot;red&quot;</span>,<span class="hljs-string">&quot;octopus&quot;</span>,<span class="hljs-string">&quot;blue&quot;</span>] <span class="hljs-comment"># 改成自己的类别</span><br></code></pre></td></tr></table></figure><hr /><h1 id="训练模型">6. 训练模型</h1><h2 id="训练自己的数据集">6.1 训练自己的数据集</h2><p>我们需要训练自己的模型，这里我们运行<code>train.py</code>就可以训练我们的模型：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">python train.py --weights weights/yolov5s.pt  --cfg models/yolov5s.yaml  --data data/myvoc.yaml --epoch <span class="hljs-number">200</span> --batch-size <span class="hljs-number">8</span> --img <span class="hljs-number">640</span>   --device cpu<br></code></pre></td></tr></table></figure><p><strong>参数解释</strong></p><ul><li><code>--weights</code>：指定预训练权重，这里我们使用的是<code>yolov5s.pt</code>，如果没有下载，你运行后它会自己下载的</li><li><code>--cfg</code>：指定模型配置文件，这里我们使用的是yolov5s.yaml</li><li><code>--data</code>：指定数据集配置文件，这里我们使用的是myvoc.yaml。这个要改成你自己的配置文件路径。</li><li><code>--epoch</code>：指定训练的轮数，这里我们设置为200。训练200次</li><li><code>--batch-size</code>：指定训练的batchsize，这里我们设置为8。训练8张图片后进行权重更新</li><li><code>--img</code>：指定训练的图片大小，这里我们设置为640。</li><li><code>--device</code>：指定训练的设备，这里我们设置为cpu。当然cpu会比较慢而且如果你cpu不咋行会报一些错，如果可以建议用GPU训练。</li></ul><h2 id="使用gpu训练">6.2 使用GPU训练</h2><p>使用GPU训练需要你安装pytorch，这边直接放参考链接吧： <ahref="https://blog.csdn.net/MCYZSF/article/details/116525159">安装PyTorch详细过程</a>注意还是在我们的虚拟环境yolov5中安装的，装好以后运行train.py的参数中将<code>--device cpu</code>改成<code>--device 0</code>即可。</p><h2 id="训练结果检验">6.3 训练结果检验</h2><p>训练结束以后我们在<code>runs\train\exp\weights</code>下可以看到两个文件<code>best.pt</code>和<code>last.pt</code>，<code>best.pt</code>是我们训练的最佳权重，<code>last.pt</code>是我们训练的最后一次权重。</p><p>我们可以用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">python detect.py --weights runs/train/exp6/weights/best.pt --source MyData/output.MP4<br></code></pre></td></tr></table></figure><p>来测试一下我们的模型效果。</p><p><strong>参数解释</strong></p><ul><li><code>--weights</code>：指定训练好的权重，这里我们使用的是<code>runs/train/exp6/weights/best.pt</code></li><li><code>--source</code>：指定测试的视频或者图片路径，这里我们使用的是<code>MyData/output.MP4</code></li></ul><hr /><h1 id="总结">7. 总结</h1><p>至此，我们已经完成了yolov5的环境搭建、数据集的准备、训练模型、测试模型等一系列操作。yolov5是一个非常强大的目标检测模型，它可以检测出很多种类别的目标，而且它的速度也非常快，可以应用于各种场景。而yolov5移植到树莓派上实现使用摄像头对目标的检测，我刚开始是这样想的，在树莓派上安装minianaconda，然后搭建一个和windows一样的虚拟环境，装好需要的依赖，然后在树莓派上运行detect.py文件就好了，<strong>但实际上树莓派是linux操作系统，直接运行Windows系统上跑出来的模型是不行的好像</strong>。后边我才知道，原来yolov5还有一个<code>export.py</code>脚本，可以将训练好的模型导出为ONNX格式，这样就可以在树莓派上运行了。并且在树莓派上安装4.5以上的opencv就可以用实现了。</p><p>要用<code>export.py</code>导出ONNX格式的模型，我们需要先安装<code>onnx</code>库，然后运行<code>export.py</code>脚本，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install onnx<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">python export.py --weights runs/train/exp6/weights/best.pt --img <span class="hljs-number">640</span> --batch <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>更具体可以去看b站这个视频：<ahref="https://www.bilibili.com/video/BV1RF411P7GC/?spm_id_from=333.999.0.0&amp;vd_source=b94f6aa4bb4f3465ef91f93357149559">树莓派：YOLOV5目标检测-模型训练与移植</a>，获取这个视频里的代码<ahref="https://gitee.com/yuhong-ldu/python-raspberry-pi/tree/master/EXP-ONNX">YuHong-LDU/Python-RaspberryPI- Gitee.com</a></p><p>然后下面是树莓派上运行的代码，是上边那个视频里的，但视频里只演示了对单张图片的代码，下边这个是对视频或者摄像头的：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> cv2<br><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">plot_one_box</span>(<span class="hljs-params">x, img, color=<span class="hljs-literal">None</span>, label=<span class="hljs-literal">None</span>, line_thickness=<span class="hljs-literal">None</span></span>):<br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    description: Plots one bounding box on image img,</span><br><span class="hljs-string">                 this function comes from YoLov5 project.</span><br><span class="hljs-string">    param: </span><br><span class="hljs-string">        x:      a box likes [x1,y1,x2,y2]</span><br><span class="hljs-string">        img:    a opencv image object</span><br><span class="hljs-string">        color:  color to draw rectangle, such as (0,255,0)</span><br><span class="hljs-string">        label:  str</span><br><span class="hljs-string">        line_thickness: int</span><br><span class="hljs-string">    return:</span><br><span class="hljs-string">        no return</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    tl = (<br>        line_thickness <span class="hljs-keyword">or</span> <span class="hljs-built_in">round</span>(<span class="hljs-number">0.002</span> * (img.shape[<span class="hljs-number">0</span>] + img.shape[<span class="hljs-number">1</span>]) / <span class="hljs-number">2</span>) + <span class="hljs-number">1</span><br>    )  <span class="hljs-comment"># line/font thickness</span><br>    color = color <span class="hljs-keyword">or</span> [random.randint(<span class="hljs-number">0</span>, <span class="hljs-number">255</span>) <span class="hljs-keyword">for</span> _ <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">3</span>)]<br>    c1, c2 = (<span class="hljs-built_in">int</span>(x[<span class="hljs-number">0</span>]), <span class="hljs-built_in">int</span>(x[<span class="hljs-number">1</span>])), (<span class="hljs-built_in">int</span>(x[<span class="hljs-number">2</span>]), <span class="hljs-built_in">int</span>(x[<span class="hljs-number">3</span>]))<br>    cv2.rectangle(img, c1, c2, color, thickness=tl, lineType=cv2.LINE_AA)<br>    <span class="hljs-keyword">if</span> label:<br>        tf = <span class="hljs-built_in">max</span>(tl - <span class="hljs-number">1</span>, <span class="hljs-number">1</span>)  <span class="hljs-comment"># font thickness</span><br>        t_size = cv2.getTextSize(label, <span class="hljs-number">0</span>, fontScale=tl / <span class="hljs-number">3</span>, thickness=tf)[<span class="hljs-number">0</span>]<br>        c2 = c1[<span class="hljs-number">0</span>] + t_size[<span class="hljs-number">0</span>], c1[<span class="hljs-number">1</span>] - t_size[<span class="hljs-number">1</span>] - <span class="hljs-number">3</span><br>        cv2.rectangle(img, c1, c2, color, -<span class="hljs-number">1</span>, cv2.LINE_AA)  <span class="hljs-comment"># filled</span><br>        cv2.putText(<br>            img,<br>            label,<br>            (c1[<span class="hljs-number">0</span>], c1[<span class="hljs-number">1</span>] - <span class="hljs-number">2</span>),<br>            <span class="hljs-number">0</span>,<br>            tl / <span class="hljs-number">3</span>,<br>            [<span class="hljs-number">225</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>],<br>            thickness=tf,<br>            lineType=cv2.LINE_AA,<br>        )<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">post_process_opencv</span>(<span class="hljs-params">outputs,model_h,model_w,img_h,img_w,thred_nms,thred_cond</span>):<br>    <br>    conf = outputs[:,<span class="hljs-number">4</span>].tolist()<br>    c_x = outputs[:,<span class="hljs-number">0</span>]/model_w*img_w<br>    c_y = outputs[:,<span class="hljs-number">1</span>]/model_h*img_h<br>    w  = outputs[:,<span class="hljs-number">2</span>]/model_w*img_w<br>    h  = outputs[:,<span class="hljs-number">3</span>]/model_h*img_h<br>    p_cls = outputs[:,<span class="hljs-number">5</span>:]<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(p_cls.shape)==<span class="hljs-number">1</span>:<br>        p_cls = np.expand_dims(p_cls,<span class="hljs-number">1</span>)<br>    cls_id = np.argmax(p_cls,axis=<span class="hljs-number">1</span>)<br><br>    p_x1 = np.expand_dims(c_x-w/<span class="hljs-number">2</span>,-<span class="hljs-number">1</span>)<br>    p_y1 = np.expand_dims(c_y-h/<span class="hljs-number">2</span>,-<span class="hljs-number">1</span>)<br>    p_x2 = np.expand_dims(c_x+w/<span class="hljs-number">2</span>,-<span class="hljs-number">1</span>)<br>    p_y2 = np.expand_dims(c_y+h/<span class="hljs-number">2</span>,-<span class="hljs-number">1</span>)<br>    areas = np.concatenate((p_x1,p_y1,p_x2,p_y2),axis=-<span class="hljs-number">1</span>)<br>    <span class="hljs-comment"># print(areas.shape) </span><br>    areas = areas.tolist()<br>    ids = cv2.dnn.NMSBoxes(areas,conf,thred_cond,thred_nms)<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(ids)&gt;<span class="hljs-number">0</span>:<br>        <span class="hljs-keyword">return</span>  np.array(areas)[ids],np.array(conf)[ids],cls_id[ids]<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> [],[],[]<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">infer_image</span>(<span class="hljs-params">net,img0,model_h,model_w,thred_nms=<span class="hljs-number">0.4</span>,thred_cond=<span class="hljs-number">0.5</span></span>):<br><br>    img = img0.copy()<br>    img = cv2.resize(img,[model_h,model_w])<br>    blob = cv2.dnn.blobFromImage(img, scalefactor=<span class="hljs-number">1</span>/<span class="hljs-number">255.0</span>, swapRB=<span class="hljs-literal">True</span>)<br>    net.setInput(blob)<br>    outs = net.forward()[<span class="hljs-number">0</span>]<br>    <span class="hljs-built_in">print</span>(outs[<span class="hljs-number">0</span>])<br>    det_boxes,scores,ids = post_process_opencv(outs,model_h,model_w,img0.shape[<span class="hljs-number">0</span>],img0.shape[<span class="hljs-number">1</span>],thred_nms,thred_cond)<br>    <span class="hljs-keyword">return</span> det_boxes,scores,ids<br><br><br><span class="hljs-keyword">if</span> __name__==<span class="hljs-string">&quot;__main__&quot;</span>:<br>    dic_labels= &#123;<span class="hljs-number">0</span>:<span class="hljs-string">&#x27;led&#x27;</span>,<br>            <span class="hljs-number">1</span>:<span class="hljs-string">&#x27;buzzer&#x27;</span>,<br>            <span class="hljs-number">2</span>:<span class="hljs-string">&#x27;teeth&#x27;</span>&#125;<br><br>    model_h = <span class="hljs-number">640</span><br>    model_w = <span class="hljs-number">640</span><br>    file_model = <span class="hljs-string">&#x27;best-led-640.onnx&#x27;</span><br>    net = cv2.dnn.readNet(file_model)<br>    <br>    video = <span class="hljs-number">0</span><br>    cap = cv2.VideoCapture(video)<br>    flag_det = <span class="hljs-literal">False</span><br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        success, img0 = cap.read()<br>        <span class="hljs-keyword">if</span> success:<br>            <br>            <span class="hljs-keyword">if</span> flag_det:<br>                t1 = time.time()<br>                det_boxes,scores,ids = infer_image(net,img0,model_h,model_w,thred_nms=<span class="hljs-number">0.4</span>,thred_cond=<span class="hljs-number">0.2</span>)<br>                t2 = time.time()<br>                <br>                <span class="hljs-keyword">for</span> box,score,<span class="hljs-built_in">id</span> <span class="hljs-keyword">in</span> <span class="hljs-built_in">zip</span>(det_boxes,scores,ids):<br>                    label = <span class="hljs-string">&#x27;%s:%.2f&#x27;</span>%(dic_labels[<span class="hljs-built_in">id</span>],score)<br>            <br>                    plot_one_box(box.astype(np.int16), img0, color=(<span class="hljs-number">255</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>), label=label, line_thickness=<span class="hljs-literal">None</span>)<br>                    <br>                str_FPS = <span class="hljs-string">&quot;FPS: %.2f&quot;</span>%(<span class="hljs-number">1.</span>/(t2-t1))<br>                <br>                cv2.putText(img0,str_FPS,(<span class="hljs-number">50</span>,<span class="hljs-number">50</span>),cv2.FONT_HERSHEY_COMPLEX,<span class="hljs-number">1</span>,(<span class="hljs-number">0</span>,<span class="hljs-number">255</span>,<span class="hljs-number">0</span>),<span class="hljs-number">3</span>)<br>            <br>            <br>            cv2.imshow(<span class="hljs-string">&quot;video&quot;</span>,img0)<br>        m_key = cv2.waitKey(<span class="hljs-number">1</span>) &amp; <span class="hljs-number">0xFF</span><br>        <br>        <span class="hljs-keyword">if</span> m_key == <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;s&#x27;</span>):<br>            flag_det = <span class="hljs-keyword">not</span> flag_det<br>            <span class="hljs-keyword">if</span> flag_det ==  <span class="hljs-literal">True</span>:<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;start detecting&quot;</span>)<br>            <span class="hljs-keyword">else</span>:<br>                <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;stop detecting&quot;</span>)<br>        <span class="hljs-keyword">elif</span> m_key == <span class="hljs-built_in">ord</span>(<span class="hljs-string">&#x27;q&#x27;</span>):<br>            <span class="hljs-keyword">break</span><br>            <br>    cap.release() <br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>环境搭建</category>
      
    </categories>
    
    
    <tags>
      
      <tag>blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
